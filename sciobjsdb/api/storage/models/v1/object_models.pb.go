// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: sciobjsdb/api/storage/models/v1/object_models.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RevisionCounter int64                `protobuf:"varint,2,opt,name=revision_counter,json=revisionCounter,proto3" json:"revision_counter,omitempty"`
	CurrentRevision *ObjectGroupRevision `protobuf:"bytes,3,opt,name=current_revision,json=currentRevision,proto3" json:"current_revision,omitempty"`
	DatasetId       string               `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	ProjectId       string               `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ObjectGroup) Reset() {
	*x = ObjectGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGroup) ProtoMessage() {}

func (x *ObjectGroup) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGroup.ProtoReflect.Descriptor instead.
func (*ObjectGroup) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ObjectGroup) GetRevisionCounter() int64 {
	if x != nil {
		return x.RevisionCounter
	}
	return 0
}

func (x *ObjectGroup) GetCurrentRevision() *ObjectGroupRevision {
	if x != nil {
		return x.CurrentRevision
	}
	return nil
}

func (x *ObjectGroup) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ObjectGroup) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ObjectGroupRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DatasetId       string                 `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	ProjectId       string                 `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Labels          []*Label               `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	Annotations     []*Annotation          `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Status          Status                 `protobuf:"varint,8,opt,name=status,proto3,enum=sciobjsdb.api.storage.models.v1.Status" json:"status,omitempty"`
	Objects         []*Object              `protobuf:"bytes,9,rep,name=objects,proto3" json:"objects,omitempty"`
	MetadataObjects []*Object              `protobuf:"bytes,10,rep,name=metadata_objects,json=metadataObjects,proto3" json:"metadata_objects,omitempty"`
	Generated       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=generated,proto3" json:"generated,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created,proto3" json:"created,omitempty"`
	Stats           *ObjectGroupStats      `protobuf:"bytes,13,opt,name=stats,proto3" json:"stats,omitempty"`
	Subpath         *Subpath               `protobuf:"bytes,15,opt,name=subpath,proto3" json:"subpath,omitempty"` // Expected external path; Can be used when downloading data; Should be a relative path
	ObjectGroupId   string                 `protobuf:"bytes,16,opt,name=object_group_id,json=objectGroupId,proto3" json:"object_group_id,omitempty"`
	RevisionNumber  int64                  `protobuf:"varint,17,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"` //Number in the history, will be assigned after the ObjectGroupRevision has been finalized
}

func (x *ObjectGroupRevision) Reset() {
	*x = ObjectGroupRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGroupRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGroupRevision) ProtoMessage() {}

func (x *ObjectGroupRevision) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGroupRevision.ProtoReflect.Descriptor instead.
func (*ObjectGroupRevision) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectGroupRevision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ObjectGroupRevision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectGroupRevision) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ObjectGroupRevision) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *ObjectGroupRevision) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ObjectGroupRevision) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ObjectGroupRevision) GetAnnotations() []*Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ObjectGroupRevision) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *ObjectGroupRevision) GetObjects() []*Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ObjectGroupRevision) GetMetadataObjects() []*Object {
	if x != nil {
		return x.MetadataObjects
	}
	return nil
}

func (x *ObjectGroupRevision) GetGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.Generated
	}
	return nil
}

func (x *ObjectGroupRevision) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ObjectGroupRevision) GetStats() *ObjectGroupStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ObjectGroupRevision) GetSubpath() *Subpath {
	if x != nil {
		return x.Subpath
	}
	return nil
}

func (x *ObjectGroupRevision) GetObjectGroupId() string {
	if x != nil {
		return x.ObjectGroupId
	}
	return ""
}

func (x *ObjectGroupRevision) GetRevisionNumber() int64 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

type ObjectGroupStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectCount     int64   `protobuf:"varint,1,opt,name=object_count,json=objectCount,proto3" json:"object_count,omitempty"`
	AccSize         int64   `protobuf:"varint,2,opt,name=acc_size,json=accSize,proto3" json:"acc_size,omitempty"`
	AvgObjectSize   float64 `protobuf:"fixed64,3,opt,name=avg_object_size,json=avgObjectSize,proto3" json:"avg_object_size,omitempty"`
	MetaObjectCount int64   `protobuf:"varint,4,opt,name=meta_object_count,json=metaObjectCount,proto3" json:"meta_object_count,omitempty"`
}

func (x *ObjectGroupStats) Reset() {
	*x = ObjectGroupStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGroupStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGroupStats) ProtoMessage() {}

func (x *ObjectGroupStats) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGroupStats.ProtoReflect.Descriptor instead.
func (*ObjectGroupStats) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectGroupStats) GetObjectCount() int64 {
	if x != nil {
		return x.ObjectCount
	}
	return 0
}

func (x *ObjectGroupStats) GetAccSize() int64 {
	if x != nil {
		return x.AccSize
	}
	return 0
}

func (x *ObjectGroupStats) GetAvgObjectSize() float64 {
	if x != nil {
		return x.AvgObjectSize
	}
	return 0
}

func (x *ObjectGroupStats) GetMetaObjectCount() int64 {
	if x != nil {
		return x.MetaObjectCount
	}
	return 0
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             //ID of the entity
	Filename        string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` // Filename: Name of the original file e.g.: mydata.json
	Filetype        string                 `protobuf:"bytes,3,opt,name=filetype,proto3" json:"filetype,omitempty"` // Filetype: The specific type of the file, which can be the combination of a format like json and a specific schema (e.g. mzML using XML format and a specific schema)
	Labels          []*Label               `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Annotations     []*Annotation          `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`     // When the data object was created
	Locations       []*Location            `protobuf:"bytes,7,rep,name=locations,proto3" json:"locations,omitempty"` // Location: Location of the data
	DefaultLocation *Location              `protobuf:"bytes,18,opt,name=default_location,json=defaultLocation,proto3" json:"default_location,omitempty"`
	Origin          *Origin                `protobuf:"bytes,8,opt,name=origin,proto3" json:"origin,omitempty"`                            // Origin: Source of the dataset
	ContentLen      int64                  `protobuf:"varint,9,opt,name=content_len,json=contentLen,proto3" json:"content_len,omitempty"` // ContentLen: Lenght of the stored dataset
	Generated       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=generated,proto3" json:"generated,omitempty"`
	ObjectGroupId   string                 `protobuf:"bytes,12,opt,name=object_group_id,json=objectGroupId,proto3" json:"object_group_id,omitempty"`
	DatasetId       string                 `protobuf:"bytes,13,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	ProjectId       string                 `protobuf:"bytes,14,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status          Status                 `protobuf:"varint,15,opt,name=status,proto3,enum=sciobjsdb.api.storage.models.v1.Status" json:"status,omitempty"`
	Stats           *ObjectStats           `protobuf:"bytes,16,opt,name=stats,proto3" json:"stats,omitempty"`
	Fileformat      string                 `protobuf:"bytes,17,opt,name=fileformat,proto3" json:"fileformat,omitempty"` // Fileformat: Format of the stored file, e.g.: json, csv,...
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{3}
}

func (x *Object) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Object) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Object) GetFiletype() string {
	if x != nil {
		return x.Filetype
	}
	return ""
}

func (x *Object) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Object) GetAnnotations() []*Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Object) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Object) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *Object) GetDefaultLocation() *Location {
	if x != nil {
		return x.DefaultLocation
	}
	return nil
}

func (x *Object) GetOrigin() *Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Object) GetContentLen() int64 {
	if x != nil {
		return x.ContentLen
	}
	return 0
}

func (x *Object) GetGenerated() *timestamppb.Timestamp {
	if x != nil {
		return x.Generated
	}
	return nil
}

func (x *Object) GetObjectGroupId() string {
	if x != nil {
		return x.ObjectGroupId
	}
	return ""
}

func (x *Object) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *Object) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Object) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Object) GetStats() *ObjectStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Object) GetFileformat() string {
	if x != nil {
		return x.Fileformat
	}
	return ""
}

type ObjectStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ObjectStats) Reset() {
	*x = ObjectStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectStats) ProtoMessage() {}

func (x *ObjectStats) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectStats.ProtoReflect.Descriptor instead.
func (*ObjectStats) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{4}
}

type Subpath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Subpath) Reset() {
	*x = Subpath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subpath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subpath) ProtoMessage() {}

func (x *Subpath) ProtoReflect() protoreflect.Message {
	mi := &file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subpath.ProtoReflect.Descriptor instead.
func (*Subpath) Descriptor() ([]byte, []int) {
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP(), []int{5}
}

func (x *Subpath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_sciobjsdb_api_storage_models_v1_object_models_proto protoreflect.FileDescriptor

var file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDesc = []byte{
	0x0a, 0x33, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x33, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64,
	0x62, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a,
	0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x5f, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xce, 0x06, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a,
	0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62,
	0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x70, 0x61, 0x74, 0x68, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x61, 0x63, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x76,
	0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x61, 0x76, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d,
	0x65, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb,
	0x06, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73,
	0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x63, 0x69, 0x6f,
	0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x54, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x63, 0x69, 0x6f,
	0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64,
	0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a,
	0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a,
	0x73, 0x64, 0x62, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x0d, 0x0a, 0x0b,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x1d, 0x0a, 0x07, 0x53,
	0x75, 0x62, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x9a, 0x01, 0x0a, 0x44, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x53, 0x63, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x44, 0x42, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64, 0x62, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x50, 0x01, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x53, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x44, 0x42,
	0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x62, 0x6a, 0x73, 0x64,
	0x62, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescOnce sync.Once
	file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescData = file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDesc
)

func file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescGZIP() []byte {
	file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescOnce.Do(func() {
		file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescData)
	})
	return file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDescData
}

var file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sciobjsdb_api_storage_models_v1_object_models_proto_goTypes = []interface{}{
	(*ObjectGroup)(nil),           // 0: sciobjsdb.api.storage.models.v1.ObjectGroup
	(*ObjectGroupRevision)(nil),   // 1: sciobjsdb.api.storage.models.v1.ObjectGroupRevision
	(*ObjectGroupStats)(nil),      // 2: sciobjsdb.api.storage.models.v1.ObjectGroupStats
	(*Object)(nil),                // 3: sciobjsdb.api.storage.models.v1.Object
	(*ObjectStats)(nil),           // 4: sciobjsdb.api.storage.models.v1.ObjectStats
	(*Subpath)(nil),               // 5: sciobjsdb.api.storage.models.v1.Subpath
	(*Label)(nil),                 // 6: sciobjsdb.api.storage.models.v1.Label
	(*Annotation)(nil),            // 7: sciobjsdb.api.storage.models.v1.Annotation
	(Status)(0),                   // 8: sciobjsdb.api.storage.models.v1.Status
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*Location)(nil),              // 10: sciobjsdb.api.storage.models.v1.Location
	(*Origin)(nil),                // 11: sciobjsdb.api.storage.models.v1.Origin
}
var file_sciobjsdb_api_storage_models_v1_object_models_proto_depIdxs = []int32{
	1,  // 0: sciobjsdb.api.storage.models.v1.ObjectGroup.current_revision:type_name -> sciobjsdb.api.storage.models.v1.ObjectGroupRevision
	6,  // 1: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.labels:type_name -> sciobjsdb.api.storage.models.v1.Label
	7,  // 2: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.annotations:type_name -> sciobjsdb.api.storage.models.v1.Annotation
	8,  // 3: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.status:type_name -> sciobjsdb.api.storage.models.v1.Status
	3,  // 4: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.objects:type_name -> sciobjsdb.api.storage.models.v1.Object
	3,  // 5: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.metadata_objects:type_name -> sciobjsdb.api.storage.models.v1.Object
	9,  // 6: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.generated:type_name -> google.protobuf.Timestamp
	9,  // 7: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.created:type_name -> google.protobuf.Timestamp
	2,  // 8: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.stats:type_name -> sciobjsdb.api.storage.models.v1.ObjectGroupStats
	5,  // 9: sciobjsdb.api.storage.models.v1.ObjectGroupRevision.subpath:type_name -> sciobjsdb.api.storage.models.v1.Subpath
	6,  // 10: sciobjsdb.api.storage.models.v1.Object.labels:type_name -> sciobjsdb.api.storage.models.v1.Label
	7,  // 11: sciobjsdb.api.storage.models.v1.Object.annotations:type_name -> sciobjsdb.api.storage.models.v1.Annotation
	9,  // 12: sciobjsdb.api.storage.models.v1.Object.created:type_name -> google.protobuf.Timestamp
	10, // 13: sciobjsdb.api.storage.models.v1.Object.locations:type_name -> sciobjsdb.api.storage.models.v1.Location
	10, // 14: sciobjsdb.api.storage.models.v1.Object.default_location:type_name -> sciobjsdb.api.storage.models.v1.Location
	11, // 15: sciobjsdb.api.storage.models.v1.Object.origin:type_name -> sciobjsdb.api.storage.models.v1.Origin
	9,  // 16: sciobjsdb.api.storage.models.v1.Object.generated:type_name -> google.protobuf.Timestamp
	8,  // 17: sciobjsdb.api.storage.models.v1.Object.status:type_name -> sciobjsdb.api.storage.models.v1.Status
	4,  // 18: sciobjsdb.api.storage.models.v1.Object.stats:type_name -> sciobjsdb.api.storage.models.v1.ObjectStats
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_sciobjsdb_api_storage_models_v1_object_models_proto_init() }
func file_sciobjsdb_api_storage_models_v1_object_models_proto_init() {
	if File_sciobjsdb_api_storage_models_v1_object_models_proto != nil {
		return
	}
	file_sciobjsdb_api_storage_models_v1_common_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGroupRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGroupStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subpath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sciobjsdb_api_storage_models_v1_object_models_proto_goTypes,
		DependencyIndexes: file_sciobjsdb_api_storage_models_v1_object_models_proto_depIdxs,
		MessageInfos:      file_sciobjsdb_api_storage_models_v1_object_models_proto_msgTypes,
	}.Build()
	File_sciobjsdb_api_storage_models_v1_object_models_proto = out.File
	file_sciobjsdb_api_storage_models_v1_object_models_proto_rawDesc = nil
	file_sciobjsdb_api_storage_models_v1_object_models_proto_goTypes = nil
	file_sciobjsdb_api_storage_models_v1_object_models_proto_depIdxs = nil
}
