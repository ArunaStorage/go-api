// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: aruna/api/internal/v1/notification.proto

package v1

import (
	v1 "github.com/ArunaStorage/go-api/aruna/api/storage/models/v1"
	v11 "github.com/ArunaStorage/go-api/aruna/api/storage/services/v1"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectGroupRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SharedObjectGroupId string   `protobuf:"bytes,1,opt,name=shared_object_group_id,json=sharedObjectGroupId,proto3" json:"shared_object_group_id,omitempty"`
	ObjectGroupIds      []string `protobuf:"bytes,2,rep,name=object_group_ids,json=objectGroupIds,proto3" json:"object_group_ids,omitempty"`
}

func (x *ObjectGroupRelation) Reset() {
	*x = ObjectGroupRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectGroupRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectGroupRelation) ProtoMessage() {}

func (x *ObjectGroupRelation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectGroupRelation.ProtoReflect.Descriptor instead.
func (*ObjectGroupRelation) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *ObjectGroupRelation) GetSharedObjectGroupId() string {
	if x != nil {
		return x.SharedObjectGroupId
	}
	return ""
}

func (x *ObjectGroupRelation) GetObjectGroupIds() []string {
	if x != nil {
		return x.ObjectGroupIds
	}
	return nil
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The shared revision id of an object
	SharedObject string `protobuf:"bytes,1,opt,name=shared_object,json=sharedObject,proto3" json:"shared_object,omitempty"`
	// The associated objectgroup(s)
	ObjectGroups []*ObjectGroupRelation `protobuf:"bytes,2,rep,name=object_groups,json=objectGroups,proto3" json:"object_groups,omitempty"`
	// Collection ID
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	// Project ID
	Project string `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *Relation) GetSharedObject() string {
	if x != nil {
		return x.SharedObject
	}
	return ""
}

func (x *Relation) GetObjectGroups() []*ObjectGroupRelation {
	if x != nil {
		return x.ObjectGroups
	}
	return nil
}

func (x *Relation) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *Relation) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

type EmitEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource Type e.g. Collection / Object etc.
	EventResource v1.ResourceType `protobuf:"varint,1,opt,name=event_resource,json=eventResource,proto3,enum=aruna.api.storage.models.v1.ResourceType" json:"event_resource,omitempty"`
	// The resource ID
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Event type (CRUD)
	EventType v11.EventType `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=aruna.api.notification.services.v1.EventType" json:"event_type,omitempty"`
	// All relations of the resource, only parents are shown
	Relations []*Relation `protobuf:"bytes,4,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *EmitEventRequest) Reset() {
	*x = EmitEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmitEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitEventRequest) ProtoMessage() {}

func (x *EmitEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitEventRequest.ProtoReflect.Descriptor instead.
func (*EmitEventRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *EmitEventRequest) GetEventResource() v1.ResourceType {
	if x != nil {
		return x.EventResource
	}
	return v1.ResourceType(0)
}

func (x *EmitEventRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *EmitEventRequest) GetEventType() v11.EventType {
	if x != nil {
		return x.EventType
	}
	return v11.EventType(0)
}

func (x *EmitEventRequest) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type EmitEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmitEventResponse) Reset() {
	*x = EmitEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmitEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitEventResponse) ProtoMessage() {}

func (x *EmitEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitEventResponse.ProtoReflect.Descriptor instead.
func (*EmitEventResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{3}
}

type StreamGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Stream group ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Event this streamgroup is listening for
	EventType v11.EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=aruna.api.notification.services.v1.EventType" json:"event_type,omitempty"`
	// Type of the resource (Collection, Object etc.)
	ResourceType v1.ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=aruna.api.storage.models.v1.ResourceType" json:"resource_type,omitempty"`
	// Resource ID
	ResourceId string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Should all "sub" resources be included
	NotifyOnSubResource bool `protobuf:"varint,5,opt,name=notify_on_sub_resource,json=notifyOnSubResource,proto3" json:"notify_on_sub_resource,omitempty"`
}

func (x *StreamGroup) Reset() {
	*x = StreamGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGroup) ProtoMessage() {}

func (x *StreamGroup) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGroup.ProtoReflect.Descriptor instead.
func (*StreamGroup) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *StreamGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamGroup) GetEventType() v11.EventType {
	if x != nil {
		return x.EventType
	}
	return v11.EventType(0)
}

func (x *StreamGroup) GetResourceType() v1.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return v1.ResourceType(0)
}

func (x *StreamGroup) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *StreamGroup) GetNotifyOnSubResource() bool {
	if x != nil {
		return x.NotifyOnSubResource
	}
	return false
}

type CreateStreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Authorization for the user who wants to create this stream group
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Event type
	EventType v11.EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=aruna.api.notification.services.v1.EventType" json:"event_type,omitempty"`
	// Type of the resource (Collection, Object etc.)
	ResourceType v1.ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=aruna.api.storage.models.v1.ResourceType" json:"resource_type,omitempty"`
	// Resource ID
	ResourceId string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Should all "sub" resources be included
	NotifyOnSubResource bool `protobuf:"varint,5,opt,name=notify_on_sub_resource,json=notifyOnSubResource,proto3" json:"notify_on_sub_resource,omitempty"`
}

func (x *CreateStreamGroupRequest) Reset() {
	*x = CreateStreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamGroupRequest) ProtoMessage() {}

func (x *CreateStreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateStreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStreamGroupRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateStreamGroupRequest) GetEventType() v11.EventType {
	if x != nil {
		return x.EventType
	}
	return v11.EventType(0)
}

func (x *CreateStreamGroupRequest) GetResourceType() v1.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return v1.ResourceType(0)
}

func (x *CreateStreamGroupRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CreateStreamGroupRequest) GetNotifyOnSubResource() bool {
	if x != nil {
		return x.NotifyOnSubResource
	}
	return false
}

type CreateStreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The stream_group
	StreamGroup *StreamGroup `protobuf:"bytes,1,opt,name=stream_group,json=streamGroup,proto3" json:"stream_group,omitempty"`
}

func (x *CreateStreamGroupResponse) Reset() {
	*x = CreateStreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamGroupResponse) ProtoMessage() {}

func (x *CreateStreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateStreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStreamGroupResponse) GetStreamGroup() *StreamGroup {
	if x != nil {
		return x.StreamGroup
	}
	return nil
}

type GetStreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Stream group ID
	StreamGroupId string `protobuf:"bytes,2,opt,name=stream_group_id,json=streamGroupId,proto3" json:"stream_group_id,omitempty"`
}

func (x *GetStreamGroupRequest) Reset() {
	*x = GetStreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamGroupRequest) ProtoMessage() {}

func (x *GetStreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamGroupRequest.ProtoReflect.Descriptor instead.
func (*GetStreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *GetStreamGroupRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetStreamGroupRequest) GetStreamGroupId() string {
	if x != nil {
		return x.StreamGroupId
	}
	return ""
}

type GetStreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Stream group
	StreamGroup *StreamGroup `protobuf:"bytes,1,opt,name=stream_group,json=streamGroup,proto3" json:"stream_group,omitempty"`
}

func (x *GetStreamGroupResponse) Reset() {
	*x = GetStreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamGroupResponse) ProtoMessage() {}

func (x *GetStreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamGroupResponse.ProtoReflect.Descriptor instead.
func (*GetStreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *GetStreamGroupResponse) GetStreamGroup() *StreamGroup {
	if x != nil {
		return x.StreamGroup
	}
	return nil
}

type DeleteStreamGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Stream group ID
	StreamGroupId string `protobuf:"bytes,2,opt,name=stream_group_id,json=streamGroupId,proto3" json:"stream_group_id,omitempty"`
}

func (x *DeleteStreamGroupRequest) Reset() {
	*x = DeleteStreamGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStreamGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamGroupRequest) ProtoMessage() {}

func (x *DeleteStreamGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteStreamGroupRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteStreamGroupRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeleteStreamGroupRequest) GetStreamGroupId() string {
	if x != nil {
		return x.StreamGroupId
	}
	return ""
}

type DeleteStreamGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStreamGroupResponse) Reset() {
	*x = DeleteStreamGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStreamGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamGroupResponse) ProtoMessage() {}

func (x *DeleteStreamGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteStreamGroupResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{10}
}

type GetSharedRevisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource Type (ObjectGroup or Object)
	ResourceType v1.ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=aruna.api.storage.models.v1.ResourceType" json:"resource_type,omitempty"`
	// Resource ID
	ResourceId string `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *GetSharedRevisionRequest) Reset() {
	*x = GetSharedRevisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedRevisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedRevisionRequest) ProtoMessage() {}

func (x *GetSharedRevisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedRevisionRequest.ProtoReflect.Descriptor instead.
func (*GetSharedRevisionRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *GetSharedRevisionRequest) GetResourceType() v1.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return v1.ResourceType(0)
}

func (x *GetSharedRevisionRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type GetSharedRevisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Shared revision ID
	SharedRevisionId string `protobuf:"bytes,1,opt,name=shared_revision_id,json=sharedRevisionId,proto3" json:"shared_revision_id,omitempty"`
}

func (x *GetSharedRevisionResponse) Reset() {
	*x = GetSharedRevisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharedRevisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharedRevisionResponse) ProtoMessage() {}

func (x *GetSharedRevisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_internal_v1_notification_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharedRevisionResponse.ProtoReflect.Descriptor instead.
func (*GetSharedRevisionResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_internal_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *GetSharedRevisionResponse) GetSharedRevisionId() string {
	if x != nil {
		return x.SharedRevisionId
	}
	return ""
}

var File_aruna_api_internal_v1_notification_proto protoreflect.FileDescriptor

var file_aruna_api_internal_v1_notification_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0xba, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x4f, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x10, 0x45,
	0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x13, 0x0a, 0x11, 0x45, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x6e,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x6e, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4f, 0x6e, 0x53, 0x75, 0x62, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x62, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x58, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4e, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0x91, 0x01, 0x0a, 0x1b,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x09, 0x45,
	0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x10, 0xfa,
	0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x32,
	0x87, 0x04, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x10, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x0a, 0x12,
	0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aruna_api_internal_v1_notification_proto_rawDescOnce sync.Once
	file_aruna_api_internal_v1_notification_proto_rawDescData = file_aruna_api_internal_v1_notification_proto_rawDesc
)

func file_aruna_api_internal_v1_notification_proto_rawDescGZIP() []byte {
	file_aruna_api_internal_v1_notification_proto_rawDescOnce.Do(func() {
		file_aruna_api_internal_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_internal_v1_notification_proto_rawDescData)
	})
	return file_aruna_api_internal_v1_notification_proto_rawDescData
}

var file_aruna_api_internal_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aruna_api_internal_v1_notification_proto_goTypes = []interface{}{
	(*ObjectGroupRelation)(nil),       // 0: aruna.api.internal.v1.ObjectGroupRelation
	(*Relation)(nil),                  // 1: aruna.api.internal.v1.Relation
	(*EmitEventRequest)(nil),          // 2: aruna.api.internal.v1.EmitEventRequest
	(*EmitEventResponse)(nil),         // 3: aruna.api.internal.v1.EmitEventResponse
	(*StreamGroup)(nil),               // 4: aruna.api.internal.v1.StreamGroup
	(*CreateStreamGroupRequest)(nil),  // 5: aruna.api.internal.v1.CreateStreamGroupRequest
	(*CreateStreamGroupResponse)(nil), // 6: aruna.api.internal.v1.CreateStreamGroupResponse
	(*GetStreamGroupRequest)(nil),     // 7: aruna.api.internal.v1.GetStreamGroupRequest
	(*GetStreamGroupResponse)(nil),    // 8: aruna.api.internal.v1.GetStreamGroupResponse
	(*DeleteStreamGroupRequest)(nil),  // 9: aruna.api.internal.v1.DeleteStreamGroupRequest
	(*DeleteStreamGroupResponse)(nil), // 10: aruna.api.internal.v1.DeleteStreamGroupResponse
	(*GetSharedRevisionRequest)(nil),  // 11: aruna.api.internal.v1.GetSharedRevisionRequest
	(*GetSharedRevisionResponse)(nil), // 12: aruna.api.internal.v1.GetSharedRevisionResponse
	(v1.ResourceType)(0),              // 13: aruna.api.storage.models.v1.ResourceType
	(v11.EventType)(0),                // 14: aruna.api.notification.services.v1.EventType
}
var file_aruna_api_internal_v1_notification_proto_depIdxs = []int32{
	0,  // 0: aruna.api.internal.v1.Relation.object_groups:type_name -> aruna.api.internal.v1.ObjectGroupRelation
	13, // 1: aruna.api.internal.v1.EmitEventRequest.event_resource:type_name -> aruna.api.storage.models.v1.ResourceType
	14, // 2: aruna.api.internal.v1.EmitEventRequest.event_type:type_name -> aruna.api.notification.services.v1.EventType
	1,  // 3: aruna.api.internal.v1.EmitEventRequest.relations:type_name -> aruna.api.internal.v1.Relation
	14, // 4: aruna.api.internal.v1.StreamGroup.event_type:type_name -> aruna.api.notification.services.v1.EventType
	13, // 5: aruna.api.internal.v1.StreamGroup.resource_type:type_name -> aruna.api.storage.models.v1.ResourceType
	14, // 6: aruna.api.internal.v1.CreateStreamGroupRequest.event_type:type_name -> aruna.api.notification.services.v1.EventType
	13, // 7: aruna.api.internal.v1.CreateStreamGroupRequest.resource_type:type_name -> aruna.api.storage.models.v1.ResourceType
	4,  // 8: aruna.api.internal.v1.CreateStreamGroupResponse.stream_group:type_name -> aruna.api.internal.v1.StreamGroup
	4,  // 9: aruna.api.internal.v1.GetStreamGroupResponse.stream_group:type_name -> aruna.api.internal.v1.StreamGroup
	13, // 10: aruna.api.internal.v1.GetSharedRevisionRequest.resource_type:type_name -> aruna.api.storage.models.v1.ResourceType
	2,  // 11: aruna.api.internal.v1.InternalEventEmitterService.EmitEvent:input_type -> aruna.api.internal.v1.EmitEventRequest
	5,  // 12: aruna.api.internal.v1.InternalEventService.CreateStreamGroup:input_type -> aruna.api.internal.v1.CreateStreamGroupRequest
	7,  // 13: aruna.api.internal.v1.InternalEventService.GetStreamGroup:input_type -> aruna.api.internal.v1.GetStreamGroupRequest
	9,  // 14: aruna.api.internal.v1.InternalEventService.DeleteStreamGroup:input_type -> aruna.api.internal.v1.DeleteStreamGroupRequest
	11, // 15: aruna.api.internal.v1.InternalEventService.GetSharedRevision:input_type -> aruna.api.internal.v1.GetSharedRevisionRequest
	3,  // 16: aruna.api.internal.v1.InternalEventEmitterService.EmitEvent:output_type -> aruna.api.internal.v1.EmitEventResponse
	6,  // 17: aruna.api.internal.v1.InternalEventService.CreateStreamGroup:output_type -> aruna.api.internal.v1.CreateStreamGroupResponse
	8,  // 18: aruna.api.internal.v1.InternalEventService.GetStreamGroup:output_type -> aruna.api.internal.v1.GetStreamGroupResponse
	10, // 19: aruna.api.internal.v1.InternalEventService.DeleteStreamGroup:output_type -> aruna.api.internal.v1.DeleteStreamGroupResponse
	12, // 20: aruna.api.internal.v1.InternalEventService.GetSharedRevision:output_type -> aruna.api.internal.v1.GetSharedRevisionResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_aruna_api_internal_v1_notification_proto_init() }
func file_aruna_api_internal_v1_notification_proto_init() {
	if File_aruna_api_internal_v1_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_internal_v1_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectGroupRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmitEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmitEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStreamGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStreamGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedRevisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_internal_v1_notification_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharedRevisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_internal_v1_notification_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_aruna_api_internal_v1_notification_proto_goTypes,
		DependencyIndexes: file_aruna_api_internal_v1_notification_proto_depIdxs,
		MessageInfos:      file_aruna_api_internal_v1_notification_proto_msgTypes,
	}.Build()
	File_aruna_api_internal_v1_notification_proto = out.File
	file_aruna_api_internal_v1_notification_proto_rawDesc = nil
	file_aruna_api_internal_v1_notification_proto_goTypes = nil
	file_aruna_api_internal_v1_notification_proto_depIdxs = nil
}
