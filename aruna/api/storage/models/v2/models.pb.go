// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aruna/api/storage/models/v2/models.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------- ENUMS ------------------------
// Defines the public announcement type
type AnnouncementType int32

const (
	AnnouncementType_ANNOUNCEMENT_TYPE_UNSPECIFIED AnnouncementType = 0
	AnnouncementType_ANNOUNCEMENT_TYPE_ORGA        AnnouncementType = 1
	AnnouncementType_ANNOUNCEMENT_TYPE_RELEASE     AnnouncementType = 2
	AnnouncementType_ANNOUNCEMENT_TYPE_UPDATE      AnnouncementType = 3
	AnnouncementType_ANNOUNCEMENT_TYPE_MAINTENANCE AnnouncementType = 4
	AnnouncementType_ANNOUNCEMENT_TYPE_BLOG        AnnouncementType = 5
)

// Enum value maps for AnnouncementType.
var (
	AnnouncementType_name = map[int32]string{
		0: "ANNOUNCEMENT_TYPE_UNSPECIFIED",
		1: "ANNOUNCEMENT_TYPE_ORGA",
		2: "ANNOUNCEMENT_TYPE_RELEASE",
		3: "ANNOUNCEMENT_TYPE_UPDATE",
		4: "ANNOUNCEMENT_TYPE_MAINTENANCE",
		5: "ANNOUNCEMENT_TYPE_BLOG",
	}
	AnnouncementType_value = map[string]int32{
		"ANNOUNCEMENT_TYPE_UNSPECIFIED": 0,
		"ANNOUNCEMENT_TYPE_ORGA":        1,
		"ANNOUNCEMENT_TYPE_RELEASE":     2,
		"ANNOUNCEMENT_TYPE_UPDATE":      3,
		"ANNOUNCEMENT_TYPE_MAINTENANCE": 4,
		"ANNOUNCEMENT_TYPE_BLOG":        5,
	}
)

func (x AnnouncementType) Enum() *AnnouncementType {
	p := new(AnnouncementType)
	*p = x
	return p
}

func (x AnnouncementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnnouncementType) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[0].Descriptor()
}

func (AnnouncementType) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[0]
}

func (x AnnouncementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnnouncementType.Descriptor instead.
func (AnnouncementType) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{0}
}

// Dataclass defines the confidentiality of the object
type DataClass int32

const (
	DataClass_DATA_CLASS_UNSPECIFIED  DataClass = 0
	DataClass_DATA_CLASS_PUBLIC       DataClass = 1
	DataClass_DATA_CLASS_PRIVATE      DataClass = 2
	DataClass_DATA_CLASS_WORKSPACE    DataClass = 4
	DataClass_DATA_CLASS_CONFIDENTIAL DataClass = 5
)

// Enum value maps for DataClass.
var (
	DataClass_name = map[int32]string{
		0: "DATA_CLASS_UNSPECIFIED",
		1: "DATA_CLASS_PUBLIC",
		2: "DATA_CLASS_PRIVATE",
		4: "DATA_CLASS_WORKSPACE",
		5: "DATA_CLASS_CONFIDENTIAL",
	}
	DataClass_value = map[string]int32{
		"DATA_CLASS_UNSPECIFIED":  0,
		"DATA_CLASS_PUBLIC":       1,
		"DATA_CLASS_PRIVATE":      2,
		"DATA_CLASS_WORKSPACE":    4,
		"DATA_CLASS_CONFIDENTIAL": 5,
	}
)

func (x DataClass) Enum() *DataClass {
	p := new(DataClass)
	*p = x
	return p
}

func (x DataClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataClass) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[1].Descriptor()
}

func (DataClass) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[1]
}

func (x DataClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataClass.Descriptor instead.
func (DataClass) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{1}
}

// Which kind of endpoint
type EndpointVariant int32

const (
	EndpointVariant_ENDPOINT_VARIANT_UNSPECIFIED EndpointVariant = 0
	EndpointVariant_ENDPOINT_VARIANT_PERSISTENT  EndpointVariant = 1
	EndpointVariant_ENDPOINT_VARIANT_VOLATILE    EndpointVariant = 2
)

// Enum value maps for EndpointVariant.
var (
	EndpointVariant_name = map[int32]string{
		0: "ENDPOINT_VARIANT_UNSPECIFIED",
		1: "ENDPOINT_VARIANT_PERSISTENT",
		2: "ENDPOINT_VARIANT_VOLATILE",
	}
	EndpointVariant_value = map[string]int32{
		"ENDPOINT_VARIANT_UNSPECIFIED": 0,
		"ENDPOINT_VARIANT_PERSISTENT":  1,
		"ENDPOINT_VARIANT_VOLATILE":    2,
	}
)

func (x EndpointVariant) Enum() *EndpointVariant {
	p := new(EndpointVariant)
	*p = x
	return p
}

func (x EndpointVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndpointVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[2].Descriptor()
}

func (EndpointVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[2]
}

func (x EndpointVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndpointVariant.Descriptor instead.
func (EndpointVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{2}
}

// Which features does the endpoint have
type EndpointHostVariant int32

const (
	EndpointHostVariant_ENDPOINT_HOST_VARIANT_UNSPECIFIED EndpointHostVariant = 0
	EndpointHostVariant_ENDPOINT_HOST_VARIANT_GRPC        EndpointHostVariant = 1
	EndpointHostVariant_ENDPOINT_HOST_VARIANT_S3          EndpointHostVariant = 2
)

// Enum value maps for EndpointHostVariant.
var (
	EndpointHostVariant_name = map[int32]string{
		0: "ENDPOINT_HOST_VARIANT_UNSPECIFIED",
		1: "ENDPOINT_HOST_VARIANT_GRPC",
		2: "ENDPOINT_HOST_VARIANT_S3",
	}
	EndpointHostVariant_value = map[string]int32{
		"ENDPOINT_HOST_VARIANT_UNSPECIFIED": 0,
		"ENDPOINT_HOST_VARIANT_GRPC":        1,
		"ENDPOINT_HOST_VARIANT_S3":          2,
	}
)

func (x EndpointHostVariant) Enum() *EndpointHostVariant {
	p := new(EndpointHostVariant)
	*p = x
	return p
}

func (x EndpointHostVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndpointHostVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[3].Descriptor()
}

func (EndpointHostVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[3]
}

func (x EndpointHostVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndpointHostVariant.Descriptor instead.
func (EndpointHostVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{3}
}

// Permission Levels
type PermissionLevel int32

const (
	PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED PermissionLevel = 0
	PermissionLevel_PERMISSION_LEVEL_NONE        PermissionLevel = 2
	PermissionLevel_PERMISSION_LEVEL_READ        PermissionLevel = 3
	PermissionLevel_PERMISSION_LEVEL_APPEND      PermissionLevel = 4
	PermissionLevel_PERMISSION_LEVEL_WRITE       PermissionLevel = 5
	PermissionLevel_PERMISSION_LEVEL_ADMIN       PermissionLevel = 6
)

// Enum value maps for PermissionLevel.
var (
	PermissionLevel_name = map[int32]string{
		0: "PERMISSION_LEVEL_UNSPECIFIED",
		2: "PERMISSION_LEVEL_NONE",
		3: "PERMISSION_LEVEL_READ",
		4: "PERMISSION_LEVEL_APPEND",
		5: "PERMISSION_LEVEL_WRITE",
		6: "PERMISSION_LEVEL_ADMIN",
	}
	PermissionLevel_value = map[string]int32{
		"PERMISSION_LEVEL_UNSPECIFIED": 0,
		"PERMISSION_LEVEL_NONE":        2,
		"PERMISSION_LEVEL_READ":        3,
		"PERMISSION_LEVEL_APPEND":      4,
		"PERMISSION_LEVEL_WRITE":       5,
		"PERMISSION_LEVEL_ADMIN":       6,
	}
)

func (x PermissionLevel) Enum() *PermissionLevel {
	p := new(PermissionLevel)
	*p = x
	return p
}

func (x PermissionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[4].Descriptor()
}

func (PermissionLevel) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[4]
}

func (x PermissionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionLevel.Descriptor instead.
func (PermissionLevel) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{4}
}

// KeyValueVariants
type KeyValueVariant int32

const (
	KeyValueVariant_KEY_VALUE_VARIANT_UNSPECIFIED  KeyValueVariant = 0
	KeyValueVariant_KEY_VALUE_VARIANT_LABEL        KeyValueVariant = 1
	KeyValueVariant_KEY_VALUE_VARIANT_STATIC_LABEL KeyValueVariant = 2 // A Label that only admins can remove
	KeyValueVariant_KEY_VALUE_VARIANT_HOOK         KeyValueVariant = 3
	KeyValueVariant_KEY_VALUE_VARIANT_HOOK_STATUS  KeyValueVariant = 4
)

// Enum value maps for KeyValueVariant.
var (
	KeyValueVariant_name = map[int32]string{
		0: "KEY_VALUE_VARIANT_UNSPECIFIED",
		1: "KEY_VALUE_VARIANT_LABEL",
		2: "KEY_VALUE_VARIANT_STATIC_LABEL",
		3: "KEY_VALUE_VARIANT_HOOK",
		4: "KEY_VALUE_VARIANT_HOOK_STATUS",
	}
	KeyValueVariant_value = map[string]int32{
		"KEY_VALUE_VARIANT_UNSPECIFIED":  0,
		"KEY_VALUE_VARIANT_LABEL":        1,
		"KEY_VALUE_VARIANT_STATIC_LABEL": 2,
		"KEY_VALUE_VARIANT_HOOK":         3,
		"KEY_VALUE_VARIANT_HOOK_STATUS":  4,
	}
)

func (x KeyValueVariant) Enum() *KeyValueVariant {
	p := new(KeyValueVariant)
	*p = x
	return p
}

func (x KeyValueVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyValueVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[5].Descriptor()
}

func (KeyValueVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[5]
}

func (x KeyValueVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyValueVariant.Descriptor instead.
func (KeyValueVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{5}
}

// External Relations
type ExternalRelationVariant int32

const (
	ExternalRelationVariant_EXTERNAL_RELATION_VARIANT_UNSPECIFIED ExternalRelationVariant = 0
	ExternalRelationVariant_EXTERNAL_RELATION_VARIANT_URL         ExternalRelationVariant = 1
	ExternalRelationVariant_EXTERNAL_RELATION_VARIANT_IDENTIFIER  ExternalRelationVariant = 2
	ExternalRelationVariant_EXTERNAL_RELATION_VARIANT_CUSTOM      ExternalRelationVariant = 3
)

// Enum value maps for ExternalRelationVariant.
var (
	ExternalRelationVariant_name = map[int32]string{
		0: "EXTERNAL_RELATION_VARIANT_UNSPECIFIED",
		1: "EXTERNAL_RELATION_VARIANT_URL",
		2: "EXTERNAL_RELATION_VARIANT_IDENTIFIER",
		3: "EXTERNAL_RELATION_VARIANT_CUSTOM",
	}
	ExternalRelationVariant_value = map[string]int32{
		"EXTERNAL_RELATION_VARIANT_UNSPECIFIED": 0,
		"EXTERNAL_RELATION_VARIANT_URL":         1,
		"EXTERNAL_RELATION_VARIANT_IDENTIFIER":  2,
		"EXTERNAL_RELATION_VARIANT_CUSTOM":      3,
	}
)

func (x ExternalRelationVariant) Enum() *ExternalRelationVariant {
	p := new(ExternalRelationVariant)
	*p = x
	return p
}

func (x ExternalRelationVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalRelationVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[6].Descriptor()
}

func (ExternalRelationVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[6]
}

func (x ExternalRelationVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExternalRelationVariant.Descriptor instead.
func (ExternalRelationVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{6}
}

// InternalRelations
type InternalRelationVariant int32

const (
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_UNSPECIFIED InternalRelationVariant = 0
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_BELONGS_TO  InternalRelationVariant = 1
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_ORIGIN      InternalRelationVariant = 2
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_VERSION     InternalRelationVariant = 3
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_METADATA    InternalRelationVariant = 4
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_POLICY      InternalRelationVariant = 5
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_DELETED     InternalRelationVariant = 6
	InternalRelationVariant_INTERNAL_RELATION_VARIANT_CUSTOM      InternalRelationVariant = 7
)

// Enum value maps for InternalRelationVariant.
var (
	InternalRelationVariant_name = map[int32]string{
		0: "INTERNAL_RELATION_VARIANT_UNSPECIFIED",
		1: "INTERNAL_RELATION_VARIANT_BELONGS_TO",
		2: "INTERNAL_RELATION_VARIANT_ORIGIN",
		3: "INTERNAL_RELATION_VARIANT_VERSION",
		4: "INTERNAL_RELATION_VARIANT_METADATA",
		5: "INTERNAL_RELATION_VARIANT_POLICY",
		6: "INTERNAL_RELATION_VARIANT_DELETED",
		7: "INTERNAL_RELATION_VARIANT_CUSTOM",
	}
	InternalRelationVariant_value = map[string]int32{
		"INTERNAL_RELATION_VARIANT_UNSPECIFIED": 0,
		"INTERNAL_RELATION_VARIANT_BELONGS_TO":  1,
		"INTERNAL_RELATION_VARIANT_ORIGIN":      2,
		"INTERNAL_RELATION_VARIANT_VERSION":     3,
		"INTERNAL_RELATION_VARIANT_METADATA":    4,
		"INTERNAL_RELATION_VARIANT_POLICY":      5,
		"INTERNAL_RELATION_VARIANT_DELETED":     6,
		"INTERNAL_RELATION_VARIANT_CUSTOM":      7,
	}
)

func (x InternalRelationVariant) Enum() *InternalRelationVariant {
	p := new(InternalRelationVariant)
	*p = x
	return p
}

func (x InternalRelationVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InternalRelationVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[7].Descriptor()
}

func (InternalRelationVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[7]
}

func (x InternalRelationVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InternalRelationVariant.Descriptor instead.
func (InternalRelationVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{7}
}

// internal object relation type (direction)
type RelationDirection int32

const (
	RelationDirection_RELATION_DIRECTION_UNSPECIFIED RelationDirection = 0
	RelationDirection_RELATION_DIRECTION_INBOUND     RelationDirection = 1
	RelationDirection_RELATION_DIRECTION_OUTBOUND    RelationDirection = 2
)

// Enum value maps for RelationDirection.
var (
	RelationDirection_name = map[int32]string{
		0: "RELATION_DIRECTION_UNSPECIFIED",
		1: "RELATION_DIRECTION_INBOUND",
		2: "RELATION_DIRECTION_OUTBOUND",
	}
	RelationDirection_value = map[string]int32{
		"RELATION_DIRECTION_UNSPECIFIED": 0,
		"RELATION_DIRECTION_INBOUND":     1,
		"RELATION_DIRECTION_OUTBOUND":    2,
	}
)

func (x RelationDirection) Enum() *RelationDirection {
	p := new(RelationDirection)
	*p = x
	return p
}

func (x RelationDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[8].Descriptor()
}

func (RelationDirection) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[8]
}

func (x RelationDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationDirection.Descriptor instead.
func (RelationDirection) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{8}
}

// Used for the internal associated services to validate permissions
// Actions are similar to HTTP verbs
type ResourceAction int32

const (
	ResourceAction_RESOURCE_ACTION_UNSPECIFIED ResourceAction = 0
	ResourceAction_RESOURCE_ACTION_CREATE      ResourceAction = 1
	ResourceAction_RESOURCE_ACTION_APPEND      ResourceAction = 2
	ResourceAction_RESOURCE_ACTION_UPDATE      ResourceAction = 3
	ResourceAction_RESOURCE_ACTION_READ        ResourceAction = 4
	ResourceAction_RESOURCE_ACTION_DELETE      ResourceAction = 5
)

// Enum value maps for ResourceAction.
var (
	ResourceAction_name = map[int32]string{
		0: "RESOURCE_ACTION_UNSPECIFIED",
		1: "RESOURCE_ACTION_CREATE",
		2: "RESOURCE_ACTION_APPEND",
		3: "RESOURCE_ACTION_UPDATE",
		4: "RESOURCE_ACTION_READ",
		5: "RESOURCE_ACTION_DELETE",
	}
	ResourceAction_value = map[string]int32{
		"RESOURCE_ACTION_UNSPECIFIED": 0,
		"RESOURCE_ACTION_CREATE":      1,
		"RESOURCE_ACTION_APPEND":      2,
		"RESOURCE_ACTION_UPDATE":      3,
		"RESOURCE_ACTION_READ":        4,
		"RESOURCE_ACTION_DELETE":      5,
	}
)

func (x ResourceAction) Enum() *ResourceAction {
	p := new(ResourceAction)
	*p = x
	return p
}

func (x ResourceAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceAction) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[9].Descriptor()
}

func (ResourceAction) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[9]
}

func (x ResourceAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceAction.Descriptor instead.
func (ResourceAction) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{9}
}

// An arbitrary status for Objects
type Status int32

const (
	Status_STATUS_UNSPECIFIED  Status = 0 // Unspecified
	Status_STATUS_INITIALIZING Status = 1 // This object is initializing -> Staging
	Status_STATUS_VALIDATING   Status = 2 // Data got uploaded and a validating hook got triggered
	Status_STATUS_AVAILABLE    Status = 3 // Data is available
	Status_STATUS_UNAVAILABLE  Status = 4 // Data is temporarily not available
	Status_STATUS_ERROR        Status = 5 // Validating failed or fatal error in data proxy
	Status_STATUS_DELETED      Status = 6 // Object got deleted
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_INITIALIZING",
		2: "STATUS_VALIDATING",
		3: "STATUS_AVAILABLE",
		4: "STATUS_UNAVAILABLE",
		5: "STATUS_ERROR",
		6: "STATUS_DELETED",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":  0,
		"STATUS_INITIALIZING": 1,
		"STATUS_VALIDATING":   2,
		"STATUS_AVAILABLE":    3,
		"STATUS_UNAVAILABLE":  4,
		"STATUS_ERROR":        5,
		"STATUS_DELETED":      6,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[10].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[10]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{10}
}

// Status for endpoints
type ComponentStatus int32

const (
	ComponentStatus_COMPONENT_STATUS_UNSPECIFIED  ComponentStatus = 0
	ComponentStatus_COMPONENT_STATUS_INITIALIZING ComponentStatus = 1
	ComponentStatus_COMPONENT_STATUS_AVAILABLE    ComponentStatus = 2
	ComponentStatus_COMPONENT_STATUS_DEGRADED     ComponentStatus = 3
	ComponentStatus_COMPONENT_STATUS_UNAVAILABLE  ComponentStatus = 4
	ComponentStatus_COMPONENT_STATUS_MAINTENANCE  ComponentStatus = 5
)

// Enum value maps for ComponentStatus.
var (
	ComponentStatus_name = map[int32]string{
		0: "COMPONENT_STATUS_UNSPECIFIED",
		1: "COMPONENT_STATUS_INITIALIZING",
		2: "COMPONENT_STATUS_AVAILABLE",
		3: "COMPONENT_STATUS_DEGRADED",
		4: "COMPONENT_STATUS_UNAVAILABLE",
		5: "COMPONENT_STATUS_MAINTENANCE",
	}
	ComponentStatus_value = map[string]int32{
		"COMPONENT_STATUS_UNSPECIFIED":  0,
		"COMPONENT_STATUS_INITIALIZING": 1,
		"COMPONENT_STATUS_AVAILABLE":    2,
		"COMPONENT_STATUS_DEGRADED":     3,
		"COMPONENT_STATUS_UNAVAILABLE":  4,
		"COMPONENT_STATUS_MAINTENANCE":  5,
	}
)

func (x ComponentStatus) Enum() *ComponentStatus {
	p := new(ComponentStatus)
	*p = x
	return p
}

func (x ComponentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[11].Descriptor()
}

func (ComponentStatus) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[11]
}

func (x ComponentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentStatus.Descriptor instead.
func (ComponentStatus) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{11}
}

type Hashalgorithm int32

const (
	Hashalgorithm_HASHALGORITHM_UNSPECIFIED Hashalgorithm = 0
	Hashalgorithm_HASHALGORITHM_MD5         Hashalgorithm = 1
	Hashalgorithm_HASHALGORITHM_SHA256      Hashalgorithm = 2
)

// Enum value maps for Hashalgorithm.
var (
	Hashalgorithm_name = map[int32]string{
		0: "HASHALGORITHM_UNSPECIFIED",
		1: "HASHALGORITHM_MD5",
		2: "HASHALGORITHM_SHA256",
	}
	Hashalgorithm_value = map[string]int32{
		"HASHALGORITHM_UNSPECIFIED": 0,
		"HASHALGORITHM_MD5":         1,
		"HASHALGORITHM_SHA256":      2,
	}
)

func (x Hashalgorithm) Enum() *Hashalgorithm {
	p := new(Hashalgorithm)
	*p = x
	return p
}

func (x Hashalgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hashalgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[12].Descriptor()
}

func (Hashalgorithm) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[12]
}

func (x Hashalgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hashalgorithm.Descriptor instead.
func (Hashalgorithm) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{12}
}

type ResourceVariant int32

const (
	ResourceVariant_RESOURCE_VARIANT_UNSPECIFIED ResourceVariant = 0
	ResourceVariant_RESOURCE_VARIANT_PROJECT     ResourceVariant = 1
	ResourceVariant_RESOURCE_VARIANT_COLLECTION  ResourceVariant = 2
	ResourceVariant_RESOURCE_VARIANT_DATASET     ResourceVariant = 3
	ResourceVariant_RESOURCE_VARIANT_OBJECT      ResourceVariant = 4
)

// Enum value maps for ResourceVariant.
var (
	ResourceVariant_name = map[int32]string{
		0: "RESOURCE_VARIANT_UNSPECIFIED",
		1: "RESOURCE_VARIANT_PROJECT",
		2: "RESOURCE_VARIANT_COLLECTION",
		3: "RESOURCE_VARIANT_DATASET",
		4: "RESOURCE_VARIANT_OBJECT",
	}
	ResourceVariant_value = map[string]int32{
		"RESOURCE_VARIANT_UNSPECIFIED": 0,
		"RESOURCE_VARIANT_PROJECT":     1,
		"RESOURCE_VARIANT_COLLECTION":  2,
		"RESOURCE_VARIANT_DATASET":     3,
		"RESOURCE_VARIANT_OBJECT":      4,
	}
)

func (x ResourceVariant) Enum() *ResourceVariant {
	p := new(ResourceVariant)
	*p = x
	return p
}

func (x ResourceVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[13].Descriptor()
}

func (ResourceVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[13]
}

func (x ResourceVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceVariant.Descriptor instead.
func (ResourceVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{13}
}

type ReplicationStatus int32

const (
	ReplicationStatus_REPLICATION_STATUS_UNSPECIFIED ReplicationStatus = 0
	ReplicationStatus_REPLICATION_STATUS_WAITING     ReplicationStatus = 1
	ReplicationStatus_REPLICATION_STATUS_RUNNING     ReplicationStatus = 2
	ReplicationStatus_REPLICATION_STATUS_FINISHED    ReplicationStatus = 3
	ReplicationStatus_REPLICATION_STATUS_ERROR       ReplicationStatus = 4
)

// Enum value maps for ReplicationStatus.
var (
	ReplicationStatus_name = map[int32]string{
		0: "REPLICATION_STATUS_UNSPECIFIED",
		1: "REPLICATION_STATUS_WAITING",
		2: "REPLICATION_STATUS_RUNNING",
		3: "REPLICATION_STATUS_FINISHED",
		4: "REPLICATION_STATUS_ERROR",
	}
	ReplicationStatus_value = map[string]int32{
		"REPLICATION_STATUS_UNSPECIFIED": 0,
		"REPLICATION_STATUS_WAITING":     1,
		"REPLICATION_STATUS_RUNNING":     2,
		"REPLICATION_STATUS_FINISHED":    3,
		"REPLICATION_STATUS_ERROR":       4,
	}
)

func (x ReplicationStatus) Enum() *ReplicationStatus {
	p := new(ReplicationStatus)
	*p = x
	return p
}

func (x ReplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_storage_models_v2_models_proto_enumTypes[14].Descriptor()
}

func (ReplicationStatus) Type() protoreflect.EnumType {
	return &file_aruna_api_storage_models_v2_models_proto_enumTypes[14]
}

func (x ReplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicationStatus.Descriptor instead.
func (ReplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{14}
}

// ------------- USERS & PERMISSIONS -----------------------
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Internal Aruna UserID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// (optional) User display_name
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Is the user activated
	Active bool `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	// User email (empty if service account)
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// User attributes
	Attributes *UserAttributes `protobuf:"bytes,6,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// First and Last name
	FirstName string `protobuf:"bytes,7,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,8,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAttributes() *UserAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResourceId:
	//
	//	*Permission_ProjectId
	//	*Permission_CollectionId
	//	*Permission_DatasetId
	//	*Permission_ObjectId
	ResourceId      isPermission_ResourceId `protobuf_oneof:"resource_id"`
	PermissionLevel PermissionLevel         `protobuf:"varint,6,opt,name=permission_level,json=permissionLevel,proto3,enum=aruna.api.storage.models.v2.PermissionLevel" json:"permission_level,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{1}
}

func (m *Permission) GetResourceId() isPermission_ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (x *Permission) GetProjectId() string {
	if x, ok := x.GetResourceId().(*Permission_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *Permission) GetCollectionId() string {
	if x, ok := x.GetResourceId().(*Permission_CollectionId); ok {
		return x.CollectionId
	}
	return ""
}

func (x *Permission) GetDatasetId() string {
	if x, ok := x.GetResourceId().(*Permission_DatasetId); ok {
		return x.DatasetId
	}
	return ""
}

func (x *Permission) GetObjectId() string {
	if x, ok := x.GetResourceId().(*Permission_ObjectId); ok {
		return x.ObjectId
	}
	return ""
}

func (x *Permission) GetPermissionLevel() PermissionLevel {
	if x != nil {
		return x.PermissionLevel
	}
	return PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED
}

type isPermission_ResourceId interface {
	isPermission_ResourceId()
}

type Permission_ProjectId struct {
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3,oneof"`
}

type Permission_CollectionId struct {
	CollectionId string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3,oneof"`
}

type Permission_DatasetId struct {
	DatasetId string `protobuf:"bytes,3,opt,name=dataset_id,json=datasetId,proto3,oneof"`
}

type Permission_ObjectId struct {
	ObjectId string `protobuf:"bytes,4,opt,name=object_id,json=objectId,proto3,oneof"`
}

func (*Permission_ProjectId) isPermission_ResourceId() {}

func (*Permission_CollectionId) isPermission_ResourceId() {}

func (*Permission_DatasetId) isPermission_ResourceId() {}

func (*Permission_ObjectId) isPermission_ResourceId() {}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Tokens can either be personal or resource "specific"
	Permission *Permission `protobuf:"bytes,5,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{2}
}

func (x *Token) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Token) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Token) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Token) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Token) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type Pubkey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Pubkey) Reset() {
	*x = Pubkey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pubkey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pubkey) ProtoMessage() {}

func (x *Pubkey) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pubkey.ProtoReflect.Descriptor instead.
func (*Pubkey) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{3}
}

func (x *Pubkey) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pubkey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Pubkey) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type CustomAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName  string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	AttributeValue string `protobuf:"bytes,2,opt,name=attribute_value,json=attributeValue,proto3" json:"attribute_value,omitempty"`
}

func (x *CustomAttribute) Reset() {
	*x = CustomAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAttribute) ProtoMessage() {}

func (x *CustomAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAttribute.ProtoReflect.Descriptor instead.
func (*CustomAttribute) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{4}
}

func (x *CustomAttribute) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *CustomAttribute) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

type DataProxyAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttributeName  string `protobuf:"bytes,1,opt,name=attribute_name,json=attributeName,proto3" json:"attribute_name,omitempty"`
	AttributeValue string `protobuf:"bytes,2,opt,name=attribute_value,json=attributeValue,proto3" json:"attribute_value,omitempty"`
	Signature      string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	ProxyId        string `protobuf:"bytes,4,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
}

func (x *DataProxyAttribute) Reset() {
	*x = DataProxyAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataProxyAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataProxyAttribute) ProtoMessage() {}

func (x *DataProxyAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataProxyAttribute.ProtoReflect.Descriptor instead.
func (*DataProxyAttribute) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{5}
}

func (x *DataProxyAttribute) GetAttributeName() string {
	if x != nil {
		return x.AttributeName
	}
	return ""
}

func (x *DataProxyAttribute) GetAttributeValue() string {
	if x != nil {
		return x.AttributeValue
	}
	return ""
}

func (x *DataProxyAttribute) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DataProxyAttribute) GetProxyId() string {
	if x != nil {
		return x.ProxyId
	}
	return ""
}

type OidcMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId string `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	OidcUrl    string `protobuf:"bytes,2,opt,name=oidc_url,json=oidcUrl,proto3" json:"oidc_url,omitempty"`
}

func (x *OidcMapping) Reset() {
	*x = OidcMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidcMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidcMapping) ProtoMessage() {}

func (x *OidcMapping) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidcMapping.ProtoReflect.Descriptor instead.
func (*OidcMapping) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{6}
}

func (x *OidcMapping) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *OidcMapping) GetOidcUrl() string {
	if x != nil {
		return x.OidcUrl
	}
	return ""
}

type UserAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalAdmin         bool                  `protobuf:"varint,1,opt,name=global_admin,json=globalAdmin,proto3" json:"global_admin,omitempty"`
	ServiceAccount      bool                  `protobuf:"varint,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	Tokens              []*Token              `protobuf:"bytes,3,rep,name=tokens,proto3" json:"tokens,omitempty"`
	TrustedEndpoints    []string              `protobuf:"bytes,4,rep,name=trusted_endpoints,json=trustedEndpoints,proto3" json:"trusted_endpoints,omitempty"`
	CustomAttributes    []*CustomAttribute    `protobuf:"bytes,5,rep,name=custom_attributes,json=customAttributes,proto3" json:"custom_attributes,omitempty"`
	PersonalPermissions []*Permission         `protobuf:"bytes,6,rep,name=personal_permissions,json=personalPermissions,proto3" json:"personal_permissions,omitempty"`
	ExternalIds         []*OidcMapping        `protobuf:"bytes,7,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	Pubkey              string                `protobuf:"bytes,8,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	DataProxyAttributes []*DataProxyAttribute `protobuf:"bytes,9,rep,name=data_proxy_attributes,json=dataProxyAttributes,proto3" json:"data_proxy_attributes,omitempty"`
}

func (x *UserAttributes) Reset() {
	*x = UserAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttributes) ProtoMessage() {}

func (x *UserAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAttributes.ProtoReflect.Descriptor instead.
func (*UserAttributes) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{7}
}

func (x *UserAttributes) GetGlobalAdmin() bool {
	if x != nil {
		return x.GlobalAdmin
	}
	return false
}

func (x *UserAttributes) GetServiceAccount() bool {
	if x != nil {
		return x.ServiceAccount
	}
	return false
}

func (x *UserAttributes) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *UserAttributes) GetTrustedEndpoints() []string {
	if x != nil {
		return x.TrustedEndpoints
	}
	return nil
}

func (x *UserAttributes) GetCustomAttributes() []*CustomAttribute {
	if x != nil {
		return x.CustomAttributes
	}
	return nil
}

func (x *UserAttributes) GetPersonalPermissions() []*Permission {
	if x != nil {
		return x.PersonalPermissions
	}
	return nil
}

func (x *UserAttributes) GetExternalIds() []*OidcMapping {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *UserAttributes) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *UserAttributes) GetDataProxyAttributes() []*DataProxyAttribute {
	if x != nil {
		return x.DataProxyAttributes
	}
	return nil
}

// A key value pair for hooks and labels
type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value   string          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Variant KeyValueVariant `protobuf:"varint,3,opt,name=variant,proto3,enum=aruna.api.storage.models.v2.KeyValueVariant" json:"variant,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{8}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *KeyValue) GetVariant() KeyValueVariant {
	if x != nil {
		return x.Variant
	}
	return KeyValueVariant_KEY_VALUE_VARIANT_UNSPECIFIED
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Relation:
	//
	//	*Relation_External
	//	*Relation_Internal
	Relation isRelation_Relation `protobuf_oneof:"relation"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{9}
}

func (m *Relation) GetRelation() isRelation_Relation {
	if m != nil {
		return m.Relation
	}
	return nil
}

func (x *Relation) GetExternal() *ExternalRelation {
	if x, ok := x.GetRelation().(*Relation_External); ok {
		return x.External
	}
	return nil
}

func (x *Relation) GetInternal() *InternalRelation {
	if x, ok := x.GetRelation().(*Relation_Internal); ok {
		return x.Internal
	}
	return nil
}

type isRelation_Relation interface {
	isRelation_Relation()
}

type Relation_External struct {
	External *ExternalRelation `protobuf:"bytes,1,opt,name=external,proto3,oneof"`
}

type Relation_Internal struct {
	Internal *InternalRelation `protobuf:"bytes,2,opt,name=internal,proto3,oneof"`
}

func (*Relation_External) isRelation_Relation() {}

func (*Relation_Internal) isRelation_Relation() {}

type ExternalRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier     string                  `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	DefinedVariant ExternalRelationVariant `protobuf:"varint,2,opt,name=defined_variant,json=definedVariant,proto3,enum=aruna.api.storage.models.v2.ExternalRelationVariant" json:"defined_variant,omitempty"`
	// Will only be filled if defined_variant == CUSTOM
	CustomVariant *string `protobuf:"bytes,3,opt,name=custom_variant,json=customVariant,proto3,oneof" json:"custom_variant,omitempty"`
}

func (x *ExternalRelation) Reset() {
	*x = ExternalRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalRelation) ProtoMessage() {}

func (x *ExternalRelation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalRelation.ProtoReflect.Descriptor instead.
func (*ExternalRelation) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{10}
}

func (x *ExternalRelation) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ExternalRelation) GetDefinedVariant() ExternalRelationVariant {
	if x != nil {
		return x.DefinedVariant
	}
	return ExternalRelationVariant_EXTERNAL_RELATION_VARIANT_UNSPECIFIED
}

func (x *ExternalRelation) GetCustomVariant() string {
	if x != nil && x.CustomVariant != nil {
		return *x.CustomVariant
	}
	return ""
}

type InternalRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      string                  `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceVariant ResourceVariant         `protobuf:"varint,2,opt,name=resource_variant,json=resourceVariant,proto3,enum=aruna.api.storage.models.v2.ResourceVariant" json:"resource_variant,omitempty"`
	DefinedVariant  InternalRelationVariant `protobuf:"varint,3,opt,name=defined_variant,json=definedVariant,proto3,enum=aruna.api.storage.models.v2.InternalRelationVariant" json:"defined_variant,omitempty"`
	// Will only be filled if defined_variant == CUSTOM
	CustomVariant *string           `protobuf:"bytes,4,opt,name=custom_variant,json=customVariant,proto3,oneof" json:"custom_variant,omitempty"`
	Direction     RelationDirection `protobuf:"varint,5,opt,name=direction,proto3,enum=aruna.api.storage.models.v2.RelationDirection" json:"direction,omitempty"`
}

func (x *InternalRelation) Reset() {
	*x = InternalRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalRelation) ProtoMessage() {}

func (x *InternalRelation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalRelation.ProtoReflect.Descriptor instead.
func (*InternalRelation) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{11}
}

func (x *InternalRelation) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *InternalRelation) GetResourceVariant() ResourceVariant {
	if x != nil {
		return x.ResourceVariant
	}
	return ResourceVariant_RESOURCE_VARIANT_UNSPECIFIED
}

func (x *InternalRelation) GetDefinedVariant() InternalRelationVariant {
	if x != nil {
		return x.DefinedVariant
	}
	return InternalRelationVariant_INTERNAL_RELATION_VARIANT_UNSPECIFIED
}

func (x *InternalRelation) GetCustomVariant() string {
	if x != nil && x.CustomVariant != nil {
		return *x.CustomVariant
	}
	return ""
}

func (x *InternalRelation) GetDirection() RelationDirection {
	if x != nil {
		return x.Direction
	}
	return RelationDirection_RELATION_DIRECTION_UNSPECIFIED
}

type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartAfter string `protobuf:"bytes,1,opt,name=start_after,json=startAfter,proto3" json:"start_after,omitempty"` // This is the last ID of the previous returned request
	PageSize   int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`      // Default to 20, -1 for all
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{12}
}

func (x *PageRequest) GetStartAfter() string {
	if x != nil {
		return x.StartAfter
	}
	return ""
}

func (x *PageRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Stats for a set of objects
type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Size        int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{13}
}

func (x *Stats) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Stats) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Stats) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alg  Hashalgorithm `protobuf:"varint,1,opt,name=alg,proto3,enum=aruna.api.storage.models.v2.Hashalgorithm" json:"alg,omitempty"`
	Hash string        `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{14}
}

func (x *Hash) GetAlg() Hashalgorithm {
	if x != nil {
		return x.Alg
	}
	return Hashalgorithm_HASHALGORITHM_UNSPECIFIED
}

func (x *Hash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type EndpointHostConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	IsPrimary   bool                `protobuf:"varint,2,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	Ssl         bool                `protobuf:"varint,3,opt,name=ssl,proto3" json:"ssl,omitempty"`
	Public      bool                `protobuf:"varint,4,opt,name=public,proto3" json:"public,omitempty"`
	HostVariant EndpointHostVariant `protobuf:"varint,5,opt,name=host_variant,json=hostVariant,proto3,enum=aruna.api.storage.models.v2.EndpointHostVariant" json:"host_variant,omitempty"`
}

func (x *EndpointHostConfig) Reset() {
	*x = EndpointHostConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointHostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointHostConfig) ProtoMessage() {}

func (x *EndpointHostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointHostConfig.ProtoReflect.Descriptor instead.
func (*EndpointHostConfig) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{15}
}

func (x *EndpointHostConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EndpointHostConfig) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *EndpointHostConfig) GetSsl() bool {
	if x != nil {
		return x.Ssl
	}
	return false
}

func (x *EndpointHostConfig) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *EndpointHostConfig) GetHostVariant() EndpointHostVariant {
	if x != nil {
		return x.HostVariant
	}
	return EndpointHostVariant_ENDPOINT_HOST_VARIANT_UNSPECIFIED
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EpVariant   EndpointVariant       `protobuf:"varint,2,opt,name=ep_variant,json=epVariant,proto3,enum=aruna.api.storage.models.v2.EndpointVariant" json:"ep_variant,omitempty"`
	Name        string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	IsPublic    bool                  `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Status      ComponentStatus       `protobuf:"varint,5,opt,name=status,proto3,enum=aruna.api.storage.models.v2.ComponentStatus" json:"status,omitempty"`
	HostConfigs []*EndpointHostConfig `protobuf:"bytes,6,rep,name=host_configs,json=hostConfigs,proto3" json:"host_configs,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{16}
}

func (x *Endpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Endpoint) GetEpVariant() EndpointVariant {
	if x != nil {
		return x.EpVariant
	}
	return EndpointVariant_ENDPOINT_VARIANT_UNSPECIFIED
}

func (x *Endpoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Endpoint) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Endpoint) GetStatus() ComponentStatus {
	if x != nil {
		return x.Status
	}
	return ComponentStatus_COMPONENT_STATUS_UNSPECIFIED
}

func (x *Endpoint) GetHostConfigs() []*EndpointHostConfig {
	if x != nil {
		return x.HostConfigs
	}
	return nil
}

type DataEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Hint if the objects' project
	// is fully synced to the endpoint
	// If partial_sync = true -> Objects inherit partial sync
	//
	// Types that are assignable to Variant:
	//
	//	*DataEndpoint_FullSync
	//	*DataEndpoint_PartialSync
	Variant isDataEndpoint_Variant `protobuf_oneof:"variant"`
	Status  *ReplicationStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=aruna.api.storage.models.v2.ReplicationStatus,oneof" json:"status,omitempty"`
}

func (x *DataEndpoint) Reset() {
	*x = DataEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataEndpoint) ProtoMessage() {}

func (x *DataEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataEndpoint.ProtoReflect.Descriptor instead.
func (*DataEndpoint) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{17}
}

func (x *DataEndpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *DataEndpoint) GetVariant() isDataEndpoint_Variant {
	if m != nil {
		return m.Variant
	}
	return nil
}

func (x *DataEndpoint) GetFullSync() *FullSync {
	if x, ok := x.GetVariant().(*DataEndpoint_FullSync); ok {
		return x.FullSync
	}
	return nil
}

func (x *DataEndpoint) GetPartialSync() bool {
	if x, ok := x.GetVariant().(*DataEndpoint_PartialSync); ok {
		return x.PartialSync
	}
	return false
}

func (x *DataEndpoint) GetStatus() ReplicationStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ReplicationStatus_REPLICATION_STATUS_UNSPECIFIED
}

type isDataEndpoint_Variant interface {
	isDataEndpoint_Variant()
}

type DataEndpoint_FullSync struct {
	FullSync *FullSync `protobuf:"bytes,2,opt,name=full_sync,json=fullSync,proto3,oneof"`
}

type DataEndpoint_PartialSync struct {
	PartialSync bool `protobuf:"varint,3,opt,name=partial_sync,json=partialSync,proto3,oneof"`
}

func (*DataEndpoint_FullSync) isDataEndpoint_Variant() {}

func (*DataEndpoint_PartialSync) isDataEndpoint_Variant() {}

type FullSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FullSync) Reset() {
	*x = FullSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullSync) ProtoMessage() {}

func (x *FullSync) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullSync.ProtoReflect.Descriptor instead.
func (*FullSync) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{18}
}

type Copy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource       string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	TargetEndpoint string `protobuf:"bytes,2,opt,name=target_endpoint,json=targetEndpoint,proto3" json:"target_endpoint,omitempty"`
	Push           bool   `protobuf:"varint,3,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *Copy) Reset() {
	*x = Copy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Copy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Copy) ProtoMessage() {}

func (x *Copy) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Copy.ProtoReflect.Descriptor instead.
func (*Copy) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{19}
}

func (x *Copy) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Copy) GetTargetEndpoint() string {
	if x != nil {
		return x.TargetEndpoint
	}
	return ""
}

func (x *Copy) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Context:
	//
	//	*Context_S3Credentials
	//	*Context_Copy
	Context isContext_Context `protobuf_oneof:"context"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{20}
}

func (m *Context) GetContext() isContext_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (x *Context) GetS3Credentials() bool {
	if x, ok := x.GetContext().(*Context_S3Credentials); ok {
		return x.S3Credentials
	}
	return false
}

func (x *Context) GetCopy() *Copy {
	if x, ok := x.GetContext().(*Context_Copy); ok {
		return x.Copy
	}
	return nil
}

type isContext_Context interface {
	isContext_Context()
}

type Context_S3Credentials struct {
	S3Credentials bool `protobuf:"varint,1,opt,name=s3_credentials,json=s3Credentials,proto3,oneof"`
}

type Context_Copy struct {
	Copy *Copy `protobuf:"bytes,2,opt,name=copy,proto3,oneof"`
}

func (*Context_S3Credentials) isContext_Context() {}

func (*Context_Copy) isContext_Context() {}

type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`   // CC-BY-SA-4.0
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Creative Commons Attribution-ShareAlike 4.0 International
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// url is optional
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"` // https://creativecommons.org/licenses/by-sa/4.0/
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{21}
}

func (x *License) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *License) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *License) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *License) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName string  `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string  `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email     *string `protobuf:"bytes,3,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Orcid     *string `protobuf:"bytes,4,opt,name=orcid,proto3,oneof" json:"orcid,omitempty"`
	Id        *string `protobuf:"bytes,5,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{22}
}

func (x *Author) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Author) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Author) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Author) GetOrcid() string {
	if x != nil && x.Orcid != nil {
		return *x.Orcid
	}
	return ""
}

func (x *Author) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type RuleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuleId string `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Origin string `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
}

func (x *RuleBinding) Reset() {
	*x = RuleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleBinding) ProtoMessage() {}

func (x *RuleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleBinding.ProtoReflect.Descriptor instead.
func (*RuleBinding) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{23}
}

func (x *RuleBinding) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *RuleBinding) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

type GenericResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//
	//	*GenericResource_Project
	//	*GenericResource_Collection
	//	*GenericResource_Dataset
	//	*GenericResource_Object
	Resource isGenericResource_Resource `protobuf_oneof:"resource"`
}

func (x *GenericResource) Reset() {
	*x = GenericResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericResource) ProtoMessage() {}

func (x *GenericResource) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericResource.ProtoReflect.Descriptor instead.
func (*GenericResource) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{24}
}

func (m *GenericResource) GetResource() isGenericResource_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *GenericResource) GetProject() *Project {
	if x, ok := x.GetResource().(*GenericResource_Project); ok {
		return x.Project
	}
	return nil
}

func (x *GenericResource) GetCollection() *Collection {
	if x, ok := x.GetResource().(*GenericResource_Collection); ok {
		return x.Collection
	}
	return nil
}

func (x *GenericResource) GetDataset() *Dataset {
	if x, ok := x.GetResource().(*GenericResource_Dataset); ok {
		return x.Dataset
	}
	return nil
}

func (x *GenericResource) GetObject() *Object {
	if x, ok := x.GetResource().(*GenericResource_Object); ok {
		return x.Object
	}
	return nil
}

type isGenericResource_Resource interface {
	isGenericResource_Resource()
}

type GenericResource_Project struct {
	Project *Project `protobuf:"bytes,1,opt,name=project,proto3,oneof"`
}

type GenericResource_Collection struct {
	Collection *Collection `protobuf:"bytes,2,opt,name=collection,proto3,oneof"`
}

type GenericResource_Dataset struct {
	Dataset *Dataset `protobuf:"bytes,3,opt,name=dataset,proto3,oneof"`
}

type GenericResource_Object struct {
	Object *Object `protobuf:"bytes,4,opt,name=object,proto3,oneof"`
}

func (*GenericResource_Project) isGenericResource_Resource() {}

func (*GenericResource_Collection) isGenericResource_Resource() {}

func (*GenericResource_Dataset) isGenericResource_Resource() {}

func (*GenericResource_Object) isGenericResource_Resource() {}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // Short name according to BucketNamingRules
	Title       string `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`            // Long name
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // Long name
	// Project specific labels / hooks
	KeyValues []*KeyValue `protobuf:"bytes,4,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
	// Relations to internal and external sources
	Relations             []*Relation            `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	Stats                 *Stats                 `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	DataClass             DataClass              `protobuf:"varint,7,opt,name=data_class,json=dataClass,proto3,enum=aruna.api.storage.models.v2.DataClass" json:"data_class,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy             string                 `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Authors               []*Author              `protobuf:"bytes,16,rep,name=authors,proto3" json:"authors,omitempty"`
	Status                Status                 `protobuf:"varint,10,opt,name=status,proto3,enum=aruna.api.storage.models.v2.Status" json:"status,omitempty"`
	Dynamic               bool                   `protobuf:"varint,11,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Endpoints             []*DataEndpoint        `protobuf:"bytes,12,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	MetadataLicenseTag    string                 `protobuf:"bytes,13,opt,name=metadata_license_tag,json=metadataLicenseTag,proto3" json:"metadata_license_tag,omitempty"`
	DefaultDataLicenseTag string                 `protobuf:"bytes,14,opt,name=default_data_license_tag,json=defaultDataLicenseTag,proto3" json:"default_data_license_tag,omitempty"`
	RuleBindings          []*RuleBinding         `protobuf:"bytes,17,rep,name=rule_bindings,json=ruleBindings,proto3" json:"rule_bindings,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{25}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *Project) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Project) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Project) GetDataClass() DataClass {
	if x != nil {
		return x.DataClass
	}
	return DataClass_DATA_CLASS_UNSPECIFIED
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Project) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Project) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Project) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *Project) GetEndpoints() []*DataEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Project) GetMetadataLicenseTag() string {
	if x != nil {
		return x.MetadataLicenseTag
	}
	return ""
}

func (x *Project) GetDefaultDataLicenseTag() string {
	if x != nil {
		return x.DefaultDataLicenseTag
	}
	return ""
}

func (x *Project) GetRuleBindings() []*RuleBinding {
	if x != nil {
		return x.RuleBindings
	}
	return nil
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // ASDASDASDOPASKIDPO
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // my_mags
	Title       string `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` // ENA asda234928349028 MAG 1293819203819028i V1
	// Collection specific labels / hooks
	KeyValues []*KeyValue `protobuf:"bytes,4,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
	// Relations to internal and external sources
	Relations             []*Relation            `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	Stats                 *Stats                 `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	DataClass             DataClass              `protobuf:"varint,7,opt,name=data_class,json=dataClass,proto3,enum=aruna.api.storage.models.v2.DataClass" json:"data_class,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy             string                 `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Authors               []*Author              `protobuf:"bytes,16,rep,name=authors,proto3" json:"authors,omitempty"`
	Status                Status                 `protobuf:"varint,10,opt,name=status,proto3,enum=aruna.api.storage.models.v2.Status" json:"status,omitempty"`
	Dynamic               bool                   `protobuf:"varint,11,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Endpoints             []*DataEndpoint        `protobuf:"bytes,12,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	MetadataLicenseTag    string                 `protobuf:"bytes,13,opt,name=metadata_license_tag,json=metadataLicenseTag,proto3" json:"metadata_license_tag,omitempty"`
	DefaultDataLicenseTag string                 `protobuf:"bytes,14,opt,name=default_data_license_tag,json=defaultDataLicenseTag,proto3" json:"default_data_license_tag,omitempty"`
	RuleBindings          []*RuleBinding         `protobuf:"bytes,17,rep,name=rule_bindings,json=ruleBindings,proto3" json:"rule_bindings,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{26}
}

func (x *Collection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Collection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Collection) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Collection) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *Collection) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Collection) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Collection) GetDataClass() DataClass {
	if x != nil {
		return x.DataClass
	}
	return DataClass_DATA_CLASS_UNSPECIFIED
}

func (x *Collection) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Collection) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Collection) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Collection) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Collection) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *Collection) GetEndpoints() []*DataEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Collection) GetMetadataLicenseTag() string {
	if x != nil {
		return x.MetadataLicenseTag
	}
	return ""
}

func (x *Collection) GetDefaultDataLicenseTag() string {
	if x != nil {
		return x.DefaultDataLicenseTag
	}
	return ""
}

func (x *Collection) GetRuleBindings() []*RuleBinding {
	if x != nil {
		return x.RuleBindings
	}
	return nil
}

type Dataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title       string `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"` // Long name
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Dataset specific labels / hooks
	KeyValues []*KeyValue `protobuf:"bytes,4,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
	// Relations to internal and external sources
	Relations             []*Relation            `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	Stats                 *Stats                 `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	DataClass             DataClass              `protobuf:"varint,7,opt,name=data_class,json=dataClass,proto3,enum=aruna.api.storage.models.v2.DataClass" json:"data_class,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy             string                 `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Authors               []*Author              `protobuf:"bytes,16,rep,name=authors,proto3" json:"authors,omitempty"`
	Status                Status                 `protobuf:"varint,10,opt,name=status,proto3,enum=aruna.api.storage.models.v2.Status" json:"status,omitempty"`
	Dynamic               bool                   `protobuf:"varint,11,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Endpoints             []*DataEndpoint        `protobuf:"bytes,12,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	MetadataLicenseTag    string                 `protobuf:"bytes,13,opt,name=metadata_license_tag,json=metadataLicenseTag,proto3" json:"metadata_license_tag,omitempty"`
	DefaultDataLicenseTag string                 `protobuf:"bytes,14,opt,name=default_data_license_tag,json=defaultDataLicenseTag,proto3" json:"default_data_license_tag,omitempty"`
	RuleBindings          []*RuleBinding         `protobuf:"bytes,17,rep,name=rule_bindings,json=ruleBindings,proto3" json:"rule_bindings,omitempty"`
}

func (x *Dataset) Reset() {
	*x = Dataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dataset) ProtoMessage() {}

func (x *Dataset) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dataset.ProtoReflect.Descriptor instead.
func (*Dataset) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{27}
}

func (x *Dataset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dataset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dataset) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Dataset) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dataset) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *Dataset) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Dataset) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Dataset) GetDataClass() DataClass {
	if x != nil {
		return x.DataClass
	}
	return DataClass_DATA_CLASS_UNSPECIFIED
}

func (x *Dataset) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Dataset) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Dataset) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Dataset) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Dataset) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *Dataset) GetEndpoints() []*DataEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Dataset) GetMetadataLicenseTag() string {
	if x != nil {
		return x.MetadataLicenseTag
	}
	return ""
}

func (x *Dataset) GetDefaultDataLicenseTag() string {
	if x != nil {
		return x.DefaultDataLicenseTag
	}
	return ""
}

func (x *Dataset) GetRuleBindings() []*RuleBinding {
	if x != nil {
		return x.RuleBindings
	}
	return nil
}

type Object struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Title       string `protobuf:"bytes,16,opt,name=title,proto3" json:"title,omitempty"` // Long name
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Collection specific labels / hooks
	KeyValues []*KeyValue `protobuf:"bytes,4,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
	// Relations to internal and external sources
	Relations  []*Relation            `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	ContentLen int64                  `protobuf:"varint,6,opt,name=content_len,json=contentLen,proto3" json:"content_len,omitempty"` // Object only
	DataClass  DataClass              `protobuf:"varint,7,opt,name=data_class,json=dataClass,proto3,enum=aruna.api.storage.models.v2.DataClass" json:"data_class,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy  string                 `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Authors    []*Author              `protobuf:"bytes,17,rep,name=authors,proto3" json:"authors,omitempty"`
	Status     Status                 `protobuf:"varint,10,opt,name=status,proto3,enum=aruna.api.storage.models.v2.Status" json:"status,omitempty"`
	Dynamic    bool                   `protobuf:"varint,11,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Endpoints  []*DataEndpoint        `protobuf:"bytes,12,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Object specific attributes
	Hashes             []*Hash        `protobuf:"bytes,13,rep,name=hashes,proto3" json:"hashes,omitempty"`
	MetadataLicenseTag string         `protobuf:"bytes,14,opt,name=metadata_license_tag,json=metadataLicenseTag,proto3" json:"metadata_license_tag,omitempty"`
	DataLicenseTag     string         `protobuf:"bytes,15,opt,name=data_license_tag,json=dataLicenseTag,proto3" json:"data_license_tag,omitempty"`
	RuleBindings       []*RuleBinding `protobuf:"bytes,18,rep,name=rule_bindings,json=ruleBindings,proto3" json:"rule_bindings,omitempty"`
}

func (x *Object) Reset() {
	*x = Object{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v2_models_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v2_models_proto_rawDescGZIP(), []int{28}
}

func (x *Object) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Object) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Object) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Object) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Object) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *Object) GetRelations() []*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Object) GetContentLen() int64 {
	if x != nil {
		return x.ContentLen
	}
	return 0
}

func (x *Object) GetDataClass() DataClass {
	if x != nil {
		return x.DataClass
	}
	return DataClass_DATA_CLASS_UNSPECIFIED
}

func (x *Object) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Object) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Object) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Object) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Object) GetDynamic() bool {
	if x != nil {
		return x.Dynamic
	}
	return false
}

func (x *Object) GetEndpoints() []*DataEndpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Object) GetHashes() []*Hash {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *Object) GetMetadataLicenseTag() string {
	if x != nil {
		return x.MetadataLicenseTag
	}
	return ""
}

func (x *Object) GetDataLicenseTag() string {
	if x != nil {
		return x.DataLicenseTag
	}
	return ""
}

func (x *Object) GetRuleBindings() []*RuleBinding {
	if x != nil {
		return x.RuleBindings
	}
	return nil
}

var File_aruna_api_storage_models_v2_models_proto protoreflect.FileDescriptor

var file_aruna_api_storage_models_v2_models_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x4b, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x22, 0xfc, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x22, 0xea, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a,
	0x06, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x0b, 0x4f, 0x69, 0x64, 0x63,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x69, 0x64, 0x63,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x69, 0x64, 0x63,
	0x55, 0x72, 0x6c, 0x22, 0xc6, 0x04, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x69, 0x64, 0x63, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x63, 0x0a, 0x15, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x46, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52,
	0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42,
	0x0a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x01, 0x0a, 0x10,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x5d, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52,
	0x0e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xf8,
	0x02, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x5d, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x0e,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x0b, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x58, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x3c, 0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x03, 0x61, 0x6c, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x73,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x73, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x53, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x68, 0x6f,
	0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xb2, 0x02, 0x0a, 0x08, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x65, 0x70, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x70, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xec,
	0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x44, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0a, 0x0a,
	0x08, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x22, 0x5f, 0x0a, 0x04, 0x43, 0x6f, 0x70,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x76, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x0e, 0x73, 0x33, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x33, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x37,
	0x0a, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x55, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x06, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f,
	0x72, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x6f, 0x72,
	0x63, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x63, 0x69, 0x64, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x0b, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xe4, 0x06, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x4d, 0x0a, 0x0d,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72,
	0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xe7, 0x06, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x12, 0x47, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a,
	0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xe4, 0x06, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x4d, 0x0a,
	0x0d, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c,
	0x72, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xf6, 0x06, 0x0a,
	0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x12,
	0x45, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x3d, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12,
	0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x39, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x10,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x2a, 0xcd, 0x01, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x4e,
	0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x41, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x4e, 0x4e,
	0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x4e, 0x4e, 0x4f,
	0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e,
	0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e,
	0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x4e, 0x4e,
	0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x4c, 0x4f, 0x47, 0x10, 0x05, 0x2a, 0x8d, 0x01, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x43, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43,
	0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x57, 0x4f, 0x52,
	0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x41, 0x4c, 0x10, 0x05, 0x2a, 0x73, 0x0a, 0x0f, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x4e,
	0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x50,
	0x45, 0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f,
	0x56, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x7a, 0x0a, 0x13, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x54, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x4e, 0x44, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x54, 0x5f, 0x53, 0x33, 0x10, 0x02, 0x2a, 0xbe, 0x01, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x45, 0x52, 0x4d, 0x49,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x06, 0x2a, 0xb4, 0x01, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x4b,
	0x45, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x4b, 0x45, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49,
	0x41, 0x4e, 0x54, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x4b,
	0x45, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x4b, 0x45, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x56, 0x41, 0x52,
	0x49, 0x41, 0x4e, 0x54, 0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x4b,
	0x45, 0x59, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54,
	0x5f, 0x48, 0x4f, 0x4f, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x04, 0x2a, 0xb7,
	0x01, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x58,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x4e, 0x54, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x45, 0x58, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f,
	0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x03, 0x2a, 0xd6, 0x02, 0x0a, 0x17, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x25, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x28, 0x0a, 0x24, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x42, 0x45, 0x4c,
	0x4f, 0x4e, 0x47, 0x53, 0x5f, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56,
	0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x10, 0x02, 0x12,
	0x25, 0x0a, 0x21, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49,
	0x41, 0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x04, 0x12, 0x24,
	0x0a, 0x20, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e,
	0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x24, 0x0a, 0x20, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10,
	0x07, 0x2a, 0x78, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x49, 0x4e, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4f, 0x55, 0x54, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x2a, 0xbb, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x1b, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52,
	0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x50, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x2a, 0xa4, 0x01, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x06,
	0x2a, 0xd9, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45,
	0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f,
	0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d,
	0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x05, 0x2a, 0x5f, 0x0a, 0x0d,
	0x48, 0x61, 0x73, 0x68, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1d, 0x0a,
	0x19, 0x48, 0x41, 0x53, 0x48, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x48, 0x41, 0x53, 0x48, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x5f, 0x4d, 0x44,
	0x35, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x41, 0x53, 0x48, 0x41, 0x4c, 0x47, 0x4f, 0x52,
	0x49, 0x54, 0x48, 0x4d, 0x5f, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36, 0x10, 0x02, 0x2a, 0xad, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x56,
	0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x10, 0x03,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x56, 0x41, 0x52,
	0x49, 0x41, 0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x04, 0x2a, 0xb6, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x42, 0xfe, 0x01, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x42, 0x0b, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0xa2, 0x02, 0x04, 0x41, 0x41, 0x53, 0x4d, 0xaa,
	0x02, 0x1b, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x1b,
	0x41, 0x72, 0x75, 0x6e, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x27, 0x41, 0x72,
	0x75, 0x6e, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5c,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x3a, 0x3a, 0x41,
	0x70, 0x69, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aruna_api_storage_models_v2_models_proto_rawDescOnce sync.Once
	file_aruna_api_storage_models_v2_models_proto_rawDescData = file_aruna_api_storage_models_v2_models_proto_rawDesc
)

func file_aruna_api_storage_models_v2_models_proto_rawDescGZIP() []byte {
	file_aruna_api_storage_models_v2_models_proto_rawDescOnce.Do(func() {
		file_aruna_api_storage_models_v2_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_storage_models_v2_models_proto_rawDescData)
	})
	return file_aruna_api_storage_models_v2_models_proto_rawDescData
}

var file_aruna_api_storage_models_v2_models_proto_enumTypes = make([]protoimpl.EnumInfo, 15)
var file_aruna_api_storage_models_v2_models_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_aruna_api_storage_models_v2_models_proto_goTypes = []interface{}{
	(AnnouncementType)(0),         // 0: aruna.api.storage.models.v2.AnnouncementType
	(DataClass)(0),                // 1: aruna.api.storage.models.v2.DataClass
	(EndpointVariant)(0),          // 2: aruna.api.storage.models.v2.EndpointVariant
	(EndpointHostVariant)(0),      // 3: aruna.api.storage.models.v2.EndpointHostVariant
	(PermissionLevel)(0),          // 4: aruna.api.storage.models.v2.PermissionLevel
	(KeyValueVariant)(0),          // 5: aruna.api.storage.models.v2.KeyValueVariant
	(ExternalRelationVariant)(0),  // 6: aruna.api.storage.models.v2.ExternalRelationVariant
	(InternalRelationVariant)(0),  // 7: aruna.api.storage.models.v2.InternalRelationVariant
	(RelationDirection)(0),        // 8: aruna.api.storage.models.v2.RelationDirection
	(ResourceAction)(0),           // 9: aruna.api.storage.models.v2.ResourceAction
	(Status)(0),                   // 10: aruna.api.storage.models.v2.Status
	(ComponentStatus)(0),          // 11: aruna.api.storage.models.v2.ComponentStatus
	(Hashalgorithm)(0),            // 12: aruna.api.storage.models.v2.Hashalgorithm
	(ResourceVariant)(0),          // 13: aruna.api.storage.models.v2.ResourceVariant
	(ReplicationStatus)(0),        // 14: aruna.api.storage.models.v2.ReplicationStatus
	(*User)(nil),                  // 15: aruna.api.storage.models.v2.User
	(*Permission)(nil),            // 16: aruna.api.storage.models.v2.Permission
	(*Token)(nil),                 // 17: aruna.api.storage.models.v2.Token
	(*Pubkey)(nil),                // 18: aruna.api.storage.models.v2.Pubkey
	(*CustomAttribute)(nil),       // 19: aruna.api.storage.models.v2.CustomAttribute
	(*DataProxyAttribute)(nil),    // 20: aruna.api.storage.models.v2.DataProxyAttribute
	(*OidcMapping)(nil),           // 21: aruna.api.storage.models.v2.OidcMapping
	(*UserAttributes)(nil),        // 22: aruna.api.storage.models.v2.UserAttributes
	(*KeyValue)(nil),              // 23: aruna.api.storage.models.v2.KeyValue
	(*Relation)(nil),              // 24: aruna.api.storage.models.v2.Relation
	(*ExternalRelation)(nil),      // 25: aruna.api.storage.models.v2.ExternalRelation
	(*InternalRelation)(nil),      // 26: aruna.api.storage.models.v2.InternalRelation
	(*PageRequest)(nil),           // 27: aruna.api.storage.models.v2.PageRequest
	(*Stats)(nil),                 // 28: aruna.api.storage.models.v2.Stats
	(*Hash)(nil),                  // 29: aruna.api.storage.models.v2.Hash
	(*EndpointHostConfig)(nil),    // 30: aruna.api.storage.models.v2.EndpointHostConfig
	(*Endpoint)(nil),              // 31: aruna.api.storage.models.v2.Endpoint
	(*DataEndpoint)(nil),          // 32: aruna.api.storage.models.v2.DataEndpoint
	(*FullSync)(nil),              // 33: aruna.api.storage.models.v2.FullSync
	(*Copy)(nil),                  // 34: aruna.api.storage.models.v2.Copy
	(*Context)(nil),               // 35: aruna.api.storage.models.v2.Context
	(*License)(nil),               // 36: aruna.api.storage.models.v2.License
	(*Author)(nil),                // 37: aruna.api.storage.models.v2.Author
	(*RuleBinding)(nil),           // 38: aruna.api.storage.models.v2.RuleBinding
	(*GenericResource)(nil),       // 39: aruna.api.storage.models.v2.GenericResource
	(*Project)(nil),               // 40: aruna.api.storage.models.v2.Project
	(*Collection)(nil),            // 41: aruna.api.storage.models.v2.Collection
	(*Dataset)(nil),               // 42: aruna.api.storage.models.v2.Dataset
	(*Object)(nil),                // 43: aruna.api.storage.models.v2.Object
	(*timestamppb.Timestamp)(nil), // 44: google.protobuf.Timestamp
}
var file_aruna_api_storage_models_v2_models_proto_depIdxs = []int32{
	22, // 0: aruna.api.storage.models.v2.User.attributes:type_name -> aruna.api.storage.models.v2.UserAttributes
	4,  // 1: aruna.api.storage.models.v2.Permission.permission_level:type_name -> aruna.api.storage.models.v2.PermissionLevel
	44, // 2: aruna.api.storage.models.v2.Token.created_at:type_name -> google.protobuf.Timestamp
	44, // 3: aruna.api.storage.models.v2.Token.expires_at:type_name -> google.protobuf.Timestamp
	16, // 4: aruna.api.storage.models.v2.Token.permission:type_name -> aruna.api.storage.models.v2.Permission
	17, // 5: aruna.api.storage.models.v2.UserAttributes.tokens:type_name -> aruna.api.storage.models.v2.Token
	19, // 6: aruna.api.storage.models.v2.UserAttributes.custom_attributes:type_name -> aruna.api.storage.models.v2.CustomAttribute
	16, // 7: aruna.api.storage.models.v2.UserAttributes.personal_permissions:type_name -> aruna.api.storage.models.v2.Permission
	21, // 8: aruna.api.storage.models.v2.UserAttributes.external_ids:type_name -> aruna.api.storage.models.v2.OidcMapping
	20, // 9: aruna.api.storage.models.v2.UserAttributes.data_proxy_attributes:type_name -> aruna.api.storage.models.v2.DataProxyAttribute
	5,  // 10: aruna.api.storage.models.v2.KeyValue.variant:type_name -> aruna.api.storage.models.v2.KeyValueVariant
	25, // 11: aruna.api.storage.models.v2.Relation.external:type_name -> aruna.api.storage.models.v2.ExternalRelation
	26, // 12: aruna.api.storage.models.v2.Relation.internal:type_name -> aruna.api.storage.models.v2.InternalRelation
	6,  // 13: aruna.api.storage.models.v2.ExternalRelation.defined_variant:type_name -> aruna.api.storage.models.v2.ExternalRelationVariant
	13, // 14: aruna.api.storage.models.v2.InternalRelation.resource_variant:type_name -> aruna.api.storage.models.v2.ResourceVariant
	7,  // 15: aruna.api.storage.models.v2.InternalRelation.defined_variant:type_name -> aruna.api.storage.models.v2.InternalRelationVariant
	8,  // 16: aruna.api.storage.models.v2.InternalRelation.direction:type_name -> aruna.api.storage.models.v2.RelationDirection
	44, // 17: aruna.api.storage.models.v2.Stats.last_updated:type_name -> google.protobuf.Timestamp
	12, // 18: aruna.api.storage.models.v2.Hash.alg:type_name -> aruna.api.storage.models.v2.Hashalgorithm
	3,  // 19: aruna.api.storage.models.v2.EndpointHostConfig.host_variant:type_name -> aruna.api.storage.models.v2.EndpointHostVariant
	2,  // 20: aruna.api.storage.models.v2.Endpoint.ep_variant:type_name -> aruna.api.storage.models.v2.EndpointVariant
	11, // 21: aruna.api.storage.models.v2.Endpoint.status:type_name -> aruna.api.storage.models.v2.ComponentStatus
	30, // 22: aruna.api.storage.models.v2.Endpoint.host_configs:type_name -> aruna.api.storage.models.v2.EndpointHostConfig
	33, // 23: aruna.api.storage.models.v2.DataEndpoint.full_sync:type_name -> aruna.api.storage.models.v2.FullSync
	14, // 24: aruna.api.storage.models.v2.DataEndpoint.status:type_name -> aruna.api.storage.models.v2.ReplicationStatus
	34, // 25: aruna.api.storage.models.v2.Context.copy:type_name -> aruna.api.storage.models.v2.Copy
	40, // 26: aruna.api.storage.models.v2.GenericResource.project:type_name -> aruna.api.storage.models.v2.Project
	41, // 27: aruna.api.storage.models.v2.GenericResource.collection:type_name -> aruna.api.storage.models.v2.Collection
	42, // 28: aruna.api.storage.models.v2.GenericResource.dataset:type_name -> aruna.api.storage.models.v2.Dataset
	43, // 29: aruna.api.storage.models.v2.GenericResource.object:type_name -> aruna.api.storage.models.v2.Object
	23, // 30: aruna.api.storage.models.v2.Project.key_values:type_name -> aruna.api.storage.models.v2.KeyValue
	24, // 31: aruna.api.storage.models.v2.Project.relations:type_name -> aruna.api.storage.models.v2.Relation
	28, // 32: aruna.api.storage.models.v2.Project.stats:type_name -> aruna.api.storage.models.v2.Stats
	1,  // 33: aruna.api.storage.models.v2.Project.data_class:type_name -> aruna.api.storage.models.v2.DataClass
	44, // 34: aruna.api.storage.models.v2.Project.created_at:type_name -> google.protobuf.Timestamp
	37, // 35: aruna.api.storage.models.v2.Project.authors:type_name -> aruna.api.storage.models.v2.Author
	10, // 36: aruna.api.storage.models.v2.Project.status:type_name -> aruna.api.storage.models.v2.Status
	32, // 37: aruna.api.storage.models.v2.Project.endpoints:type_name -> aruna.api.storage.models.v2.DataEndpoint
	38, // 38: aruna.api.storage.models.v2.Project.rule_bindings:type_name -> aruna.api.storage.models.v2.RuleBinding
	23, // 39: aruna.api.storage.models.v2.Collection.key_values:type_name -> aruna.api.storage.models.v2.KeyValue
	24, // 40: aruna.api.storage.models.v2.Collection.relations:type_name -> aruna.api.storage.models.v2.Relation
	28, // 41: aruna.api.storage.models.v2.Collection.stats:type_name -> aruna.api.storage.models.v2.Stats
	1,  // 42: aruna.api.storage.models.v2.Collection.data_class:type_name -> aruna.api.storage.models.v2.DataClass
	44, // 43: aruna.api.storage.models.v2.Collection.created_at:type_name -> google.protobuf.Timestamp
	37, // 44: aruna.api.storage.models.v2.Collection.authors:type_name -> aruna.api.storage.models.v2.Author
	10, // 45: aruna.api.storage.models.v2.Collection.status:type_name -> aruna.api.storage.models.v2.Status
	32, // 46: aruna.api.storage.models.v2.Collection.endpoints:type_name -> aruna.api.storage.models.v2.DataEndpoint
	38, // 47: aruna.api.storage.models.v2.Collection.rule_bindings:type_name -> aruna.api.storage.models.v2.RuleBinding
	23, // 48: aruna.api.storage.models.v2.Dataset.key_values:type_name -> aruna.api.storage.models.v2.KeyValue
	24, // 49: aruna.api.storage.models.v2.Dataset.relations:type_name -> aruna.api.storage.models.v2.Relation
	28, // 50: aruna.api.storage.models.v2.Dataset.stats:type_name -> aruna.api.storage.models.v2.Stats
	1,  // 51: aruna.api.storage.models.v2.Dataset.data_class:type_name -> aruna.api.storage.models.v2.DataClass
	44, // 52: aruna.api.storage.models.v2.Dataset.created_at:type_name -> google.protobuf.Timestamp
	37, // 53: aruna.api.storage.models.v2.Dataset.authors:type_name -> aruna.api.storage.models.v2.Author
	10, // 54: aruna.api.storage.models.v2.Dataset.status:type_name -> aruna.api.storage.models.v2.Status
	32, // 55: aruna.api.storage.models.v2.Dataset.endpoints:type_name -> aruna.api.storage.models.v2.DataEndpoint
	38, // 56: aruna.api.storage.models.v2.Dataset.rule_bindings:type_name -> aruna.api.storage.models.v2.RuleBinding
	23, // 57: aruna.api.storage.models.v2.Object.key_values:type_name -> aruna.api.storage.models.v2.KeyValue
	24, // 58: aruna.api.storage.models.v2.Object.relations:type_name -> aruna.api.storage.models.v2.Relation
	1,  // 59: aruna.api.storage.models.v2.Object.data_class:type_name -> aruna.api.storage.models.v2.DataClass
	44, // 60: aruna.api.storage.models.v2.Object.created_at:type_name -> google.protobuf.Timestamp
	37, // 61: aruna.api.storage.models.v2.Object.authors:type_name -> aruna.api.storage.models.v2.Author
	10, // 62: aruna.api.storage.models.v2.Object.status:type_name -> aruna.api.storage.models.v2.Status
	32, // 63: aruna.api.storage.models.v2.Object.endpoints:type_name -> aruna.api.storage.models.v2.DataEndpoint
	29, // 64: aruna.api.storage.models.v2.Object.hashes:type_name -> aruna.api.storage.models.v2.Hash
	38, // 65: aruna.api.storage.models.v2.Object.rule_bindings:type_name -> aruna.api.storage.models.v2.RuleBinding
	66, // [66:66] is the sub-list for method output_type
	66, // [66:66] is the sub-list for method input_type
	66, // [66:66] is the sub-list for extension type_name
	66, // [66:66] is the sub-list for extension extendee
	0,  // [0:66] is the sub-list for field type_name
}

func init() { file_aruna_api_storage_models_v2_models_proto_init() }
func file_aruna_api_storage_models_v2_models_proto_init() {
	if File_aruna_api_storage_models_v2_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_storage_models_v2_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pubkey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataProxyAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OidcMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointHostConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Copy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v2_models_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Object); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Permission_ProjectId)(nil),
		(*Permission_CollectionId)(nil),
		(*Permission_DatasetId)(nil),
		(*Permission_ObjectId)(nil),
	}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Relation_External)(nil),
		(*Relation_Internal)(nil),
	}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*DataEndpoint_FullSync)(nil),
		(*DataEndpoint_PartialSync)(nil),
	}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Context_S3Credentials)(nil),
		(*Context_Copy)(nil),
	}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_aruna_api_storage_models_v2_models_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*GenericResource_Project)(nil),
		(*GenericResource_Collection)(nil),
		(*GenericResource_Dataset)(nil),
		(*GenericResource_Object)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_storage_models_v2_models_proto_rawDesc,
			NumEnums:      15,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aruna_api_storage_models_v2_models_proto_goTypes,
		DependencyIndexes: file_aruna_api_storage_models_v2_models_proto_depIdxs,
		EnumInfos:         file_aruna_api_storage_models_v2_models_proto_enumTypes,
		MessageInfos:      file_aruna_api_storage_models_v2_models_proto_msgTypes,
	}.Build()
	File_aruna_api_storage_models_v2_models_proto = out.File
	file_aruna_api_storage_models_v2_models_proto_rawDesc = nil
	file_aruna_api_storage_models_v2_models_proto_goTypes = nil
	file_aruna_api_storage_models_v2_models_proto_depIdxs = nil
}
