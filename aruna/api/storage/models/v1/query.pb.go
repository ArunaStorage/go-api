// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: aruna/api/storage/models/v1/query.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This file contains parameters for queries that return a list of resources.
// The results are paginated.
// The page request specifies the page size and last_id.
// If page_size is not specified, it defaults to 20.
// If page_size is -1, it returns all objects.
type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUuid string `protobuf:"bytes,1,opt,name=last_uuid,json=lastUuid,proto3" json:"last_uuid,omitempty"`  // This is the last ID of the previous returned request
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Default to 20, -1 for all
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *PageRequest) GetLastUuid() string {
	if x != nil {
		return x.LastUuid
	}
	return ""
}

func (x *PageRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// LabelFilter is used to filter resources by labels.
// The labels are specified as a map of key-value pairs.
type LabelFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []*KeyValue `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// True if and, if empty or false or
	AndOrOr bool `protobuf:"varint,2,opt,name=and_or_or,json=andOrOr,proto3" json:"and_or_or,omitempty"`
	// Should only the keys be considered ?
	KeysOnly bool `protobuf:"varint,3,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
}

func (x *LabelFilter) Reset() {
	*x = LabelFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelFilter) ProtoMessage() {}

func (x *LabelFilter) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelFilter.ProtoReflect.Descriptor instead.
func (*LabelFilter) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *LabelFilter) GetLabels() []*KeyValue {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LabelFilter) GetAndOrOr() bool {
	if x != nil {
		return x.AndOrOr
	}
	return false
}

func (x *LabelFilter) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

// This is a combined query for either a list of resource IDs or filtered by
// Label Can be expanded in the future to allow for more complex queries
type LabelOrIDQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels *LabelFilter `protobuf:"bytes,1,opt,name=labels,proto3" json:"labels,omitempty"`
	Ids    []string     `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *LabelOrIDQuery) Reset() {
	*x = LabelOrIDQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelOrIDQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelOrIDQuery) ProtoMessage() {}

func (x *LabelOrIDQuery) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_models_v1_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelOrIDQuery.ProtoReflect.Descriptor instead.
func (*LabelOrIDQuery) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_models_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *LabelOrIDQuery) GetLabels() *LabelFilter {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LabelOrIDQuery) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_aruna_api_storage_models_v1_query_proto protoreflect.FileDescriptor

var file_aruna_api_storage_models_v1_query_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x47, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x5f,
	0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6e, 0x64,
	0x4f, 0x72, 0x4f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x4f, 0x6e, 0x6c,
	0x79, 0x22, 0x64, 0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x72, 0x49, 0x44, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aruna_api_storage_models_v1_query_proto_rawDescOnce sync.Once
	file_aruna_api_storage_models_v1_query_proto_rawDescData = file_aruna_api_storage_models_v1_query_proto_rawDesc
)

func file_aruna_api_storage_models_v1_query_proto_rawDescGZIP() []byte {
	file_aruna_api_storage_models_v1_query_proto_rawDescOnce.Do(func() {
		file_aruna_api_storage_models_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_storage_models_v1_query_proto_rawDescData)
	})
	return file_aruna_api_storage_models_v1_query_proto_rawDescData
}

var file_aruna_api_storage_models_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_aruna_api_storage_models_v1_query_proto_goTypes = []interface{}{
	(*PageRequest)(nil),    // 0: aruna.api.storage.models.v1.PageRequest
	(*LabelFilter)(nil),    // 1: aruna.api.storage.models.v1.LabelFilter
	(*LabelOrIDQuery)(nil), // 2: aruna.api.storage.models.v1.LabelOrIDQuery
	(*KeyValue)(nil),       // 3: aruna.api.storage.models.v1.KeyValue
}
var file_aruna_api_storage_models_v1_query_proto_depIdxs = []int32{
	3, // 0: aruna.api.storage.models.v1.LabelFilter.labels:type_name -> aruna.api.storage.models.v1.KeyValue
	1, // 1: aruna.api.storage.models.v1.LabelOrIDQuery.labels:type_name -> aruna.api.storage.models.v1.LabelFilter
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_aruna_api_storage_models_v1_query_proto_init() }
func file_aruna_api_storage_models_v1_query_proto_init() {
	if File_aruna_api_storage_models_v1_query_proto != nil {
		return
	}
	file_aruna_api_storage_models_v1_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_storage_models_v1_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v1_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_models_v1_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelOrIDQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_storage_models_v1_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aruna_api_storage_models_v1_query_proto_goTypes,
		DependencyIndexes: file_aruna_api_storage_models_v1_query_proto_depIdxs,
		MessageInfos:      file_aruna_api_storage_models_v1_query_proto_msgTypes,
	}.Build()
	File_aruna_api_storage_models_v1_query_proto = out.File
	file_aruna_api_storage_models_v1_query_proto_rawDesc = nil
	file_aruna_api_storage_models_v1_query_proto_goTypes = nil
	file_aruna_api_storage_models_v1_query_proto_depIdxs = nil
}
