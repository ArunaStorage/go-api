// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aruna/api/storage/services/v2/info_service.proto

package servicesv2

import (
	v2 "github.com/ArunaStorage/go-api/v2/aruna/api/storage/models/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetStorageVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStorageVersionRequest) Reset() {
	*x = GetStorageVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageVersionRequest) ProtoMessage() {}

func (x *GetStorageVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageVersionRequest.ProtoReflect.Descriptor instead.
func (*GetStorageVersionRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{0}
}

type SemanticVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Complete version string
	VersionString string `protobuf:"bytes,1,opt,name=version_string,json=versionString,proto3" json:"version_string,omitempty"`
	// Semver according to https://semver.org/
	Major  int32  `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	Minor  int32  `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch  int32  `protobuf:"varint,4,opt,name=patch,proto3" json:"patch,omitempty"`
	Labels string `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
}

func (x *SemanticVersion) Reset() {
	*x = SemanticVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SemanticVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemanticVersion) ProtoMessage() {}

func (x *SemanticVersion) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemanticVersion.ProtoReflect.Descriptor instead.
func (*SemanticVersion) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{1}
}

func (x *SemanticVersion) GetVersionString() string {
	if x != nil {
		return x.VersionString
	}
	return ""
}

func (x *SemanticVersion) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *SemanticVersion) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *SemanticVersion) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *SemanticVersion) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

type LocationVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of a specific Location e.g Gie√üen / dataproxy / 0.5.0-beta.1
	Location string              `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Version  []*ComponentVersion `protobuf:"bytes,2,rep,name=version,proto3" json:"version,omitempty"`
}

func (x *LocationVersion) Reset() {
	*x = LocationVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationVersion) ProtoMessage() {}

func (x *LocationVersion) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationVersion.ProtoReflect.Descriptor instead.
func (*LocationVersion) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{2}
}

func (x *LocationVersion) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LocationVersion) GetVersion() []*ComponentVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

type ComponentVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of a specific component e.g. server, dataproxy etc. and their status by location
	Name    string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version *SemanticVersion `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ComponentVersion) Reset() {
	*x = ComponentVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentVersion) ProtoMessage() {}

func (x *ComponentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentVersion.ProtoReflect.Descriptor instead.
func (*ComponentVersion) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{3}
}

func (x *ComponentVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentVersion) GetVersion() *SemanticVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

// Version of each component by location
type GetStorageVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationVersion []*LocationVersion `protobuf:"bytes,1,rep,name=location_version,json=locationVersion,proto3" json:"location_version,omitempty"`
}

func (x *GetStorageVersionResponse) Reset() {
	*x = GetStorageVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageVersionResponse) ProtoMessage() {}

func (x *GetStorageVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageVersionResponse.ProtoReflect.Descriptor instead.
func (*GetStorageVersionResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetStorageVersionResponse) GetLocationVersion() []*LocationVersion {
	if x != nil {
		return x.LocationVersion
	}
	return nil
}

type GetStorageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStorageStatusRequest) Reset() {
	*x = GetStorageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageStatusRequest) ProtoMessage() {}

func (x *GetStorageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStorageStatusRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{5}
}

type LocationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status of a specific Location e.g Gie√üen / AVAILABLE
	Location        string             `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	ComponentStatus []*ComponentStatus `protobuf:"bytes,2,rep,name=component_status,json=componentStatus,proto3" json:"component_status,omitempty"`
}

func (x *LocationStatus) Reset() {
	*x = LocationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationStatus) ProtoMessage() {}

func (x *LocationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationStatus.ProtoReflect.Descriptor instead.
func (*LocationStatus) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{6}
}

func (x *LocationStatus) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LocationStatus) GetComponentStatus() []*ComponentStatus {
	if x != nil {
		return x.ComponentStatus
	}
	return nil
}

type ComponentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of a specific component e.g. server, dataproxy etc. and their status by location
	Name   string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status v2.ComponentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=aruna.api.storage.models.v2.ComponentStatus" json:"status,omitempty"`
}

func (x *ComponentStatus) Reset() {
	*x = ComponentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentStatus) ProtoMessage() {}

func (x *ComponentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentStatus.ProtoReflect.Descriptor instead.
func (*ComponentStatus) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{7}
}

func (x *ComponentStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentStatus) GetStatus() v2.ComponentStatus {
	if x != nil {
		return x.Status
	}
	return v2.ComponentStatus(0)
}

type GetStorageStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of all locations and their component / status
	LocationStatus []*LocationStatus `protobuf:"bytes,1,rep,name=location_status,json=locationStatus,proto3" json:"location_status,omitempty"`
}

func (x *GetStorageStatusResponse) Reset() {
	*x = GetStorageStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageStatusResponse) ProtoMessage() {}

func (x *GetStorageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStorageStatusResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetStorageStatusResponse) GetLocationStatus() []*LocationStatus {
	if x != nil {
		return x.LocationStatus
	}
	return nil
}

type GetPubkeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPubkeysRequest) Reset() {
	*x = GetPubkeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPubkeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubkeysRequest) ProtoMessage() {}

func (x *GetPubkeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubkeysRequest.ProtoReflect.Descriptor instead.
func (*GetPubkeysRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{9}
}

type GetPubkeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkeys []*v2.Pubkey `protobuf:"bytes,1,rep,name=pubkeys,proto3" json:"pubkeys,omitempty"`
}

func (x *GetPubkeysResponse) Reset() {
	*x = GetPubkeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPubkeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubkeysResponse) ProtoMessage() {}

func (x *GetPubkeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubkeysResponse.ProtoReflect.Descriptor instead.
func (*GetPubkeysResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetPubkeysResponse) GetPubkeys() []*v2.Pubkey {
	if x != nil {
		return x.Pubkeys
	}
	return nil
}

type Anouncement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content   string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Anouncement) Reset() {
	*x = Anouncement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anouncement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anouncement) ProtoMessage() {}

func (x *Anouncement) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anouncement.ProtoReflect.Descriptor instead.
func (*Anouncement) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{11}
}

func (x *Anouncement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Anouncement) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Anouncement) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetAnouncementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAnouncementsRequest) Reset() {
	*x = GetAnouncementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnouncementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnouncementsRequest) ProtoMessage() {}

func (x *GetAnouncementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnouncementsRequest.ProtoReflect.Descriptor instead.
func (*GetAnouncementsRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{12}
}

type GetAnouncementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anouncements []*Anouncement `protobuf:"bytes,1,rep,name=anouncements,proto3" json:"anouncements,omitempty"`
}

func (x *GetAnouncementsResponse) Reset() {
	*x = GetAnouncementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnouncementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnouncementsResponse) ProtoMessage() {}

func (x *GetAnouncementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnouncementsResponse.ProtoReflect.Descriptor instead.
func (*GetAnouncementsResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetAnouncementsResponse) GetAnouncements() []*Anouncement {
	if x != nil {
		return x.Anouncements
	}
	return nil
}

type SetAnouncementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnouncementsUpsert []*Anouncement `protobuf:"bytes,1,rep,name=anouncements_upsert,json=anouncementsUpsert,proto3" json:"anouncements_upsert,omitempty"`
	AnouncementsDelete []string       `protobuf:"bytes,2,rep,name=anouncements_delete,json=anouncementsDelete,proto3" json:"anouncements_delete,omitempty"`
}

func (x *SetAnouncementsRequest) Reset() {
	*x = SetAnouncementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAnouncementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAnouncementsRequest) ProtoMessage() {}

func (x *SetAnouncementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAnouncementsRequest.ProtoReflect.Descriptor instead.
func (*SetAnouncementsRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{14}
}

func (x *SetAnouncementsRequest) GetAnouncementsUpsert() []*Anouncement {
	if x != nil {
		return x.AnouncementsUpsert
	}
	return nil
}

func (x *SetAnouncementsRequest) GetAnouncementsDelete() []string {
	if x != nil {
		return x.AnouncementsDelete
	}
	return nil
}

type SetAnouncementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anouncements []*Anouncement `protobuf:"bytes,1,rep,name=anouncements,proto3" json:"anouncements,omitempty"`
}

func (x *SetAnouncementsResponse) Reset() {
	*x = SetAnouncementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAnouncementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAnouncementsResponse) ProtoMessage() {}

func (x *SetAnouncementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_storage_services_v2_info_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAnouncementsResponse.ProtoReflect.Descriptor instead.
func (*SetAnouncementsResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP(), []int{15}
}

func (x *SetAnouncementsResponse) GetAnouncements() []*Anouncement {
	if x != nil {
		return x.Anouncements
	}
	return nil
}

var File_aruna_api_storage_services_v2_info_service_proto protoreflect.FileDescriptor

var file_aruna_api_storage_services_v2_info_service_proto_rawDesc = []byte{
	0x0a, 0x30, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x2f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x1a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6d, 0x61, 0x6e,
	0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x78, 0x0a, 0x0f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x19, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x10, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x6b, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x72, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0x72, 0x0a, 0x0b, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x61, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x13, 0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x75, 0x70, 0x73, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x61, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x2f, 0x0a, 0x13, 0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x22, 0x69, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c,
	0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c,
	0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xb1, 0x06, 0x0a,
	0x14, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x9c, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x9f, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x12, 0x15, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x61, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x74,
	0x42, 0x9a, 0x02, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x42, 0x10, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x76, 0x32, 0xa2, 0x02, 0x04, 0x41, 0x41, 0x53, 0x53, 0xaa, 0x02, 0x1d,
	0x41, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x1d,
	0x41, 0x72, 0x75, 0x6e, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x29,
	0x41, 0x72, 0x75, 0x6e, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x21, 0x41, 0x72, 0x75, 0x6e,
	0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3a,
	0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aruna_api_storage_services_v2_info_service_proto_rawDescOnce sync.Once
	file_aruna_api_storage_services_v2_info_service_proto_rawDescData = file_aruna_api_storage_services_v2_info_service_proto_rawDesc
)

func file_aruna_api_storage_services_v2_info_service_proto_rawDescGZIP() []byte {
	file_aruna_api_storage_services_v2_info_service_proto_rawDescOnce.Do(func() {
		file_aruna_api_storage_services_v2_info_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_storage_services_v2_info_service_proto_rawDescData)
	})
	return file_aruna_api_storage_services_v2_info_service_proto_rawDescData
}

var file_aruna_api_storage_services_v2_info_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_aruna_api_storage_services_v2_info_service_proto_goTypes = []interface{}{
	(*GetStorageVersionRequest)(nil),  // 0: aruna.api.storage.services.v2.GetStorageVersionRequest
	(*SemanticVersion)(nil),           // 1: aruna.api.storage.services.v2.SemanticVersion
	(*LocationVersion)(nil),           // 2: aruna.api.storage.services.v2.LocationVersion
	(*ComponentVersion)(nil),          // 3: aruna.api.storage.services.v2.ComponentVersion
	(*GetStorageVersionResponse)(nil), // 4: aruna.api.storage.services.v2.GetStorageVersionResponse
	(*GetStorageStatusRequest)(nil),   // 5: aruna.api.storage.services.v2.GetStorageStatusRequest
	(*LocationStatus)(nil),            // 6: aruna.api.storage.services.v2.LocationStatus
	(*ComponentStatus)(nil),           // 7: aruna.api.storage.services.v2.ComponentStatus
	(*GetStorageStatusResponse)(nil),  // 8: aruna.api.storage.services.v2.GetStorageStatusResponse
	(*GetPubkeysRequest)(nil),         // 9: aruna.api.storage.services.v2.GetPubkeysRequest
	(*GetPubkeysResponse)(nil),        // 10: aruna.api.storage.services.v2.GetPubkeysResponse
	(*Anouncement)(nil),               // 11: aruna.api.storage.services.v2.Anouncement
	(*GetAnouncementsRequest)(nil),    // 12: aruna.api.storage.services.v2.GetAnouncementsRequest
	(*GetAnouncementsResponse)(nil),   // 13: aruna.api.storage.services.v2.GetAnouncementsResponse
	(*SetAnouncementsRequest)(nil),    // 14: aruna.api.storage.services.v2.SetAnouncementsRequest
	(*SetAnouncementsResponse)(nil),   // 15: aruna.api.storage.services.v2.SetAnouncementsResponse
	(v2.ComponentStatus)(0),           // 16: aruna.api.storage.models.v2.ComponentStatus
	(*v2.Pubkey)(nil),                 // 17: aruna.api.storage.models.v2.Pubkey
	(*timestamppb.Timestamp)(nil),     // 18: google.protobuf.Timestamp
}
var file_aruna_api_storage_services_v2_info_service_proto_depIdxs = []int32{
	3,  // 0: aruna.api.storage.services.v2.LocationVersion.version:type_name -> aruna.api.storage.services.v2.ComponentVersion
	1,  // 1: aruna.api.storage.services.v2.ComponentVersion.version:type_name -> aruna.api.storage.services.v2.SemanticVersion
	2,  // 2: aruna.api.storage.services.v2.GetStorageVersionResponse.location_version:type_name -> aruna.api.storage.services.v2.LocationVersion
	7,  // 3: aruna.api.storage.services.v2.LocationStatus.component_status:type_name -> aruna.api.storage.services.v2.ComponentStatus
	16, // 4: aruna.api.storage.services.v2.ComponentStatus.status:type_name -> aruna.api.storage.models.v2.ComponentStatus
	6,  // 5: aruna.api.storage.services.v2.GetStorageStatusResponse.location_status:type_name -> aruna.api.storage.services.v2.LocationStatus
	17, // 6: aruna.api.storage.services.v2.GetPubkeysResponse.pubkeys:type_name -> aruna.api.storage.models.v2.Pubkey
	18, // 7: aruna.api.storage.services.v2.Anouncement.created_at:type_name -> google.protobuf.Timestamp
	11, // 8: aruna.api.storage.services.v2.GetAnouncementsResponse.anouncements:type_name -> aruna.api.storage.services.v2.Anouncement
	11, // 9: aruna.api.storage.services.v2.SetAnouncementsRequest.anouncements_upsert:type_name -> aruna.api.storage.services.v2.Anouncement
	11, // 10: aruna.api.storage.services.v2.SetAnouncementsResponse.anouncements:type_name -> aruna.api.storage.services.v2.Anouncement
	0,  // 11: aruna.api.storage.services.v2.StorageStatusService.GetStorageVersion:input_type -> aruna.api.storage.services.v2.GetStorageVersionRequest
	5,  // 12: aruna.api.storage.services.v2.StorageStatusService.GetStorageStatus:input_type -> aruna.api.storage.services.v2.GetStorageStatusRequest
	9,  // 13: aruna.api.storage.services.v2.StorageStatusService.GetPubkeys:input_type -> aruna.api.storage.services.v2.GetPubkeysRequest
	12, // 14: aruna.api.storage.services.v2.StorageStatusService.GetAnouncements:input_type -> aruna.api.storage.services.v2.GetAnouncementsRequest
	14, // 15: aruna.api.storage.services.v2.StorageStatusService.SetAnouncements:input_type -> aruna.api.storage.services.v2.SetAnouncementsRequest
	4,  // 16: aruna.api.storage.services.v2.StorageStatusService.GetStorageVersion:output_type -> aruna.api.storage.services.v2.GetStorageVersionResponse
	8,  // 17: aruna.api.storage.services.v2.StorageStatusService.GetStorageStatus:output_type -> aruna.api.storage.services.v2.GetStorageStatusResponse
	10, // 18: aruna.api.storage.services.v2.StorageStatusService.GetPubkeys:output_type -> aruna.api.storage.services.v2.GetPubkeysResponse
	13, // 19: aruna.api.storage.services.v2.StorageStatusService.GetAnouncements:output_type -> aruna.api.storage.services.v2.GetAnouncementsResponse
	15, // 20: aruna.api.storage.services.v2.StorageStatusService.SetAnouncements:output_type -> aruna.api.storage.services.v2.SetAnouncementsResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_aruna_api_storage_services_v2_info_service_proto_init() }
func file_aruna_api_storage_services_v2_info_service_proto_init() {
	if File_aruna_api_storage_services_v2_info_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SemanticVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStorageStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPubkeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPubkeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Anouncement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnouncementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnouncementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAnouncementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_storage_services_v2_info_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAnouncementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_storage_services_v2_info_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aruna_api_storage_services_v2_info_service_proto_goTypes,
		DependencyIndexes: file_aruna_api_storage_services_v2_info_service_proto_depIdxs,
		MessageInfos:      file_aruna_api_storage_services_v2_info_service_proto_msgTypes,
	}.Build()
	File_aruna_api_storage_services_v2_info_service_proto = out.File
	file_aruna_api_storage_services_v2_info_service_proto_rawDesc = nil
	file_aruna_api_storage_services_v2_info_service_proto_goTypes = nil
	file_aruna_api_storage_services_v2_info_service_proto_depIdxs = nil
}
