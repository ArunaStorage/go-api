// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aruna/api/notification/services/v2/notification_service.proto

package v2

import (
	v2 "github.com/ArunaStorage/go-api/v2/aruna/api/storage/models/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventVariant int32

const (
	EventVariant_EVENT_VARIANT_UNSPECIFIED EventVariant = 0
	EventVariant_EVENT_VARIANT_CREATED     EventVariant = 1
	EventVariant_EVENT_VARIANT_AVAILABLE   EventVariant = 2
	EventVariant_EVENT_VARIANT_UPDATED     EventVariant = 3
	EventVariant_EVENT_VARIANT_DELETED     EventVariant = 4
	EventVariant_EVENT_VARIANT_SNAPSHOTTED EventVariant = 5
)

// Enum value maps for EventVariant.
var (
	EventVariant_name = map[int32]string{
		0: "EVENT_VARIANT_UNSPECIFIED",
		1: "EVENT_VARIANT_CREATED",
		2: "EVENT_VARIANT_AVAILABLE",
		3: "EVENT_VARIANT_UPDATED",
		4: "EVENT_VARIANT_DELETED",
		5: "EVENT_VARIANT_SNAPSHOTTED",
	}
	EventVariant_value = map[string]int32{
		"EVENT_VARIANT_UNSPECIFIED": 0,
		"EVENT_VARIANT_CREATED":     1,
		"EVENT_VARIANT_AVAILABLE":   2,
		"EVENT_VARIANT_UPDATED":     3,
		"EVENT_VARIANT_DELETED":     4,
		"EVENT_VARIANT_SNAPSHOTTED": 5,
	}
)

func (x EventVariant) Enum() *EventVariant {
	p := new(EventVariant)
	*p = x
	return p
}

func (x EventVariant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventVariant) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_notification_services_v2_notification_service_proto_enumTypes[0].Descriptor()
}

func (EventVariant) Type() protoreflect.EnumType {
	return &file_aruna_api_notification_services_v2_notification_service_proto_enumTypes[0]
}

func (x EventVariant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventVariant.Descriptor instead.
func (EventVariant) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{0}
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId           string             `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	PersistentResourceId bool               `protobuf:"varint,2,opt,name=persistent_resource_id,json=persistentResourceId,proto3" json:"persistent_resource_id,omitempty"`
	Checksum             string             `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	ResourceVariant      v2.ResourceVariant `protobuf:"varint,4,opt,name=resource_variant,json=resourceVariant,proto3,enum=aruna.api.storage.models.v2.ResourceVariant" json:"resource_variant,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Resource) GetPersistentResourceId() bool {
	if x != nil {
		return x.PersistentResourceId
	}
	return false
}

func (x *Resource) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Resource) GetResourceVariant() v2.ResourceVariant {
	if x != nil {
		return x.ResourceVariant
	}
	return v2.ResourceVariant(0)
}

type ResourceTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId      string             `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceVariant v2.ResourceVariant `protobuf:"varint,2,opt,name=resource_variant,json=resourceVariant,proto3,enum=aruna.api.storage.models.v2.ResourceVariant" json:"resource_variant,omitempty"`
}

func (x *ResourceTarget) Reset() {
	*x = ResourceTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTarget) ProtoMessage() {}

func (x *ResourceTarget) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTarget.ProtoReflect.Descriptor instead.
func (*ResourceTarget) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceTarget) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ResourceTarget) GetResourceVariant() v2.ResourceVariant {
	if x != nil {
		return x.ResourceVariant
	}
	return v2.ResourceVariant(0)
}

type CreateStreamConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//
	//	*CreateStreamConsumerRequest_Resource
	//	*CreateStreamConsumerRequest_User
	//	*CreateStreamConsumerRequest_Anouncements
	//	*CreateStreamConsumerRequest_All
	Target              isCreateStreamConsumerRequest_Target `protobuf_oneof:"target"`
	IncludeSubresources bool                                 `protobuf:"varint,5,opt,name=include_subresources,json=includeSubresources,proto3" json:"include_subresources,omitempty"`
	// Types that are assignable to StreamType:
	//
	//	*CreateStreamConsumerRequest_StreamAll
	//	*CreateStreamConsumerRequest_StreamFromDate
	//	*CreateStreamConsumerRequest_StreamFromSequence
	StreamType isCreateStreamConsumerRequest_StreamType `protobuf_oneof:"stream_type"`
}

func (x *CreateStreamConsumerRequest) Reset() {
	*x = CreateStreamConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamConsumerRequest) ProtoMessage() {}

func (x *CreateStreamConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamConsumerRequest.ProtoReflect.Descriptor instead.
func (*CreateStreamConsumerRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{2}
}

func (m *CreateStreamConsumerRequest) GetTarget() isCreateStreamConsumerRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *CreateStreamConsumerRequest) GetResource() *ResourceTarget {
	if x, ok := x.GetTarget().(*CreateStreamConsumerRequest_Resource); ok {
		return x.Resource
	}
	return nil
}

func (x *CreateStreamConsumerRequest) GetUser() string {
	if x, ok := x.GetTarget().(*CreateStreamConsumerRequest_User); ok {
		return x.User
	}
	return ""
}

func (x *CreateStreamConsumerRequest) GetAnouncements() bool {
	if x, ok := x.GetTarget().(*CreateStreamConsumerRequest_Anouncements); ok {
		return x.Anouncements
	}
	return false
}

func (x *CreateStreamConsumerRequest) GetAll() bool {
	if x, ok := x.GetTarget().(*CreateStreamConsumerRequest_All); ok {
		return x.All
	}
	return false
}

func (x *CreateStreamConsumerRequest) GetIncludeSubresources() bool {
	if x != nil {
		return x.IncludeSubresources
	}
	return false
}

func (m *CreateStreamConsumerRequest) GetStreamType() isCreateStreamConsumerRequest_StreamType {
	if m != nil {
		return m.StreamType
	}
	return nil
}

func (x *CreateStreamConsumerRequest) GetStreamAll() *StreamAll {
	if x, ok := x.GetStreamType().(*CreateStreamConsumerRequest_StreamAll); ok {
		return x.StreamAll
	}
	return nil
}

func (x *CreateStreamConsumerRequest) GetStreamFromDate() *StreamFromDate {
	if x, ok := x.GetStreamType().(*CreateStreamConsumerRequest_StreamFromDate); ok {
		return x.StreamFromDate
	}
	return nil
}

func (x *CreateStreamConsumerRequest) GetStreamFromSequence() *StreamFromSequence {
	if x, ok := x.GetStreamType().(*CreateStreamConsumerRequest_StreamFromSequence); ok {
		return x.StreamFromSequence
	}
	return nil
}

type isCreateStreamConsumerRequest_Target interface {
	isCreateStreamConsumerRequest_Target()
}

type CreateStreamConsumerRequest_Resource struct {
	Resource *ResourceTarget `protobuf:"bytes,1,opt,name=resource,proto3,oneof"`
}

type CreateStreamConsumerRequest_User struct {
	User string `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type CreateStreamConsumerRequest_Anouncements struct {
	Anouncements bool `protobuf:"varint,3,opt,name=anouncements,proto3,oneof"`
}

type CreateStreamConsumerRequest_All struct {
	All bool `protobuf:"varint,4,opt,name=all,proto3,oneof"`
}

func (*CreateStreamConsumerRequest_Resource) isCreateStreamConsumerRequest_Target() {}

func (*CreateStreamConsumerRequest_User) isCreateStreamConsumerRequest_Target() {}

func (*CreateStreamConsumerRequest_Anouncements) isCreateStreamConsumerRequest_Target() {}

func (*CreateStreamConsumerRequest_All) isCreateStreamConsumerRequest_Target() {}

type isCreateStreamConsumerRequest_StreamType interface {
	isCreateStreamConsumerRequest_StreamType()
}

type CreateStreamConsumerRequest_StreamAll struct {
	StreamAll *StreamAll `protobuf:"bytes,6,opt,name=stream_all,json=streamAll,proto3,oneof"`
}

type CreateStreamConsumerRequest_StreamFromDate struct {
	StreamFromDate *StreamFromDate `protobuf:"bytes,7,opt,name=stream_from_date,json=streamFromDate,proto3,oneof"`
}

type CreateStreamConsumerRequest_StreamFromSequence struct {
	StreamFromSequence *StreamFromSequence `protobuf:"bytes,8,opt,name=stream_from_sequence,json=streamFromSequence,proto3,oneof"`
}

func (*CreateStreamConsumerRequest_StreamAll) isCreateStreamConsumerRequest_StreamType() {}

func (*CreateStreamConsumerRequest_StreamFromDate) isCreateStreamConsumerRequest_StreamType() {}

func (*CreateStreamConsumerRequest_StreamFromSequence) isCreateStreamConsumerRequest_StreamType() {}

type CreateStreamConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamConsumer string `protobuf:"bytes,1,opt,name=stream_consumer,json=streamConsumer,proto3" json:"stream_consumer,omitempty"`
}

func (x *CreateStreamConsumerResponse) Reset() {
	*x = CreateStreamConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamConsumerResponse) ProtoMessage() {}

func (x *CreateStreamConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamConsumerResponse.ProtoReflect.Descriptor instead.
func (*CreateStreamConsumerResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStreamConsumerResponse) GetStreamConsumer() string {
	if x != nil {
		return x.StreamConsumer
	}
	return ""
}

type GetEventMessageBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamConsumer string `protobuf:"bytes,1,opt,name=stream_consumer,json=streamConsumer,proto3" json:"stream_consumer,omitempty"`
	BatchSize      uint32 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
}

func (x *GetEventMessageBatchRequest) Reset() {
	*x = GetEventMessageBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventMessageBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventMessageBatchRequest) ProtoMessage() {}

func (x *GetEventMessageBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventMessageBatchRequest.ProtoReflect.Descriptor instead.
func (*GetEventMessageBatchRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventMessageBatchRequest) GetStreamConsumer() string {
	if x != nil {
		return x.StreamConsumer
	}
	return ""
}

func (x *GetEventMessageBatchRequest) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type GetEventMessageBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*EventMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *GetEventMessageBatchResponse) Reset() {
	*x = GetEventMessageBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventMessageBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventMessageBatchResponse) ProtoMessage() {}

func (x *GetEventMessageBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventMessageBatchResponse.ProtoReflect.Descriptor instead.
func (*GetEventMessageBatchResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetEventMessageBatchResponse) GetMessages() []*EventMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetEventMessageStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamConsumer string `protobuf:"bytes,1,opt,name=stream_consumer,json=streamConsumer,proto3" json:"stream_consumer,omitempty"`
}

func (x *GetEventMessageStreamRequest) Reset() {
	*x = GetEventMessageStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventMessageStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventMessageStreamRequest) ProtoMessage() {}

func (x *GetEventMessageStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventMessageStreamRequest.ProtoReflect.Descriptor instead.
func (*GetEventMessageStreamRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetEventMessageStreamRequest) GetStreamConsumer() string {
	if x != nil {
		return x.StreamConsumer
	}
	return ""
}

type GetEventMessageStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *EventMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetEventMessageStreamResponse) Reset() {
	*x = GetEventMessageStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventMessageStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventMessageStreamResponse) ProtoMessage() {}

func (x *GetEventMessageStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventMessageStreamResponse.ProtoReflect.Descriptor instead.
func (*GetEventMessageStreamResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventMessageStreamResponse) GetMessage() *EventMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type AcknowledgeMessageBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*Reply `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
}

func (x *AcknowledgeMessageBatchRequest) Reset() {
	*x = AcknowledgeMessageBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeMessageBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeMessageBatchRequest) ProtoMessage() {}

func (x *AcknowledgeMessageBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeMessageBatchRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeMessageBatchRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{8}
}

func (x *AcknowledgeMessageBatchRequest) GetReplies() []*Reply {
	if x != nil {
		return x.Replies
	}
	return nil
}

type AcknowledgeMessageBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcknowledgeMessageBatchResponse) Reset() {
	*x = AcknowledgeMessageBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcknowledgeMessageBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeMessageBatchResponse) ProtoMessage() {}

func (x *AcknowledgeMessageBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeMessageBatchResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeMessageBatchResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{9}
}

type DeleteStreamConsumerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamConsumer string `protobuf:"bytes,1,opt,name=stream_consumer,json=streamConsumer,proto3" json:"stream_consumer,omitempty"`
}

func (x *DeleteStreamConsumerRequest) Reset() {
	*x = DeleteStreamConsumerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStreamConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamConsumerRequest) ProtoMessage() {}

func (x *DeleteStreamConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamConsumerRequest.ProtoReflect.Descriptor instead.
func (*DeleteStreamConsumerRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteStreamConsumerRequest) GetStreamConsumer() string {
	if x != nil {
		return x.StreamConsumer
	}
	return ""
}

type DeleteStreamConsumerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteStreamConsumerResponse) Reset() {
	*x = DeleteStreamConsumerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStreamConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStreamConsumerResponse) ProtoMessage() {}

func (x *DeleteStreamConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStreamConsumerResponse.ProtoReflect.Descriptor instead.
func (*DeleteStreamConsumerResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{11}
}

type StreamFromSequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *StreamFromSequence) Reset() {
	*x = StreamFromSequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFromSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFromSequence) ProtoMessage() {}

func (x *StreamFromSequence) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFromSequence.ProtoReflect.Descriptor instead.
func (*StreamFromSequence) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{12}
}

func (x *StreamFromSequence) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type StreamFromDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *StreamFromDate) Reset() {
	*x = StreamFromDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamFromDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFromDate) ProtoMessage() {}

func (x *StreamFromDate) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFromDate.ProtoReflect.Descriptor instead.
func (*StreamFromDate) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{13}
}

func (x *StreamFromDate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type StreamAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamAll) Reset() {
	*x = StreamAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAll) ProtoMessage() {}

func (x *StreamAll) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAll.ProtoReflect.Descriptor instead.
func (*StreamAll) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{14}
}

type EventMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MessageVariant:
	//
	//	*EventMessage_ResourceEvent
	//	*EventMessage_UserEvent
	//	*EventMessage_AnnouncementEvent
	MessageVariant isEventMessage_MessageVariant `protobuf_oneof:"message_variant"`
}

func (x *EventMessage) Reset() {
	*x = EventMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMessage) ProtoMessage() {}

func (x *EventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMessage.ProtoReflect.Descriptor instead.
func (*EventMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{15}
}

func (m *EventMessage) GetMessageVariant() isEventMessage_MessageVariant {
	if m != nil {
		return m.MessageVariant
	}
	return nil
}

func (x *EventMessage) GetResourceEvent() *ResourceEvent {
	if x, ok := x.GetMessageVariant().(*EventMessage_ResourceEvent); ok {
		return x.ResourceEvent
	}
	return nil
}

func (x *EventMessage) GetUserEvent() *UserEvent {
	if x, ok := x.GetMessageVariant().(*EventMessage_UserEvent); ok {
		return x.UserEvent
	}
	return nil
}

func (x *EventMessage) GetAnnouncementEvent() *AnouncementEvent {
	if x, ok := x.GetMessageVariant().(*EventMessage_AnnouncementEvent); ok {
		return x.AnnouncementEvent
	}
	return nil
}

type isEventMessage_MessageVariant interface {
	isEventMessage_MessageVariant()
}

type EventMessage_ResourceEvent struct {
	ResourceEvent *ResourceEvent `protobuf:"bytes,1,opt,name=resource_event,json=resourceEvent,proto3,oneof"`
}

type EventMessage_UserEvent struct {
	UserEvent *UserEvent `protobuf:"bytes,2,opt,name=user_event,json=userEvent,proto3,oneof"`
}

type EventMessage_AnnouncementEvent struct {
	AnnouncementEvent *AnouncementEvent `protobuf:"bytes,3,opt,name=announcement_event,json=announcementEvent,proto3,oneof"`
}

func (*EventMessage_ResourceEvent) isEventMessage_MessageVariant() {}

func (*EventMessage_UserEvent) isEventMessage_MessageVariant() {}

func (*EventMessage_AnnouncementEvent) isEventMessage_MessageVariant() {}

type ResourceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource     *Resource    `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	EventVariant EventVariant `protobuf:"varint,2,opt,name=event_variant,json=eventVariant,proto3,enum=aruna.api.notification.services.v2.EventVariant" json:"event_variant,omitempty"`
	Reply        *Reply       `protobuf:"bytes,3,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *ResourceEvent) Reset() {
	*x = ResourceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceEvent) ProtoMessage() {}

func (x *ResourceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceEvent.ProtoReflect.Descriptor instead.
func (*ResourceEvent) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{16}
}

func (x *ResourceEvent) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResourceEvent) GetEventVariant() EventVariant {
	if x != nil {
		return x.EventVariant
	}
	return EventVariant_EVENT_VARIANT_UNSPECIFIED
}

func (x *ResourceEvent) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type UserEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventVariant EventVariant `protobuf:"varint,2,opt,name=event_variant,json=eventVariant,proto3,enum=aruna.api.notification.services.v2.EventVariant" json:"event_variant,omitempty"`
	Checksum     string       `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Reply        *Reply       `protobuf:"bytes,4,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *UserEvent) Reset() {
	*x = UserEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEvent) ProtoMessage() {}

func (x *UserEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEvent.ProtoReflect.Descriptor instead.
func (*UserEvent) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{17}
}

func (x *UserEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserEvent) GetEventVariant() EventVariant {
	if x != nil {
		return x.EventVariant
	}
	return EventVariant_EVENT_VARIANT_UNSPECIFIED
}

func (x *UserEvent) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *UserEvent) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Salt  string `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	Hmac  string `protobuf:"bytes,3,opt,name=hmac,proto3" json:"hmac,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{18}
}

func (x *Reply) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *Reply) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *Reply) GetHmac() string {
	if x != nil {
		return x.Hmac
	}
	return ""
}

type ScheduledDowntime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location  string                 `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Component string                 `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`
	From      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ScheduledDowntime) Reset() {
	*x = ScheduledDowntime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledDowntime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledDowntime) ProtoMessage() {}

func (x *ScheduledDowntime) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledDowntime.ProtoReflect.Descriptor instead.
func (*ScheduledDowntime) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{19}
}

func (x *ScheduledDowntime) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ScheduledDowntime) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *ScheduledDowntime) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ScheduledDowntime) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type NewVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Component  string `protobuf:"bytes,2,opt,name=component,proto3" json:"component,omitempty"`
	NewVersion string `protobuf:"bytes,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
}

func (x *NewVersion) Reset() {
	*x = NewVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewVersion) ProtoMessage() {}

func (x *NewVersion) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewVersion.ProtoReflect.Descriptor instead.
func (*NewVersion) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{20}
}

func (x *NewVersion) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *NewVersion) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *NewVersion) GetNewVersion() string {
	if x != nil {
		return x.NewVersion
	}
	return ""
}

type NewPubkey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey string `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (x *NewPubkey) Reset() {
	*x = NewPubkey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewPubkey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPubkey) ProtoMessage() {}

func (x *NewPubkey) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPubkey.ProtoReflect.Descriptor instead.
func (*NewPubkey) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{21}
}

func (x *NewPubkey) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

type AnouncementEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventVariant:
	//
	//	*AnouncementEvent_NewDataProxyId
	//	*AnouncementEvent_RemoveDataProxyId
	//	*AnouncementEvent_UpdateDataProxyId
	//	*AnouncementEvent_NewPubkey
	//	*AnouncementEvent_RemovePubkey
	//	*AnouncementEvent_Downtime
	//	*AnouncementEvent_Version
	EventVariant isAnouncementEvent_EventVariant `protobuf_oneof:"event_variant"`
	Reply        *Reply                          `protobuf:"bytes,8,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *AnouncementEvent) Reset() {
	*x = AnouncementEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnouncementEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnouncementEvent) ProtoMessage() {}

func (x *AnouncementEvent) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnouncementEvent.ProtoReflect.Descriptor instead.
func (*AnouncementEvent) Descriptor() ([]byte, []int) {
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP(), []int{22}
}

func (m *AnouncementEvent) GetEventVariant() isAnouncementEvent_EventVariant {
	if m != nil {
		return m.EventVariant
	}
	return nil
}

func (x *AnouncementEvent) GetNewDataProxyId() string {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_NewDataProxyId); ok {
		return x.NewDataProxyId
	}
	return ""
}

func (x *AnouncementEvent) GetRemoveDataProxyId() string {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_RemoveDataProxyId); ok {
		return x.RemoveDataProxyId
	}
	return ""
}

func (x *AnouncementEvent) GetUpdateDataProxyId() string {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_UpdateDataProxyId); ok {
		return x.UpdateDataProxyId
	}
	return ""
}

func (x *AnouncementEvent) GetNewPubkey() int32 {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_NewPubkey); ok {
		return x.NewPubkey
	}
	return 0
}

func (x *AnouncementEvent) GetRemovePubkey() int32 {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_RemovePubkey); ok {
		return x.RemovePubkey
	}
	return 0
}

func (x *AnouncementEvent) GetDowntime() *ScheduledDowntime {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_Downtime); ok {
		return x.Downtime
	}
	return nil
}

func (x *AnouncementEvent) GetVersion() *NewVersion {
	if x, ok := x.GetEventVariant().(*AnouncementEvent_Version); ok {
		return x.Version
	}
	return nil
}

func (x *AnouncementEvent) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type isAnouncementEvent_EventVariant interface {
	isAnouncementEvent_EventVariant()
}

type AnouncementEvent_NewDataProxyId struct {
	NewDataProxyId string `protobuf:"bytes,1,opt,name=new_data_proxy_id,json=newDataProxyId,proto3,oneof"`
}

type AnouncementEvent_RemoveDataProxyId struct {
	RemoveDataProxyId string `protobuf:"bytes,2,opt,name=remove_data_proxy_id,json=removeDataProxyId,proto3,oneof"`
}

type AnouncementEvent_UpdateDataProxyId struct {
	UpdateDataProxyId string `protobuf:"bytes,3,opt,name=update_data_proxy_id,json=updateDataProxyId,proto3,oneof"`
}

type AnouncementEvent_NewPubkey struct {
	NewPubkey int32 `protobuf:"varint,4,opt,name=new_pubkey,json=newPubkey,proto3,oneof"`
}

type AnouncementEvent_RemovePubkey struct {
	RemovePubkey int32 `protobuf:"varint,5,opt,name=remove_pubkey,json=removePubkey,proto3,oneof"`
}

type AnouncementEvent_Downtime struct {
	Downtime *ScheduledDowntime `protobuf:"bytes,6,opt,name=downtime,proto3,oneof"`
}

type AnouncementEvent_Version struct {
	Version *NewVersion `protobuf:"bytes,7,opt,name=version,proto3,oneof"`
}

func (*AnouncementEvent_NewDataProxyId) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_RemoveDataProxyId) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_UpdateDataProxyId) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_NewPubkey) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_RemovePubkey) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_Downtime) isAnouncementEvent_EventVariant() {}

func (*AnouncementEvent_Version) isAnouncementEvent_EventVariant() {}

var File_aruna_api_notification_services_v2_notification_service_proto protoreflect.FileDescriptor

var file_aruna_api_notification_services_v2_notification_service_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x22, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x76,
	0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x57,
	0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x10, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x22, 0xa7, 0x04, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0c,
	0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x73, 0x75, 0x62, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x75, 0x62,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x48, 0x01, 0x52, 0x09,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x12, 0x5e, 0x0a, 0x10, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46,
	0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x14, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x01, 0x52, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x47,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x6c,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x65, 0x0a, 0x1e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x1b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x22,
	0xb4, 0x02, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x5a, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x65, 0x0a, 0x12,
	0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x09, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x55, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x75, 0x6d, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x45, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6d, 0x61, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6d, 0x61, 0x63, 0x22, 0xa9, 0x01, 0x0a,
	0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x23, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0xe0, 0x03, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x6e,
	0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x2a, 0xba, 0x01, 0x0a, 0x0c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x41,
	0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f,
	0x54, 0x54, 0x45, 0x44, 0x10, 0x05, 0x32, 0xbe, 0x06, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x3f, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3f, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xa0, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x40, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0xa4, 0x01, 0x0a, 0x17, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x42,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x43, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x12, 0x3f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xa6, 0x01, 0x0a, 0x43, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x42,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aruna_api_notification_services_v2_notification_service_proto_rawDescOnce sync.Once
	file_aruna_api_notification_services_v2_notification_service_proto_rawDescData = file_aruna_api_notification_services_v2_notification_service_proto_rawDesc
)

func file_aruna_api_notification_services_v2_notification_service_proto_rawDescGZIP() []byte {
	file_aruna_api_notification_services_v2_notification_service_proto_rawDescOnce.Do(func() {
		file_aruna_api_notification_services_v2_notification_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_notification_services_v2_notification_service_proto_rawDescData)
	})
	return file_aruna_api_notification_services_v2_notification_service_proto_rawDescData
}

var file_aruna_api_notification_services_v2_notification_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aruna_api_notification_services_v2_notification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_aruna_api_notification_services_v2_notification_service_proto_goTypes = []interface{}{
	(EventVariant)(0),                       // 0: aruna.api.notification.services.v2.EventVariant
	(*Resource)(nil),                        // 1: aruna.api.notification.services.v2.Resource
	(*ResourceTarget)(nil),                  // 2: aruna.api.notification.services.v2.ResourceTarget
	(*CreateStreamConsumerRequest)(nil),     // 3: aruna.api.notification.services.v2.CreateStreamConsumerRequest
	(*CreateStreamConsumerResponse)(nil),    // 4: aruna.api.notification.services.v2.CreateStreamConsumerResponse
	(*GetEventMessageBatchRequest)(nil),     // 5: aruna.api.notification.services.v2.GetEventMessageBatchRequest
	(*GetEventMessageBatchResponse)(nil),    // 6: aruna.api.notification.services.v2.GetEventMessageBatchResponse
	(*GetEventMessageStreamRequest)(nil),    // 7: aruna.api.notification.services.v2.GetEventMessageStreamRequest
	(*GetEventMessageStreamResponse)(nil),   // 8: aruna.api.notification.services.v2.GetEventMessageStreamResponse
	(*AcknowledgeMessageBatchRequest)(nil),  // 9: aruna.api.notification.services.v2.AcknowledgeMessageBatchRequest
	(*AcknowledgeMessageBatchResponse)(nil), // 10: aruna.api.notification.services.v2.AcknowledgeMessageBatchResponse
	(*DeleteStreamConsumerRequest)(nil),     // 11: aruna.api.notification.services.v2.DeleteStreamConsumerRequest
	(*DeleteStreamConsumerResponse)(nil),    // 12: aruna.api.notification.services.v2.DeleteStreamConsumerResponse
	(*StreamFromSequence)(nil),              // 13: aruna.api.notification.services.v2.StreamFromSequence
	(*StreamFromDate)(nil),                  // 14: aruna.api.notification.services.v2.StreamFromDate
	(*StreamAll)(nil),                       // 15: aruna.api.notification.services.v2.StreamAll
	(*EventMessage)(nil),                    // 16: aruna.api.notification.services.v2.EventMessage
	(*ResourceEvent)(nil),                   // 17: aruna.api.notification.services.v2.ResourceEvent
	(*UserEvent)(nil),                       // 18: aruna.api.notification.services.v2.UserEvent
	(*Reply)(nil),                           // 19: aruna.api.notification.services.v2.Reply
	(*ScheduledDowntime)(nil),               // 20: aruna.api.notification.services.v2.ScheduledDowntime
	(*NewVersion)(nil),                      // 21: aruna.api.notification.services.v2.NewVersion
	(*NewPubkey)(nil),                       // 22: aruna.api.notification.services.v2.NewPubkey
	(*AnouncementEvent)(nil),                // 23: aruna.api.notification.services.v2.AnouncementEvent
	(v2.ResourceVariant)(0),                 // 24: aruna.api.storage.models.v2.ResourceVariant
	(*timestamppb.Timestamp)(nil),           // 25: google.protobuf.Timestamp
}
var file_aruna_api_notification_services_v2_notification_service_proto_depIdxs = []int32{
	24, // 0: aruna.api.notification.services.v2.Resource.resource_variant:type_name -> aruna.api.storage.models.v2.ResourceVariant
	24, // 1: aruna.api.notification.services.v2.ResourceTarget.resource_variant:type_name -> aruna.api.storage.models.v2.ResourceVariant
	2,  // 2: aruna.api.notification.services.v2.CreateStreamConsumerRequest.resource:type_name -> aruna.api.notification.services.v2.ResourceTarget
	15, // 3: aruna.api.notification.services.v2.CreateStreamConsumerRequest.stream_all:type_name -> aruna.api.notification.services.v2.StreamAll
	14, // 4: aruna.api.notification.services.v2.CreateStreamConsumerRequest.stream_from_date:type_name -> aruna.api.notification.services.v2.StreamFromDate
	13, // 5: aruna.api.notification.services.v2.CreateStreamConsumerRequest.stream_from_sequence:type_name -> aruna.api.notification.services.v2.StreamFromSequence
	16, // 6: aruna.api.notification.services.v2.GetEventMessageBatchResponse.messages:type_name -> aruna.api.notification.services.v2.EventMessage
	16, // 7: aruna.api.notification.services.v2.GetEventMessageStreamResponse.message:type_name -> aruna.api.notification.services.v2.EventMessage
	19, // 8: aruna.api.notification.services.v2.AcknowledgeMessageBatchRequest.replies:type_name -> aruna.api.notification.services.v2.Reply
	25, // 9: aruna.api.notification.services.v2.StreamFromDate.timestamp:type_name -> google.protobuf.Timestamp
	17, // 10: aruna.api.notification.services.v2.EventMessage.resource_event:type_name -> aruna.api.notification.services.v2.ResourceEvent
	18, // 11: aruna.api.notification.services.v2.EventMessage.user_event:type_name -> aruna.api.notification.services.v2.UserEvent
	23, // 12: aruna.api.notification.services.v2.EventMessage.announcement_event:type_name -> aruna.api.notification.services.v2.AnouncementEvent
	1,  // 13: aruna.api.notification.services.v2.ResourceEvent.resource:type_name -> aruna.api.notification.services.v2.Resource
	0,  // 14: aruna.api.notification.services.v2.ResourceEvent.event_variant:type_name -> aruna.api.notification.services.v2.EventVariant
	19, // 15: aruna.api.notification.services.v2.ResourceEvent.reply:type_name -> aruna.api.notification.services.v2.Reply
	0,  // 16: aruna.api.notification.services.v2.UserEvent.event_variant:type_name -> aruna.api.notification.services.v2.EventVariant
	19, // 17: aruna.api.notification.services.v2.UserEvent.reply:type_name -> aruna.api.notification.services.v2.Reply
	25, // 18: aruna.api.notification.services.v2.ScheduledDowntime.from:type_name -> google.protobuf.Timestamp
	25, // 19: aruna.api.notification.services.v2.ScheduledDowntime.to:type_name -> google.protobuf.Timestamp
	20, // 20: aruna.api.notification.services.v2.AnouncementEvent.downtime:type_name -> aruna.api.notification.services.v2.ScheduledDowntime
	21, // 21: aruna.api.notification.services.v2.AnouncementEvent.version:type_name -> aruna.api.notification.services.v2.NewVersion
	19, // 22: aruna.api.notification.services.v2.AnouncementEvent.reply:type_name -> aruna.api.notification.services.v2.Reply
	3,  // 23: aruna.api.notification.services.v2.EventNotificationService.CreateStreamConsumer:input_type -> aruna.api.notification.services.v2.CreateStreamConsumerRequest
	5,  // 24: aruna.api.notification.services.v2.EventNotificationService.GetEventMessageBatch:input_type -> aruna.api.notification.services.v2.GetEventMessageBatchRequest
	7,  // 25: aruna.api.notification.services.v2.EventNotificationService.GetEventMessageStream:input_type -> aruna.api.notification.services.v2.GetEventMessageStreamRequest
	9,  // 26: aruna.api.notification.services.v2.EventNotificationService.AcknowledgeMessageBatch:input_type -> aruna.api.notification.services.v2.AcknowledgeMessageBatchRequest
	11, // 27: aruna.api.notification.services.v2.EventNotificationService.DeleteStreamConsumer:input_type -> aruna.api.notification.services.v2.DeleteStreamConsumerRequest
	4,  // 28: aruna.api.notification.services.v2.EventNotificationService.CreateStreamConsumer:output_type -> aruna.api.notification.services.v2.CreateStreamConsumerResponse
	6,  // 29: aruna.api.notification.services.v2.EventNotificationService.GetEventMessageBatch:output_type -> aruna.api.notification.services.v2.GetEventMessageBatchResponse
	8,  // 30: aruna.api.notification.services.v2.EventNotificationService.GetEventMessageStream:output_type -> aruna.api.notification.services.v2.GetEventMessageStreamResponse
	10, // 31: aruna.api.notification.services.v2.EventNotificationService.AcknowledgeMessageBatch:output_type -> aruna.api.notification.services.v2.AcknowledgeMessageBatchResponse
	12, // 32: aruna.api.notification.services.v2.EventNotificationService.DeleteStreamConsumer:output_type -> aruna.api.notification.services.v2.DeleteStreamConsumerResponse
	28, // [28:33] is the sub-list for method output_type
	23, // [23:28] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_aruna_api_notification_services_v2_notification_service_proto_init() }
func file_aruna_api_notification_services_v2_notification_service_proto_init() {
	if File_aruna_api_notification_services_v2_notification_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventMessageBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventMessageBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventMessageStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventMessageStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeMessageBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcknowledgeMessageBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStreamConsumerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStreamConsumerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFromSequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamFromDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledDowntime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewPubkey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnouncementEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateStreamConsumerRequest_Resource)(nil),
		(*CreateStreamConsumerRequest_User)(nil),
		(*CreateStreamConsumerRequest_Anouncements)(nil),
		(*CreateStreamConsumerRequest_All)(nil),
		(*CreateStreamConsumerRequest_StreamAll)(nil),
		(*CreateStreamConsumerRequest_StreamFromDate)(nil),
		(*CreateStreamConsumerRequest_StreamFromSequence)(nil),
	}
	file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*EventMessage_ResourceEvent)(nil),
		(*EventMessage_UserEvent)(nil),
		(*EventMessage_AnnouncementEvent)(nil),
	}
	file_aruna_api_notification_services_v2_notification_service_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*AnouncementEvent_NewDataProxyId)(nil),
		(*AnouncementEvent_RemoveDataProxyId)(nil),
		(*AnouncementEvent_UpdateDataProxyId)(nil),
		(*AnouncementEvent_NewPubkey)(nil),
		(*AnouncementEvent_RemovePubkey)(nil),
		(*AnouncementEvent_Downtime)(nil),
		(*AnouncementEvent_Version)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_notification_services_v2_notification_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aruna_api_notification_services_v2_notification_service_proto_goTypes,
		DependencyIndexes: file_aruna_api_notification_services_v2_notification_service_proto_depIdxs,
		EnumInfos:         file_aruna_api_notification_services_v2_notification_service_proto_enumTypes,
		MessageInfos:      file_aruna_api_notification_services_v2_notification_service_proto_msgTypes,
	}.Build()
	File_aruna_api_notification_services_v2_notification_service_proto = out.File
	file_aruna_api_notification_services_v2_notification_service_proto_rawDesc = nil
	file_aruna_api_notification_services_v2_notification_service_proto_goTypes = nil
	file_aruna_api_notification_services_v2_notification_service_proto_depIdxs = nil
}
