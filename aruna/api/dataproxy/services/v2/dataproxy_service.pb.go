// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aruna/api/dataproxy/services/v2/dataproxy_service.proto

package v2

import (
	v2 "github.com/ArunaStorage/go-api/v2/aruna/api/storage/models/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicationStatus int32

const (
	ReplicationStatus_REPLICATION_STATUS_UNSPECIFIED ReplicationStatus = 0
	ReplicationStatus_REPLICATION_STATUS_PENDING     ReplicationStatus = 1
	ReplicationStatus_REPLICATION_STATUS_RUNNING     ReplicationStatus = 2
	ReplicationStatus_REPLICATION_STATUS_FINISHED    ReplicationStatus = 3
	ReplicationStatus_REPLICATION_STATUS_ERROR       ReplicationStatus = 4
)

// Enum value maps for ReplicationStatus.
var (
	ReplicationStatus_name = map[int32]string{
		0: "REPLICATION_STATUS_UNSPECIFIED",
		1: "REPLICATION_STATUS_PENDING",
		2: "REPLICATION_STATUS_RUNNING",
		3: "REPLICATION_STATUS_FINISHED",
		4: "REPLICATION_STATUS_ERROR",
	}
	ReplicationStatus_value = map[string]int32{
		"REPLICATION_STATUS_UNSPECIFIED": 0,
		"REPLICATION_STATUS_PENDING":     1,
		"REPLICATION_STATUS_RUNNING":     2,
		"REPLICATION_STATUS_FINISHED":    3,
		"REPLICATION_STATUS_ERROR":       4,
	}
)

func (x ReplicationStatus) Enum() *ReplicationStatus {
	p := new(ReplicationStatus)
	*p = x
	return p
}

func (x ReplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_enumTypes[0].Descriptor()
}

func (ReplicationStatus) Type() protoreflect.EnumType {
	return &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_enumTypes[0]
}

func (x ReplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicationStatus.Descriptor instead.
func (ReplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{0}
}

// Messages (requests) from PROXY B
type InitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataproxyId string   `protobuf:"bytes,1,opt,name=dataproxy_id,json=dataproxyId,proto3" json:"dataproxy_id,omitempty"`
	ObjectIds   []string `protobuf:"bytes,2,rep,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
}

func (x *InitMessage) Reset() {
	*x = InitMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMessage) ProtoMessage() {}

func (x *InitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMessage.ProtoReflect.Descriptor instead.
func (*InitMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{0}
}

func (x *InitMessage) GetDataproxyId() string {
	if x != nil {
		return x.DataproxyId
	}
	return ""
}

func (x *InitMessage) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type InfoAckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *InfoAckMessage) Reset() {
	*x = InfoAckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoAckMessage) ProtoMessage() {}

func (x *InfoAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoAckMessage.ProtoReflect.Descriptor instead.
func (*InfoAckMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{1}
}

func (x *InfoAckMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type ChunkAckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ChunkIdx int64  `protobuf:"varint,2,opt,name=chunk_idx,json=chunkIdx,proto3" json:"chunk_idx,omitempty"`
}

func (x *ChunkAckMessage) Reset() {
	*x = ChunkAckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkAckMessage) ProtoMessage() {}

func (x *ChunkAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkAckMessage.ProtoReflect.Descriptor instead.
func (*ChunkAckMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkAckMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ChunkAckMessage) GetChunkIdx() int64 {
	if x != nil {
		return x.ChunkIdx
	}
	return 0
}

type RetryChunkMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ChunkIdx int64  `protobuf:"varint,2,opt,name=chunk_idx,json=chunkIdx,proto3" json:"chunk_idx,omitempty"`
}

func (x *RetryChunkMessage) Reset() {
	*x = RetryChunkMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryChunkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryChunkMessage) ProtoMessage() {}

func (x *RetryChunkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryChunkMessage.ProtoReflect.Descriptor instead.
func (*RetryChunkMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{3}
}

func (x *RetryChunkMessage) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RetryChunkMessage) GetChunkIdx() int64 {
	if x != nil {
		return x.ChunkIdx
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{4}
}

type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Error:
	//
	//	*ErrorMessage_RetryChunk
	//	*ErrorMessage_Abort
	//	*ErrorMessage_RetryObjectId
	Error isErrorMessage_Error `protobuf_oneof:"error"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{5}
}

func (m *ErrorMessage) GetError() isErrorMessage_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (x *ErrorMessage) GetRetryChunk() *RetryChunkMessage {
	if x, ok := x.GetError().(*ErrorMessage_RetryChunk); ok {
		return x.RetryChunk
	}
	return nil
}

func (x *ErrorMessage) GetAbort() *Empty {
	if x, ok := x.GetError().(*ErrorMessage_Abort); ok {
		return x.Abort
	}
	return nil
}

func (x *ErrorMessage) GetRetryObjectId() string {
	if x, ok := x.GetError().(*ErrorMessage_RetryObjectId); ok {
		return x.RetryObjectId
	}
	return ""
}

type isErrorMessage_Error interface {
	isErrorMessage_Error()
}

type ErrorMessage_RetryChunk struct {
	RetryChunk *RetryChunkMessage `protobuf:"bytes,1,opt,name=retry_chunk,json=retryChunk,proto3,oneof"`
}

type ErrorMessage_Abort struct {
	Abort *Empty `protobuf:"bytes,2,opt,name=abort,proto3,oneof"`
}

type ErrorMessage_RetryObjectId struct {
	RetryObjectId string `protobuf:"bytes,3,opt,name=retry_object_id,json=retryObjectId,proto3,oneof"`
}

func (*ErrorMessage_RetryChunk) isErrorMessage_Error() {}

func (*ErrorMessage_Abort) isErrorMessage_Error() {}

func (*ErrorMessage_RetryObjectId) isErrorMessage_Error() {}

type PullReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*PullReplicationRequest_InitMessage
	//	*PullReplicationRequest_InfoAckMessage
	//	*PullReplicationRequest_ChunkAckMessage
	//	*PullReplicationRequest_ErrorMessage
	//	*PullReplicationRequest_FinishMessage
	Message isPullReplicationRequest_Message `protobuf_oneof:"message"`
}

func (x *PullReplicationRequest) Reset() {
	*x = PullReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullReplicationRequest) ProtoMessage() {}

func (x *PullReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullReplicationRequest.ProtoReflect.Descriptor instead.
func (*PullReplicationRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{6}
}

func (m *PullReplicationRequest) GetMessage() isPullReplicationRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *PullReplicationRequest) GetInitMessage() *InitMessage {
	if x, ok := x.GetMessage().(*PullReplicationRequest_InitMessage); ok {
		return x.InitMessage
	}
	return nil
}

func (x *PullReplicationRequest) GetInfoAckMessage() *InfoAckMessage {
	if x, ok := x.GetMessage().(*PullReplicationRequest_InfoAckMessage); ok {
		return x.InfoAckMessage
	}
	return nil
}

func (x *PullReplicationRequest) GetChunkAckMessage() *ChunkAckMessage {
	if x, ok := x.GetMessage().(*PullReplicationRequest_ChunkAckMessage); ok {
		return x.ChunkAckMessage
	}
	return nil
}

func (x *PullReplicationRequest) GetErrorMessage() *ErrorMessage {
	if x, ok := x.GetMessage().(*PullReplicationRequest_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return nil
}

func (x *PullReplicationRequest) GetFinishMessage() *Empty {
	if x, ok := x.GetMessage().(*PullReplicationRequest_FinishMessage); ok {
		return x.FinishMessage
	}
	return nil
}

type isPullReplicationRequest_Message interface {
	isPullReplicationRequest_Message()
}

type PullReplicationRequest_InitMessage struct {
	InitMessage *InitMessage `protobuf:"bytes,1,opt,name=init_message,json=initMessage,proto3,oneof"`
}

type PullReplicationRequest_InfoAckMessage struct {
	InfoAckMessage *InfoAckMessage `protobuf:"bytes,2,opt,name=info_ack_message,json=infoAckMessage,proto3,oneof"`
}

type PullReplicationRequest_ChunkAckMessage struct {
	ChunkAckMessage *ChunkAckMessage `protobuf:"bytes,3,opt,name=chunk_ack_message,json=chunkAckMessage,proto3,oneof"`
}

type PullReplicationRequest_ErrorMessage struct {
	ErrorMessage *ErrorMessage `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

type PullReplicationRequest_FinishMessage struct {
	FinishMessage *Empty `protobuf:"bytes,5,opt,name=finish_message,json=finishMessage,proto3,oneof"`
}

func (*PullReplicationRequest_InitMessage) isPullReplicationRequest_Message() {}

func (*PullReplicationRequest_InfoAckMessage) isPullReplicationRequest_Message() {}

func (*PullReplicationRequest_ChunkAckMessage) isPullReplicationRequest_Message() {}

func (*PullReplicationRequest_ErrorMessage) isPullReplicationRequest_Message() {}

func (*PullReplicationRequest_FinishMessage) isPullReplicationRequest_Message() {}

type Handshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{7}
}

// Gets send if PROXY A has only a tmp location
type Skip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *Skip) Reset() {
	*x = Skip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skip) ProtoMessage() {}

func (x *Skip) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skip.ProtoReflect.Descriptor instead.
func (*Skip) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{8}
}

func (x *Skip) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type ObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId       string  `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Chunks         int64   `protobuf:"varint,2,opt,name=chunks,proto3" json:"chunks,omitempty"` // == (Compressed_size / (65536 + 28)) + 1
	RawSize        int64   `protobuf:"varint,3,opt,name=raw_size,json=rawSize,proto3" json:"raw_size,omitempty"`
	CompressedSize int64   `protobuf:"varint,4,opt,name=compressed_size,json=compressedSize,proto3" json:"compressed_size,omitempty"`
	Extra          *string `protobuf:"bytes,5,opt,name=extra,proto3,oneof" json:"extra,omitempty"` // JSON encoded proxy specific extra fields
}

func (x *ObjectInfo) Reset() {
	*x = ObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfo) ProtoMessage() {}

func (x *ObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfo.ProtoReflect.Descriptor instead.
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{9}
}

func (x *ObjectInfo) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ObjectInfo) GetChunks() int64 {
	if x != nil {
		return x.Chunks
	}
	return 0
}

func (x *ObjectInfo) GetRawSize() int64 {
	if x != nil {
		return x.RawSize
	}
	return 0
}

func (x *ObjectInfo) GetCompressedSize() int64 {
	if x != nil {
		return x.CompressedSize
	}
	return 0
}

func (x *ObjectInfo) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	ChunkIdx int64  `protobuf:"varint,2,opt,name=chunk_idx,json=chunkIdx,proto3" json:"chunk_idx,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Checksum string `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{10}
}

func (x *Chunk) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *Chunk) GetChunkIdx() int64 {
	if x != nil {
		return x.ChunkIdx
	}
	return 0
}

func (x *Chunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Chunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type PullReplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*PullReplicationResponse_Handshake
	//	*PullReplicationResponse_ObjectInfo
	//	*PullReplicationResponse_Chunk
	//	*PullReplicationResponse_FinishMessage
	//	*PullReplicationResponse_Skip
	Message isPullReplicationResponse_Message `protobuf_oneof:"message"`
}

func (x *PullReplicationResponse) Reset() {
	*x = PullReplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullReplicationResponse) ProtoMessage() {}

func (x *PullReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullReplicationResponse.ProtoReflect.Descriptor instead.
func (*PullReplicationResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{11}
}

func (m *PullReplicationResponse) GetMessage() isPullReplicationResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *PullReplicationResponse) GetHandshake() *Handshake {
	if x, ok := x.GetMessage().(*PullReplicationResponse_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *PullReplicationResponse) GetObjectInfo() *ObjectInfo {
	if x, ok := x.GetMessage().(*PullReplicationResponse_ObjectInfo); ok {
		return x.ObjectInfo
	}
	return nil
}

func (x *PullReplicationResponse) GetChunk() *Chunk {
	if x, ok := x.GetMessage().(*PullReplicationResponse_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *PullReplicationResponse) GetFinishMessage() *Empty {
	if x, ok := x.GetMessage().(*PullReplicationResponse_FinishMessage); ok {
		return x.FinishMessage
	}
	return nil
}

func (x *PullReplicationResponse) GetSkip() *Skip {
	if x, ok := x.GetMessage().(*PullReplicationResponse_Skip); ok {
		return x.Skip
	}
	return nil
}

type isPullReplicationResponse_Message interface {
	isPullReplicationResponse_Message()
}

type PullReplicationResponse_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,5,opt,name=handshake,proto3,oneof"`
}

type PullReplicationResponse_ObjectInfo struct {
	ObjectInfo *ObjectInfo `protobuf:"bytes,1,opt,name=object_info,json=objectInfo,proto3,oneof"`
}

type PullReplicationResponse_Chunk struct {
	Chunk *Chunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"` // If no ack is received, the chunk will be resent
}

type PullReplicationResponse_FinishMessage struct {
	FinishMessage *Empty `protobuf:"bytes,3,opt,name=finish_message,json=finishMessage,proto3,oneof"`
}

type PullReplicationResponse_Skip struct {
	Skip *Skip `protobuf:"bytes,4,opt,name=skip,proto3,oneof"`
}

func (*PullReplicationResponse_Handshake) isPullReplicationResponse_Message() {}

func (*PullReplicationResponse_ObjectInfo) isPullReplicationResponse_Message() {}

func (*PullReplicationResponse_Chunk) isPullReplicationResponse_Message() {}

func (*PullReplicationResponse_FinishMessage) isPullReplicationResponse_Message() {}

func (*PullReplicationResponse_Skip) isPullReplicationResponse_Message() {}

type DataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId      string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	DownloadUrl   string `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	EncryptionKey string `protobuf:"bytes,3,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
	IsCompressed  bool   `protobuf:"varint,4,opt,name=is_compressed,json=isCompressed,proto3" json:"is_compressed,omitempty"`
}

func (x *DataInfo) Reset() {
	*x = DataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInfo) ProtoMessage() {}

func (x *DataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInfo.ProtoReflect.Descriptor instead.
func (*DataInfo) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{12}
}

func (x *DataInfo) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *DataInfo) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *DataInfo) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

func (x *DataInfo) GetIsCompressed() bool {
	if x != nil {
		return x.IsCompressed
	}
	return false
}

type DataInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataInfo []*DataInfo `protobuf:"bytes,1,rep,name=data_info,json=dataInfo,proto3" json:"data_info,omitempty"`
}

func (x *DataInfos) Reset() {
	*x = DataInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataInfos) ProtoMessage() {}

func (x *DataInfos) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataInfos.ProtoReflect.Descriptor instead.
func (*DataInfos) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{13}
}

func (x *DataInfos) GetDataInfo() []*DataInfo {
	if x != nil {
		return x.DataInfo
	}
	return nil
}

type PushReplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataInfos *DataInfos `protobuf:"bytes,1,opt,name=data_infos,json=dataInfos,proto3" json:"data_infos,omitempty"`
}

func (x *PushReplicationRequest) Reset() {
	*x = PushReplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReplicationRequest) ProtoMessage() {}

func (x *PushReplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReplicationRequest.ProtoReflect.Descriptor instead.
func (*PushReplicationRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{14}
}

func (x *PushReplicationRequest) GetDataInfos() *DataInfos {
	if x != nil {
		return x.DataInfos
	}
	return nil
}

type PushReplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ack bool `protobuf:"varint,1,opt,name=ack,proto3" json:"ack,omitempty"`
}

func (x *PushReplicationResponse) Reset() {
	*x = PushReplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReplicationResponse) ProtoMessage() {}

func (x *PushReplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReplicationResponse.ProtoReflect.Descriptor instead.
func (*PushReplicationResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{15}
}

func (x *PushReplicationResponse) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type GetCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCredentialsRequest) Reset() {
	*x = GetCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialsRequest) ProtoMessage() {}

func (x *GetCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialsRequest.ProtoReflect.Descriptor instead.
func (*GetCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{16}
}

type GetCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *GetCredentialsResponse) Reset() {
	*x = GetCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCredentialsResponse) ProtoMessage() {}

func (x *GetCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCredentialsResponse.ProtoReflect.Descriptor instead.
func (*GetCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetCredentialsResponse) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *GetCredentialsResponse) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type CreateOrUpdateCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateOrUpdateCredentialsRequest) Reset() {
	*x = CreateOrUpdateCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCredentialsRequest) ProtoMessage() {}

func (x *CreateOrUpdateCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCredentialsRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{18}
}

type CreateOrUpdateCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKey string `protobuf:"bytes,1,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey string `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *CreateOrUpdateCredentialsResponse) Reset() {
	*x = CreateOrUpdateCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrUpdateCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateCredentialsResponse) ProtoMessage() {}

func (x *CreateOrUpdateCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateCredentialsResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateOrUpdateCredentialsResponse) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateOrUpdateCredentialsResponse) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type RevokeCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeCredentialsRequest) Reset() {
	*x = RevokeCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCredentialsRequest) ProtoMessage() {}

func (x *RevokeCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCredentialsRequest.ProtoReflect.Descriptor instead.
func (*RevokeCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{20}
}

type RevokeCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeCredentialsResponse) Reset() {
	*x = RevokeCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeCredentialsResponse) ProtoMessage() {}

func (x *RevokeCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeCredentialsResponse.ProtoReflect.Descriptor instead.
func (*RevokeCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{21}
}

type S3Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *S3Path) Reset() {
	*x = S3Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Path) ProtoMessage() {}

func (x *S3Path) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Path.ProtoReflect.Descriptor instead.
func (*S3Path) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{22}
}

func (x *S3Path) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Path) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type PushReplicaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//
	//	*PushReplicaRequest_ResourceId
	//	*PushReplicaRequest_S3Path
	Resource         isPushReplicaRequest_Resource `protobuf_oneof:"resource"`
	TargetEndpointId string                        `protobuf:"bytes,3,opt,name=target_endpoint_id,json=targetEndpointId,proto3" json:"target_endpoint_id,omitempty"`
}

func (x *PushReplicaRequest) Reset() {
	*x = PushReplicaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReplicaRequest) ProtoMessage() {}

func (x *PushReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReplicaRequest.ProtoReflect.Descriptor instead.
func (*PushReplicaRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{23}
}

func (m *PushReplicaRequest) GetResource() isPushReplicaRequest_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *PushReplicaRequest) GetResourceId() string {
	if x, ok := x.GetResource().(*PushReplicaRequest_ResourceId); ok {
		return x.ResourceId
	}
	return ""
}

func (x *PushReplicaRequest) GetS3Path() *S3Path {
	if x, ok := x.GetResource().(*PushReplicaRequest_S3Path); ok {
		return x.S3Path
	}
	return nil
}

func (x *PushReplicaRequest) GetTargetEndpointId() string {
	if x != nil {
		return x.TargetEndpointId
	}
	return ""
}

type isPushReplicaRequest_Resource interface {
	isPushReplicaRequest_Resource()
}

type PushReplicaRequest_ResourceId struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type PushReplicaRequest_S3Path struct {
	S3Path *S3Path `protobuf:"bytes,2,opt,name=s3_path,json=s3Path,proto3,oneof"`
}

func (*PushReplicaRequest_ResourceId) isPushReplicaRequest_Resource() {}

func (*PushReplicaRequest_S3Path) isPushReplicaRequest_Resource() {}

type PushReplicaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicationId string `protobuf:"bytes,1,opt,name=replication_id,json=replicationId,proto3" json:"replication_id,omitempty"`
}

func (x *PushReplicaResponse) Reset() {
	*x = PushReplicaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushReplicaResponse) ProtoMessage() {}

func (x *PushReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushReplicaResponse.ProtoReflect.Descriptor instead.
func (*PushReplicaResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{24}
}

func (x *PushReplicaResponse) GetReplicationId() string {
	if x != nil {
		return x.ReplicationId
	}
	return ""
}

type PullReplicaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resource:
	//
	//	*PullReplicaRequest_ResourceId
	//	*PullReplicaRequest_S3Path
	Resource isPullReplicaRequest_Resource `protobuf_oneof:"resource"`
}

func (x *PullReplicaRequest) Reset() {
	*x = PullReplicaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullReplicaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullReplicaRequest) ProtoMessage() {}

func (x *PullReplicaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullReplicaRequest.ProtoReflect.Descriptor instead.
func (*PullReplicaRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{25}
}

func (m *PullReplicaRequest) GetResource() isPullReplicaRequest_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (x *PullReplicaRequest) GetResourceId() string {
	if x, ok := x.GetResource().(*PullReplicaRequest_ResourceId); ok {
		return x.ResourceId
	}
	return ""
}

func (x *PullReplicaRequest) GetS3Path() *S3Path {
	if x, ok := x.GetResource().(*PullReplicaRequest_S3Path); ok {
		return x.S3Path
	}
	return nil
}

type isPullReplicaRequest_Resource interface {
	isPullReplicaRequest_Resource()
}

type PullReplicaRequest_ResourceId struct {
	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type PullReplicaRequest_S3Path struct {
	S3Path *S3Path `protobuf:"bytes,2,opt,name=s3_path,json=s3Path,proto3,oneof"`
}

func (*PullReplicaRequest_ResourceId) isPullReplicaRequest_Resource() {}

func (*PullReplicaRequest_S3Path) isPullReplicaRequest_Resource() {}

type PullReplicaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicationId string `protobuf:"bytes,1,opt,name=replication_id,json=replicationId,proto3" json:"replication_id,omitempty"` // why ?
}

func (x *PullReplicaResponse) Reset() {
	*x = PullReplicaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullReplicaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullReplicaResponse) ProtoMessage() {}

func (x *PullReplicaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullReplicaResponse.ProtoReflect.Descriptor instead.
func (*PullReplicaResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{26}
}

func (x *PullReplicaResponse) GetReplicationId() string {
	if x != nil {
		return x.ReplicationId
	}
	return ""
}

type ReplicationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicationId string `protobuf:"bytes,1,opt,name=replication_id,json=replicationId,proto3" json:"replication_id,omitempty"` // why ?
}

func (x *ReplicationStatusRequest) Reset() {
	*x = ReplicationStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatusRequest) ProtoMessage() {}

func (x *ReplicationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatusRequest.ProtoReflect.Descriptor instead.
func (*ReplicationStatusRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{27}
}

func (x *ReplicationStatusRequest) GetReplicationId() string {
	if x != nil {
		return x.ReplicationId
	}
	return ""
}

type ReplicationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  ReplicationStatus `protobuf:"varint,1,opt,name=status,proto3,enum=aruna.api.dataproxy.services.v2.ReplicationStatus" json:"status,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReplicationStatusResponse) Reset() {
	*x = ReplicationStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatusResponse) ProtoMessage() {}

func (x *ReplicationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatusResponse.ProtoReflect.Descriptor instead.
func (*ReplicationStatusResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{28}
}

func (x *ReplicationStatusResponse) GetStatus() ReplicationStatus {
	if x != nil {
		return x.Status
	}
	return ReplicationStatus_REPLICATION_STATUS_UNSPECIFIED
}

func (x *ReplicationStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ObjectLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket        string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	UploadId      string `protobuf:"bytes,3,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	ContentLength string `protobuf:"bytes,4,opt,name=content_length,json=contentLength,proto3" json:"content_length,omitempty"`
}

func (x *ObjectLocation) Reset() {
	*x = ObjectLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectLocation) ProtoMessage() {}

func (x *ObjectLocation) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectLocation.ProtoReflect.Descriptor instead.
func (*ObjectLocation) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{29}
}

func (x *ObjectLocation) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ObjectLocation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ObjectLocation) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *ObjectLocation) GetContentLength() string {
	if x != nil {
		return x.ContentLength
	}
	return ""
}

type PutObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Data     []byte          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PutObjectRequest) Reset() {
	*x = PutObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectRequest) ProtoMessage() {}

func (x *PutObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectRequest.ProtoReflect.Descriptor instead.
func (*PutObjectRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{30}
}

func (x *PutObjectRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *PutObjectRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PutObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutObjectResponse) Reset() {
	*x = PutObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutObjectResponse) ProtoMessage() {}

func (x *PutObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutObjectResponse.ProtoReflect.Descriptor instead.
func (*PutObjectResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{31}
}

type GetObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetObjectRequest) Reset() {
	*x = GetObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectRequest) ProtoMessage() {}

func (x *GetObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectRequest.ProtoReflect.Descriptor instead.
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{32}
}

func (x *GetObjectRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type GetObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetObjectResponse) Reset() {
	*x = GetObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectResponse) ProtoMessage() {}

func (x *GetObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectResponse.ProtoReflect.Descriptor instead.
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetObjectResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type HeadObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *HeadObjectRequest) Reset() {
	*x = HeadObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadObjectRequest) ProtoMessage() {}

func (x *HeadObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadObjectRequest.ProtoReflect.Descriptor instead.
func (*HeadObjectRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{34}
}

func (x *HeadObjectRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type HeadObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentLength string `protobuf:"bytes,1,opt,name=content_length,json=contentLength,proto3" json:"content_length,omitempty"`
	Exists        bool   `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *HeadObjectResponse) Reset() {
	*x = HeadObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadObjectResponse) ProtoMessage() {}

func (x *HeadObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadObjectResponse.ProtoReflect.Descriptor instead.
func (*HeadObjectResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{35}
}

func (x *HeadObjectResponse) GetContentLength() string {
	if x != nil {
		return x.ContentLength
	}
	return ""
}

func (x *HeadObjectResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type InitMultiPartUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *InitMultiPartUploadRequest) Reset() {
	*x = InitMultiPartUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMultiPartUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMultiPartUploadRequest) ProtoMessage() {}

func (x *InitMultiPartUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMultiPartUploadRequest.ProtoReflect.Descriptor instead.
func (*InitMultiPartUploadRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{36}
}

func (x *InitMultiPartUploadRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type InitMultiPartUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadId string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *InitMultiPartUploadResponse) Reset() {
	*x = InitMultiPartUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMultiPartUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMultiPartUploadResponse) ProtoMessage() {}

func (x *InitMultiPartUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMultiPartUploadResponse.ProtoReflect.Descriptor instead.
func (*InitMultiPartUploadResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{37}
}

func (x *InitMultiPartUploadResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type UploadPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location   *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	PartNumber int32           `protobuf:"varint,3,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Data       []byte          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UploadPartRequest) Reset() {
	*x = UploadPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartRequest) ProtoMessage() {}

func (x *UploadPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartRequest.ProtoReflect.Descriptor instead.
func (*UploadPartRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{38}
}

func (x *UploadPartRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UploadPartRequest) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *UploadPartResponse) Reset() {
	*x = UploadPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartResponse) ProtoMessage() {}

func (x *UploadPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartResponse.ProtoReflect.Descriptor instead.
func (*UploadPartResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{39}
}

func (x *UploadPartResponse) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CompletedPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber int32  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Etag       string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *CompletedPart) Reset() {
	*x = CompletedPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedPart) ProtoMessage() {}

func (x *CompletedPart) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedPart.ProtoReflect.Descriptor instead.
func (*CompletedPart) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{40}
}

func (x *CompletedPart) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *CompletedPart) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CompleteMultiPartUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location       *ObjectLocation  `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	CompletedParts []*CompletedPart `protobuf:"bytes,2,rep,name=completed_parts,json=completedParts,proto3" json:"completed_parts,omitempty"`
}

func (x *CompleteMultiPartUploadRequest) Reset() {
	*x = CompleteMultiPartUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultiPartUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultiPartUploadRequest) ProtoMessage() {}

func (x *CompleteMultiPartUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultiPartUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteMultiPartUploadRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{41}
}

func (x *CompleteMultiPartUploadRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CompleteMultiPartUploadRequest) GetCompletedParts() []*CompletedPart {
	if x != nil {
		return x.CompletedParts
	}
	return nil
}

type CompleteMultiPartUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteMultiPartUploadResponse) Reset() {
	*x = CompleteMultiPartUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteMultiPartUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteMultiPartUploadResponse) ProtoMessage() {}

func (x *CompleteMultiPartUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteMultiPartUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteMultiPartUploadResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{42}
}

type CreateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *CreateBucketRequest) Reset() {
	*x = CreateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketRequest) ProtoMessage() {}

func (x *CreateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketRequest.ProtoReflect.Descriptor instead.
func (*CreateBucketRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{43}
}

func (x *CreateBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type CreateBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBucketResponse) Reset() {
	*x = CreateBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBucketResponse) ProtoMessage() {}

func (x *CreateBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBucketResponse.ProtoReflect.Descriptor instead.
func (*CreateBucketResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{44}
}

type DeleteBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *DeleteBucketRequest) Reset() {
	*x = DeleteBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketRequest) ProtoMessage() {}

func (x *DeleteBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketRequest.ProtoReflect.Descriptor instead.
func (*DeleteBucketRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteBucketRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type DeleteBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBucketResponse) Reset() {
	*x = DeleteBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBucketResponse) ProtoMessage() {}

func (x *DeleteBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBucketResponse.ProtoReflect.Descriptor instead.
func (*DeleteBucketResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{46}
}

type DeleteObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *DeleteObjectRequest) Reset() {
	*x = DeleteObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectRequest) ProtoMessage() {}

func (x *DeleteObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteObjectRequest) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type DeleteObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteObjectResponse) Reset() {
	*x = DeleteObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteObjectResponse) ProtoMessage() {}

func (x *DeleteObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteObjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteObjectResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{48}
}

type InitLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectName  string `protobuf:"bytes,1,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	Size        int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	IsTemporary bool   `protobuf:"varint,3,opt,name=is_temporary,json=isTemporary,proto3" json:"is_temporary,omitempty"`
}

func (x *InitLocationRequest) Reset() {
	*x = InitLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitLocationRequest) ProtoMessage() {}

func (x *InitLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitLocationRequest.ProtoReflect.Descriptor instead.
func (*InitLocationRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{49}
}

func (x *InitLocationRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *InitLocationRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *InitLocationRequest) GetIsTemporary() bool {
	if x != nil {
		return x.IsTemporary
	}
	return false
}

type InitLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *ObjectLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *InitLocationResponse) Reset() {
	*x = InitLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitLocationResponse) ProtoMessage() {}

func (x *InitLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitLocationResponse.ProtoReflect.Descriptor instead.
func (*InitLocationResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{50}
}

func (x *InitLocationResponse) GetLocation() *ObjectLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type IngestResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// object name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// title
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Authors
	Authors []*v2.Author `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	// object specific labels / hooks
	KeyValues []*v2.KeyValue `protobuf:"bytes,5,rep,name=key_values,json=keyValues,proto3" json:"key_values,omitempty"`
	// Internal / External relations (URLs / IDs from external sources)
	Relations []*v2.Relation `protobuf:"bytes,6,rep,name=relations,proto3" json:"relations,omitempty"`
	// DataClass
	DataClass v2.DataClass `protobuf:"varint,7,opt,name=data_class,json=dataClass,proto3,enum=aruna.api.storage.models.v2.DataClass" json:"data_class,omitempty"`
	// Ignored if Collection | Dataset
	Hashes             []*v2.Hash `protobuf:"bytes,8,rep,name=hashes,proto3" json:"hashes,omitempty"`
	MetadataLicenseTag string     `protobuf:"bytes,9,opt,name=metadata_license_tag,json=metadataLicenseTag,proto3" json:"metadata_license_tag,omitempty"`
	DataLicenseTag     string     `protobuf:"bytes,10,opt,name=data_license_tag,json=dataLicenseTag,proto3" json:"data_license_tag,omitempty"`
}

func (x *IngestResource) Reset() {
	*x = IngestResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResource) ProtoMessage() {}

func (x *IngestResource) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResource.ProtoReflect.Descriptor instead.
func (*IngestResource) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{51}
}

func (x *IngestResource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IngestResource) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IngestResource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IngestResource) GetAuthors() []*v2.Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *IngestResource) GetKeyValues() []*v2.KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *IngestResource) GetRelations() []*v2.Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *IngestResource) GetDataClass() v2.DataClass {
	if x != nil {
		return x.DataClass
	}
	return v2.DataClass(0)
}

func (x *IngestResource) GetHashes() []*v2.Hash {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *IngestResource) GetMetadataLicenseTag() string {
	if x != nil {
		return x.MetadataLicenseTag
	}
	return ""
}

func (x *IngestResource) GetDataLicenseTag() string {
	if x != nil {
		return x.DataLicenseTag
	}
	return ""
}

type IngestExistingObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Types that are assignable to Collection:
	//
	//	*IngestExistingObjectRequest_CollectionId
	//	*IngestExistingObjectRequest_CollectionResource
	Collection isIngestExistingObjectRequest_Collection `protobuf_oneof:"collection"`
	// Types that are assignable to Dataset:
	//
	//	*IngestExistingObjectRequest_DatasetId
	//	*IngestExistingObjectRequest_DatasetResource
	Dataset isIngestExistingObjectRequest_Dataset `protobuf_oneof:"dataset"`
	Object  *IngestResource                       `protobuf:"bytes,6,opt,name=object,proto3" json:"object,omitempty"`
	Path    string                                `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"` // "s3://bucket/key" or "file:///foo/bar/baz.txt" must be a valid file
}

func (x *IngestExistingObjectRequest) Reset() {
	*x = IngestExistingObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestExistingObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestExistingObjectRequest) ProtoMessage() {}

func (x *IngestExistingObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestExistingObjectRequest.ProtoReflect.Descriptor instead.
func (*IngestExistingObjectRequest) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{52}
}

func (x *IngestExistingObjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (m *IngestExistingObjectRequest) GetCollection() isIngestExistingObjectRequest_Collection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (x *IngestExistingObjectRequest) GetCollectionId() string {
	if x, ok := x.GetCollection().(*IngestExistingObjectRequest_CollectionId); ok {
		return x.CollectionId
	}
	return ""
}

func (x *IngestExistingObjectRequest) GetCollectionResource() *IngestResource {
	if x, ok := x.GetCollection().(*IngestExistingObjectRequest_CollectionResource); ok {
		return x.CollectionResource
	}
	return nil
}

func (m *IngestExistingObjectRequest) GetDataset() isIngestExistingObjectRequest_Dataset {
	if m != nil {
		return m.Dataset
	}
	return nil
}

func (x *IngestExistingObjectRequest) GetDatasetId() string {
	if x, ok := x.GetDataset().(*IngestExistingObjectRequest_DatasetId); ok {
		return x.DatasetId
	}
	return ""
}

func (x *IngestExistingObjectRequest) GetDatasetResource() *IngestResource {
	if x, ok := x.GetDataset().(*IngestExistingObjectRequest_DatasetResource); ok {
		return x.DatasetResource
	}
	return nil
}

func (x *IngestExistingObjectRequest) GetObject() *IngestResource {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *IngestExistingObjectRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type isIngestExistingObjectRequest_Collection interface {
	isIngestExistingObjectRequest_Collection()
}

type IngestExistingObjectRequest_CollectionId struct {
	CollectionId string `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3,oneof"`
}

type IngestExistingObjectRequest_CollectionResource struct {
	CollectionResource *IngestResource `protobuf:"bytes,3,opt,name=collection_resource,json=collectionResource,proto3,oneof"`
}

func (*IngestExistingObjectRequest_CollectionId) isIngestExistingObjectRequest_Collection() {}

func (*IngestExistingObjectRequest_CollectionResource) isIngestExistingObjectRequest_Collection() {}

type isIngestExistingObjectRequest_Dataset interface {
	isIngestExistingObjectRequest_Dataset()
}

type IngestExistingObjectRequest_DatasetId struct {
	DatasetId string `protobuf:"bytes,4,opt,name=dataset_id,json=datasetId,proto3,oneof"`
}

type IngestExistingObjectRequest_DatasetResource struct {
	DatasetResource *IngestResource `protobuf:"bytes,5,opt,name=dataset_resource,json=datasetResource,proto3,oneof"`
}

func (*IngestExistingObjectRequest_DatasetId) isIngestExistingObjectRequest_Dataset() {}

func (*IngestExistingObjectRequest_DatasetResource) isIngestExistingObjectRequest_Dataset() {}

type IngestExistingObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *IngestExistingObjectResponse) Reset() {
	*x = IngestExistingObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestExistingObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestExistingObjectResponse) ProtoMessage() {}

func (x *IngestExistingObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestExistingObjectResponse.ProtoReflect.Descriptor instead.
func (*IngestExistingObjectResponse) Descriptor() ([]byte, []int) {
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP(), []int{53}
}

func (x *IngestExistingObjectResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

var File_aruna_api_dataproxy_services_v2_dataproxy_service_proto protoreflect.FileDescriptor

var file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDesc = []byte{
	0x0a, 0x37, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76,
	0x32, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4f, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x2d, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x0f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x78, 0x22, 0x4d, 0x0a, 0x11,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x78, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x3e, 0x0a, 0x05,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xda, 0x03, 0x0a, 0x16, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0c, 0x69, 0x6e,
	0x69, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5b, 0x0a,
	0x10, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x66, 0x6f,
	0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x41, 0x63, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x4f, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0b, 0x0a, 0x09,
	0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x22, 0x23, 0x0a, 0x04, 0x53, 0x6b, 0x69,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xaa,
	0x01, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x71, 0x0a, 0x05, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x8e,
	0x03, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52,
	0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x4f, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x48, 0x00, 0x52, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x53, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x46, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x63, 0x0a,
	0x16, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x22, 0x2b, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x22, 0x22, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x06, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x07, 0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x06, 0x73, 0x33, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x13,
	0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x33, 0x50, 0x61, 0x74, 0x68, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x33, 0x50, 0x61, 0x74, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x3c, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x41, 0x0a, 0x18, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x0e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x73, 0x0a, 0x10, 0x50, 0x75, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x13,
	0x0a, 0x11, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x60, 0x0a,
	0x11, 0x48, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x1a, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3a, 0x0a, 0x1b, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x44, 0x0a,
	0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x22, 0xc6, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74, 0x73, 0x22, 0x21, 0x0a, 0x1f,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x62, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x13, 0x49, 0x6e, 0x69,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x22, 0x63, 0x0a, 0x14, 0x49, 0x6e, 0x69, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x04,
	0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x6b,
	0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x39, 0x0a,
	0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x54, 0x61, 0x67, 0x22, 0xbc, 0x03, 0x0a, 0x1b, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x5c, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x01, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x47, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x1c, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x2a, 0xb6, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x52,
	0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x32, 0xc2, 0x02, 0x0a, 0x1b, 0x44, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x0f, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a,
	0x0d, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x32, 0xbe,
	0x0a, 0x0a, 0x17, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x09, 0x50, 0x75,
	0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x31, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x76, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x31, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x77, 0x0a, 0x0a, 0x48, 0x65,
	0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3b, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x12, 0x32, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x12, 0x9e, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x3f, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50,
	0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x50, 0x61, 0x72, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7d, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7d, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x1a, 0x0d, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x32,
	0x93, 0x08, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x36, 0x2e, 0x61, 0x72,
	0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x41, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0xa3, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x39, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x32,
	0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x95, 0x01, 0x0a,
	0x0b, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x33, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a,
	0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2f,
	0x70, 0x75, 0x73, 0x68, 0x12, 0x95, 0x01, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x12, 0x33, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x32, 0x2f,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x75, 0x6c, 0x6c, 0x12, 0xb7, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x12, 0x23, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x2f, 0x7b,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0d, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x07, 0x12, 0x05,
	0x50, 0x52, 0x4f, 0x58, 0x59, 0x32, 0xc2, 0x01, 0x0a, 0x19, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x61,
	0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6e, 0x67, 0x65, 0x73, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x61, 0x72, 0x75,
	0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x1a, 0x0d, 0xfa, 0xd2, 0xe4,
	0x93, 0x02, 0x07, 0x12, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x42, 0x9d, 0x02, 0x0a, 0x23, 0x63,
	0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x76, 0x32, 0x42, 0x15, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x72, 0x75, 0x6e,
	0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0xa2, 0x02, 0x04, 0x41, 0x41,
	0x44, 0x53, 0xaa, 0x02, 0x1f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x1f, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x5c, 0x41, 0x70, 0x69,
	0x5c, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x2b, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x5c, 0x41,
	0x70, 0x69, 0x5c, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x23, 0x41, 0x72, 0x75, 0x6e, 0x61, 0x3a, 0x3a, 0x41, 0x70,
	0x69, 0x3a, 0x3a, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x3a, 0x3a, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescOnce sync.Once
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescData = file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDesc
)

func file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescGZIP() []byte {
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescOnce.Do(func() {
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescData)
	})
	return file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDescData
}

var file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_goTypes = []interface{}{
	(ReplicationStatus)(0),                    // 0: aruna.api.dataproxy.services.v2.ReplicationStatus
	(*InitMessage)(nil),                       // 1: aruna.api.dataproxy.services.v2.InitMessage
	(*InfoAckMessage)(nil),                    // 2: aruna.api.dataproxy.services.v2.InfoAckMessage
	(*ChunkAckMessage)(nil),                   // 3: aruna.api.dataproxy.services.v2.ChunkAckMessage
	(*RetryChunkMessage)(nil),                 // 4: aruna.api.dataproxy.services.v2.RetryChunkMessage
	(*Empty)(nil),                             // 5: aruna.api.dataproxy.services.v2.Empty
	(*ErrorMessage)(nil),                      // 6: aruna.api.dataproxy.services.v2.ErrorMessage
	(*PullReplicationRequest)(nil),            // 7: aruna.api.dataproxy.services.v2.PullReplicationRequest
	(*Handshake)(nil),                         // 8: aruna.api.dataproxy.services.v2.Handshake
	(*Skip)(nil),                              // 9: aruna.api.dataproxy.services.v2.Skip
	(*ObjectInfo)(nil),                        // 10: aruna.api.dataproxy.services.v2.ObjectInfo
	(*Chunk)(nil),                             // 11: aruna.api.dataproxy.services.v2.Chunk
	(*PullReplicationResponse)(nil),           // 12: aruna.api.dataproxy.services.v2.PullReplicationResponse
	(*DataInfo)(nil),                          // 13: aruna.api.dataproxy.services.v2.DataInfo
	(*DataInfos)(nil),                         // 14: aruna.api.dataproxy.services.v2.DataInfos
	(*PushReplicationRequest)(nil),            // 15: aruna.api.dataproxy.services.v2.PushReplicationRequest
	(*PushReplicationResponse)(nil),           // 16: aruna.api.dataproxy.services.v2.PushReplicationResponse
	(*GetCredentialsRequest)(nil),             // 17: aruna.api.dataproxy.services.v2.GetCredentialsRequest
	(*GetCredentialsResponse)(nil),            // 18: aruna.api.dataproxy.services.v2.GetCredentialsResponse
	(*CreateOrUpdateCredentialsRequest)(nil),  // 19: aruna.api.dataproxy.services.v2.CreateOrUpdateCredentialsRequest
	(*CreateOrUpdateCredentialsResponse)(nil), // 20: aruna.api.dataproxy.services.v2.CreateOrUpdateCredentialsResponse
	(*RevokeCredentialsRequest)(nil),          // 21: aruna.api.dataproxy.services.v2.RevokeCredentialsRequest
	(*RevokeCredentialsResponse)(nil),         // 22: aruna.api.dataproxy.services.v2.RevokeCredentialsResponse
	(*S3Path)(nil),                            // 23: aruna.api.dataproxy.services.v2.S3Path
	(*PushReplicaRequest)(nil),                // 24: aruna.api.dataproxy.services.v2.PushReplicaRequest
	(*PushReplicaResponse)(nil),               // 25: aruna.api.dataproxy.services.v2.PushReplicaResponse
	(*PullReplicaRequest)(nil),                // 26: aruna.api.dataproxy.services.v2.PullReplicaRequest
	(*PullReplicaResponse)(nil),               // 27: aruna.api.dataproxy.services.v2.PullReplicaResponse
	(*ReplicationStatusRequest)(nil),          // 28: aruna.api.dataproxy.services.v2.ReplicationStatusRequest
	(*ReplicationStatusResponse)(nil),         // 29: aruna.api.dataproxy.services.v2.ReplicationStatusResponse
	(*ObjectLocation)(nil),                    // 30: aruna.api.dataproxy.services.v2.ObjectLocation
	(*PutObjectRequest)(nil),                  // 31: aruna.api.dataproxy.services.v2.PutObjectRequest
	(*PutObjectResponse)(nil),                 // 32: aruna.api.dataproxy.services.v2.PutObjectResponse
	(*GetObjectRequest)(nil),                  // 33: aruna.api.dataproxy.services.v2.GetObjectRequest
	(*GetObjectResponse)(nil),                 // 34: aruna.api.dataproxy.services.v2.GetObjectResponse
	(*HeadObjectRequest)(nil),                 // 35: aruna.api.dataproxy.services.v2.HeadObjectRequest
	(*HeadObjectResponse)(nil),                // 36: aruna.api.dataproxy.services.v2.HeadObjectResponse
	(*InitMultiPartUploadRequest)(nil),        // 37: aruna.api.dataproxy.services.v2.InitMultiPartUploadRequest
	(*InitMultiPartUploadResponse)(nil),       // 38: aruna.api.dataproxy.services.v2.InitMultiPartUploadResponse
	(*UploadPartRequest)(nil),                 // 39: aruna.api.dataproxy.services.v2.UploadPartRequest
	(*UploadPartResponse)(nil),                // 40: aruna.api.dataproxy.services.v2.UploadPartResponse
	(*CompletedPart)(nil),                     // 41: aruna.api.dataproxy.services.v2.CompletedPart
	(*CompleteMultiPartUploadRequest)(nil),    // 42: aruna.api.dataproxy.services.v2.CompleteMultiPartUploadRequest
	(*CompleteMultiPartUploadResponse)(nil),   // 43: aruna.api.dataproxy.services.v2.CompleteMultiPartUploadResponse
	(*CreateBucketRequest)(nil),               // 44: aruna.api.dataproxy.services.v2.CreateBucketRequest
	(*CreateBucketResponse)(nil),              // 45: aruna.api.dataproxy.services.v2.CreateBucketResponse
	(*DeleteBucketRequest)(nil),               // 46: aruna.api.dataproxy.services.v2.DeleteBucketRequest
	(*DeleteBucketResponse)(nil),              // 47: aruna.api.dataproxy.services.v2.DeleteBucketResponse
	(*DeleteObjectRequest)(nil),               // 48: aruna.api.dataproxy.services.v2.DeleteObjectRequest
	(*DeleteObjectResponse)(nil),              // 49: aruna.api.dataproxy.services.v2.DeleteObjectResponse
	(*InitLocationRequest)(nil),               // 50: aruna.api.dataproxy.services.v2.InitLocationRequest
	(*InitLocationResponse)(nil),              // 51: aruna.api.dataproxy.services.v2.InitLocationResponse
	(*IngestResource)(nil),                    // 52: aruna.api.dataproxy.services.v2.IngestResource
	(*IngestExistingObjectRequest)(nil),       // 53: aruna.api.dataproxy.services.v2.IngestExistingObjectRequest
	(*IngestExistingObjectResponse)(nil),      // 54: aruna.api.dataproxy.services.v2.IngestExistingObjectResponse
	(*v2.Author)(nil),                         // 55: aruna.api.storage.models.v2.Author
	(*v2.KeyValue)(nil),                       // 56: aruna.api.storage.models.v2.KeyValue
	(*v2.Relation)(nil),                       // 57: aruna.api.storage.models.v2.Relation
	(v2.DataClass)(0),                         // 58: aruna.api.storage.models.v2.DataClass
	(*v2.Hash)(nil),                           // 59: aruna.api.storage.models.v2.Hash
}
var file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_depIdxs = []int32{
	4,  // 0: aruna.api.dataproxy.services.v2.ErrorMessage.retry_chunk:type_name -> aruna.api.dataproxy.services.v2.RetryChunkMessage
	5,  // 1: aruna.api.dataproxy.services.v2.ErrorMessage.abort:type_name -> aruna.api.dataproxy.services.v2.Empty
	1,  // 2: aruna.api.dataproxy.services.v2.PullReplicationRequest.init_message:type_name -> aruna.api.dataproxy.services.v2.InitMessage
	2,  // 3: aruna.api.dataproxy.services.v2.PullReplicationRequest.info_ack_message:type_name -> aruna.api.dataproxy.services.v2.InfoAckMessage
	3,  // 4: aruna.api.dataproxy.services.v2.PullReplicationRequest.chunk_ack_message:type_name -> aruna.api.dataproxy.services.v2.ChunkAckMessage
	6,  // 5: aruna.api.dataproxy.services.v2.PullReplicationRequest.error_message:type_name -> aruna.api.dataproxy.services.v2.ErrorMessage
	5,  // 6: aruna.api.dataproxy.services.v2.PullReplicationRequest.finish_message:type_name -> aruna.api.dataproxy.services.v2.Empty
	8,  // 7: aruna.api.dataproxy.services.v2.PullReplicationResponse.handshake:type_name -> aruna.api.dataproxy.services.v2.Handshake
	10, // 8: aruna.api.dataproxy.services.v2.PullReplicationResponse.object_info:type_name -> aruna.api.dataproxy.services.v2.ObjectInfo
	11, // 9: aruna.api.dataproxy.services.v2.PullReplicationResponse.chunk:type_name -> aruna.api.dataproxy.services.v2.Chunk
	5,  // 10: aruna.api.dataproxy.services.v2.PullReplicationResponse.finish_message:type_name -> aruna.api.dataproxy.services.v2.Empty
	9,  // 11: aruna.api.dataproxy.services.v2.PullReplicationResponse.skip:type_name -> aruna.api.dataproxy.services.v2.Skip
	13, // 12: aruna.api.dataproxy.services.v2.DataInfos.data_info:type_name -> aruna.api.dataproxy.services.v2.DataInfo
	14, // 13: aruna.api.dataproxy.services.v2.PushReplicationRequest.data_infos:type_name -> aruna.api.dataproxy.services.v2.DataInfos
	23, // 14: aruna.api.dataproxy.services.v2.PushReplicaRequest.s3_path:type_name -> aruna.api.dataproxy.services.v2.S3Path
	23, // 15: aruna.api.dataproxy.services.v2.PullReplicaRequest.s3_path:type_name -> aruna.api.dataproxy.services.v2.S3Path
	0,  // 16: aruna.api.dataproxy.services.v2.ReplicationStatusResponse.status:type_name -> aruna.api.dataproxy.services.v2.ReplicationStatus
	30, // 17: aruna.api.dataproxy.services.v2.PutObjectRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 18: aruna.api.dataproxy.services.v2.GetObjectRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 19: aruna.api.dataproxy.services.v2.HeadObjectRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 20: aruna.api.dataproxy.services.v2.InitMultiPartUploadRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 21: aruna.api.dataproxy.services.v2.UploadPartRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 22: aruna.api.dataproxy.services.v2.CompleteMultiPartUploadRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	41, // 23: aruna.api.dataproxy.services.v2.CompleteMultiPartUploadRequest.completed_parts:type_name -> aruna.api.dataproxy.services.v2.CompletedPart
	30, // 24: aruna.api.dataproxy.services.v2.DeleteObjectRequest.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	30, // 25: aruna.api.dataproxy.services.v2.InitLocationResponse.location:type_name -> aruna.api.dataproxy.services.v2.ObjectLocation
	55, // 26: aruna.api.dataproxy.services.v2.IngestResource.authors:type_name -> aruna.api.storage.models.v2.Author
	56, // 27: aruna.api.dataproxy.services.v2.IngestResource.key_values:type_name -> aruna.api.storage.models.v2.KeyValue
	57, // 28: aruna.api.dataproxy.services.v2.IngestResource.relations:type_name -> aruna.api.storage.models.v2.Relation
	58, // 29: aruna.api.dataproxy.services.v2.IngestResource.data_class:type_name -> aruna.api.storage.models.v2.DataClass
	59, // 30: aruna.api.dataproxy.services.v2.IngestResource.hashes:type_name -> aruna.api.storage.models.v2.Hash
	52, // 31: aruna.api.dataproxy.services.v2.IngestExistingObjectRequest.collection_resource:type_name -> aruna.api.dataproxy.services.v2.IngestResource
	52, // 32: aruna.api.dataproxy.services.v2.IngestExistingObjectRequest.dataset_resource:type_name -> aruna.api.dataproxy.services.v2.IngestResource
	52, // 33: aruna.api.dataproxy.services.v2.IngestExistingObjectRequest.object:type_name -> aruna.api.dataproxy.services.v2.IngestResource
	7,  // 34: aruna.api.dataproxy.services.v2.DataproxyReplicationService.PullReplication:input_type -> aruna.api.dataproxy.services.v2.PullReplicationRequest
	15, // 35: aruna.api.dataproxy.services.v2.DataproxyReplicationService.PushReplication:input_type -> aruna.api.dataproxy.services.v2.PushReplicationRequest
	31, // 36: aruna.api.dataproxy.services.v2.DataproxyBackendService.PutObject:input_type -> aruna.api.dataproxy.services.v2.PutObjectRequest
	33, // 37: aruna.api.dataproxy.services.v2.DataproxyBackendService.GetObject:input_type -> aruna.api.dataproxy.services.v2.GetObjectRequest
	35, // 38: aruna.api.dataproxy.services.v2.DataproxyBackendService.HeadObject:input_type -> aruna.api.dataproxy.services.v2.HeadObjectRequest
	37, // 39: aruna.api.dataproxy.services.v2.DataproxyBackendService.InitMultiPartUpload:input_type -> aruna.api.dataproxy.services.v2.InitMultiPartUploadRequest
	39, // 40: aruna.api.dataproxy.services.v2.DataproxyBackendService.UploadPart:input_type -> aruna.api.dataproxy.services.v2.UploadPartRequest
	42, // 41: aruna.api.dataproxy.services.v2.DataproxyBackendService.CompleteMultiPartUpload:input_type -> aruna.api.dataproxy.services.v2.CompleteMultiPartUploadRequest
	44, // 42: aruna.api.dataproxy.services.v2.DataproxyBackendService.CreateBucket:input_type -> aruna.api.dataproxy.services.v2.CreateBucketRequest
	46, // 43: aruna.api.dataproxy.services.v2.DataproxyBackendService.DeleteBucket:input_type -> aruna.api.dataproxy.services.v2.DeleteBucketRequest
	48, // 44: aruna.api.dataproxy.services.v2.DataproxyBackendService.DeleteObject:input_type -> aruna.api.dataproxy.services.v2.DeleteObjectRequest
	50, // 45: aruna.api.dataproxy.services.v2.DataproxyBackendService.InitLocation:input_type -> aruna.api.dataproxy.services.v2.InitLocationRequest
	17, // 46: aruna.api.dataproxy.services.v2.DataproxyUserService.GetCredentials:input_type -> aruna.api.dataproxy.services.v2.GetCredentialsRequest
	19, // 47: aruna.api.dataproxy.services.v2.DataproxyUserService.CreateOrUpdateCredentials:input_type -> aruna.api.dataproxy.services.v2.CreateOrUpdateCredentialsRequest
	21, // 48: aruna.api.dataproxy.services.v2.DataproxyUserService.RevokeCredentials:input_type -> aruna.api.dataproxy.services.v2.RevokeCredentialsRequest
	24, // 49: aruna.api.dataproxy.services.v2.DataproxyUserService.PushReplica:input_type -> aruna.api.dataproxy.services.v2.PushReplicaRequest
	26, // 50: aruna.api.dataproxy.services.v2.DataproxyUserService.PullReplica:input_type -> aruna.api.dataproxy.services.v2.PullReplicaRequest
	28, // 51: aruna.api.dataproxy.services.v2.DataproxyUserService.ReplicationStatus:input_type -> aruna.api.dataproxy.services.v2.ReplicationStatusRequest
	53, // 52: aruna.api.dataproxy.services.v2.DataproxyIngestionService.IngestExistingObject:input_type -> aruna.api.dataproxy.services.v2.IngestExistingObjectRequest
	12, // 53: aruna.api.dataproxy.services.v2.DataproxyReplicationService.PullReplication:output_type -> aruna.api.dataproxy.services.v2.PullReplicationResponse
	16, // 54: aruna.api.dataproxy.services.v2.DataproxyReplicationService.PushReplication:output_type -> aruna.api.dataproxy.services.v2.PushReplicationResponse
	32, // 55: aruna.api.dataproxy.services.v2.DataproxyBackendService.PutObject:output_type -> aruna.api.dataproxy.services.v2.PutObjectResponse
	34, // 56: aruna.api.dataproxy.services.v2.DataproxyBackendService.GetObject:output_type -> aruna.api.dataproxy.services.v2.GetObjectResponse
	36, // 57: aruna.api.dataproxy.services.v2.DataproxyBackendService.HeadObject:output_type -> aruna.api.dataproxy.services.v2.HeadObjectResponse
	38, // 58: aruna.api.dataproxy.services.v2.DataproxyBackendService.InitMultiPartUpload:output_type -> aruna.api.dataproxy.services.v2.InitMultiPartUploadResponse
	40, // 59: aruna.api.dataproxy.services.v2.DataproxyBackendService.UploadPart:output_type -> aruna.api.dataproxy.services.v2.UploadPartResponse
	43, // 60: aruna.api.dataproxy.services.v2.DataproxyBackendService.CompleteMultiPartUpload:output_type -> aruna.api.dataproxy.services.v2.CompleteMultiPartUploadResponse
	45, // 61: aruna.api.dataproxy.services.v2.DataproxyBackendService.CreateBucket:output_type -> aruna.api.dataproxy.services.v2.CreateBucketResponse
	47, // 62: aruna.api.dataproxy.services.v2.DataproxyBackendService.DeleteBucket:output_type -> aruna.api.dataproxy.services.v2.DeleteBucketResponse
	49, // 63: aruna.api.dataproxy.services.v2.DataproxyBackendService.DeleteObject:output_type -> aruna.api.dataproxy.services.v2.DeleteObjectResponse
	51, // 64: aruna.api.dataproxy.services.v2.DataproxyBackendService.InitLocation:output_type -> aruna.api.dataproxy.services.v2.InitLocationResponse
	18, // 65: aruna.api.dataproxy.services.v2.DataproxyUserService.GetCredentials:output_type -> aruna.api.dataproxy.services.v2.GetCredentialsResponse
	20, // 66: aruna.api.dataproxy.services.v2.DataproxyUserService.CreateOrUpdateCredentials:output_type -> aruna.api.dataproxy.services.v2.CreateOrUpdateCredentialsResponse
	22, // 67: aruna.api.dataproxy.services.v2.DataproxyUserService.RevokeCredentials:output_type -> aruna.api.dataproxy.services.v2.RevokeCredentialsResponse
	25, // 68: aruna.api.dataproxy.services.v2.DataproxyUserService.PushReplica:output_type -> aruna.api.dataproxy.services.v2.PushReplicaResponse
	27, // 69: aruna.api.dataproxy.services.v2.DataproxyUserService.PullReplica:output_type -> aruna.api.dataproxy.services.v2.PullReplicaResponse
	29, // 70: aruna.api.dataproxy.services.v2.DataproxyUserService.ReplicationStatus:output_type -> aruna.api.dataproxy.services.v2.ReplicationStatusResponse
	54, // 71: aruna.api.dataproxy.services.v2.DataproxyIngestionService.IngestExistingObject:output_type -> aruna.api.dataproxy.services.v2.IngestExistingObjectResponse
	53, // [53:72] is the sub-list for method output_type
	34, // [34:53] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_init() }
func file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_init() {
	if File_aruna_api_dataproxy_services_v2_dataproxy_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoAckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkAckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryChunkMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullReplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushReplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushReplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrUpdateCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushReplicaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushReplicaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullReplicaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullReplicaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMultiPartUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMultiPartUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletedPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteMultiPartUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteMultiPartUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestExistingObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestExistingObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ErrorMessage_RetryChunk)(nil),
		(*ErrorMessage_Abort)(nil),
		(*ErrorMessage_RetryObjectId)(nil),
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*PullReplicationRequest_InitMessage)(nil),
		(*PullReplicationRequest_InfoAckMessage)(nil),
		(*PullReplicationRequest_ChunkAckMessage)(nil),
		(*PullReplicationRequest_ErrorMessage)(nil),
		(*PullReplicationRequest_FinishMessage)(nil),
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*PullReplicationResponse_Handshake)(nil),
		(*PullReplicationResponse_ObjectInfo)(nil),
		(*PullReplicationResponse_Chunk)(nil),
		(*PullReplicationResponse_FinishMessage)(nil),
		(*PullReplicationResponse_Skip)(nil),
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*PushReplicaRequest_ResourceId)(nil),
		(*PushReplicaRequest_S3Path)(nil),
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*PullReplicaRequest_ResourceId)(nil),
		(*PullReplicaRequest_S3Path)(nil),
	}
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*IngestExistingObjectRequest_CollectionId)(nil),
		(*IngestExistingObjectRequest_CollectionResource)(nil),
		(*IngestExistingObjectRequest_DatasetId)(nil),
		(*IngestExistingObjectRequest_DatasetResource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_goTypes,
		DependencyIndexes: file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_depIdxs,
		EnumInfos:         file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_enumTypes,
		MessageInfos:      file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_msgTypes,
	}.Build()
	File_aruna_api_dataproxy_services_v2_dataproxy_service_proto = out.File
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_rawDesc = nil
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_goTypes = nil
	file_aruna_api_dataproxy_services_v2_dataproxy_service_proto_depIdxs = nil
}
